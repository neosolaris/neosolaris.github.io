[{"content":"소개 기존에 쓰던 방법은 버전이 너무 오래되었거나 자신의 환경에 맞게 설치하기가 어려웠다.\nWindows 10, 11 에서 WSL2를 이용한 Alpine 설치를 최종 정리한다.\n설치 뿐만 아니라 필요한 환경(docker, git 등)을 자동으로 구성하도록 한다.\n기본적인 테스트를 하고 추가 패키지를 보완한 후 이미지를 백업한다.\n추후 Windows를 재설치하거나 기타 문제가 발생할 경우 백업 이미지를 복원한다.\n또는 다른 PC로 백업 이미지를 사용할 때도 유용하다.\n최소설치만 적용해서 설치파일이나 백업파일을 만들어 두면 빠른 백업, 복구를 할 수 있다.\n나머지는 모두 git으로 불러오면 그만이다.\nWindows version: 11\nWSL version: 2.5.9.0\nalpine version: 3.22\ndocker version: 28.2.2\ngit version 2.49.0\n설치: Install 먼저 적당한 작업 폴더(ex D:\\Linux)를 만들고 PowerShell을 실행한다. 작업 폴더에 alpine minirootfs를 다운 받는다. PowerShell에서 wsl로 설치한다. 설치완료 후 바로 alpine으로 연결되고 # 프롬프트가 뜬다. 이 경우 작업 폴더가 유지되므로 vi로 스크립트를 작성하고 실행해준다. 또는 쉘 내에서 필요한 작업을 직접해도 된다. 작업이 끝나면 wsl를 종료하고 재실행한다. 추후에 재설치 작업을 할 경우 기존 wsl alpine을 제거하고 wsl 설치와 스크립트만 실행하거나 백업된 이미지를 복원하는 방식으로 진행하면 되겠다. Alpine minirootfs 설치 Alpine mini root filesystem (x86_64)를 다운로드 https://alpinelinux.org/downloads/ wsl에 설치: PowerShell --name \u0026lt;WSL 이름\u0026gt; --from-file \u0026lt;Alpine minirootfs파일 경로\u0026gt; PS\u0026gt; wsl --install --name Alpine322 --from-file alpine-minirootfs-3.22.0-x86_64.tar.gz wsl 설치 폴더: %userprofile%\\AppData\\Local\\Packages\\Canonical...\\LocalState\\ext4.vhdx Windows 탐색기 경로: \\\\wsl$\\Alpinexxx path WSL Alpine에서 윈도우즈 파일 시스템 접근: cd /mnt/c/Users/XXXX 이후 패키지 설치 및 설정 작업 Alpine Linux Add Packgage and Setup 다음 스크립트를 작성하고 실행한다. /etc/wsl.conf에 필요한 설정을 포함한다. 다음을 참고. https://learn.microsoft.com/en-us/windows/wsl/wsl-config # ./install-alpine-wsl.sh # exit PowerShell에서 alpine 재실행 PS\u0026gt; wsl --shutdown PS\u0026gt; wsl -d Alpine322 \u0026lsquo;D:\\Linux\\install-alpine-wsl.sh\u0026rsquo; 다음을 참고해서 자신에게 필요한 내용을 첨삭하면 된다. 아래의 경우는 User를 생성하고 Local Time을 KST로 했다. Docker를 위해 openrc, docker설치 및 일반유저(borisu)에게 그룹권한 설정을 적용. Shell은 최소한의 쉘 ash를 사용 (대부분의 사용환경은 Docker를 이용할 예정) ssh, git 설치와 전에 사용 중이던 .ssh 폴더를 사용자 홈에 추가. # Var Set HOST=\u0026#39;Alpine322\u0026#39; USER=\u0026#39;borisu\u0026#39; TZ=\u0026#39;Asia/Seoul\u0026#39; PKGS=\u0026#39;tzdata doas git openssl openssh openrc docker\u0026#39; WSLCONF=\u0026#39;/etc/wsl.conf\u0026#39; # HostName Set: $HOST: wsl change method echo -e \u0026#34;[network]\\nhostname = $HOST\\n\u0026#34; \u0026gt; $WSLCONF # TimeZone Set: Asia/Seoul echo \u0026#34;---\u0026gt; Time Zone Set: $TZ\u0026#34; cp /usr/share/zoneinfo/$TZ /etc/localtime \u0026amp;\u0026amp; \\ echo $TZ \u0026gt; /etc/timezone # User Set echo \u0026#34;---\u0026gt; User Set: ${USER} id:1000\u0026#34; adduser -D -h /home/${USER} -s /bin/ash $USER addgroup borisu docker echo \u0026#34;permit nopass $USER as root\u0026#34; \u0026gt; /etc/doas.d/doas.conf echo -e \u0026#34;[user]\\ndefault = borisu\\n\u0026#34; \u0026gt;\u0026gt; $WSLCONF # Openrc Setup echo \u0026#34;---\u0026gt; Openrc Setup for Docker of user $USER\u0026#34; touch /etc/network/interfaces rc-update add docker default #rc-update echo -e \u0026#34;[boot]\\ncommand = \\\u0026#34;openrc default\\\u0026#34;\\n\u0026#34; \u0026gt;\u0026gt; $WSLCONF # Copy Files User Data echo \u0026#34;---\u0026gt; Copy Files User Data: .profile .ashrc .gitconfig .ssh/ \u0026#34; su - $USER -c \u0026#34;mkdir git\u0026#34; su - $USER -c \u0026#34;tar xvf $PWD/user.tar\u0026#34; default user setup: PowerShell (/etc/wsl.conf에 설정해서 넣어두면 아래 작업 불필요) PS\u0026gt; wsl --manage Alpine322 --set-default-user borisu 백업: Export 사용 중 어느 시점에서 백업하는 방법이다. 현재 디렉토리에 Alpine322.tar로 백업된다. 백업 전에 wsl -t로 alpine 중지. PS\u0026gt; wsl -l -v PS\u0026gt; wsl -t Alpine322 PS\u0026gt; wsl --export Alpine322 .\\Alpine322.tar 제거: Unregister 설치된 WSL을 제거하는 방법이다. 제거 전에 반드시 백업이 되어 있는 지 확인한다. PS\u0026gt; wsl -l -v PS\u0026gt; wsl -t Alpine322 # optional PS\u0026gt; wsl --unregister Alpine322 PS\u0026gt; wsl -l -v 복구: Import 복구할 경우에는 아래 세 개의 인자가 있으므로 유의한다.\n복구할 때 기존 다른 WSL과 이름이 충돌하지 않도록 한다.\n복구 시 두 번째 인자(WSL_STORE_DIR)에 이미지가 저장되므로 유의하자.\n`wsl \u0026ndash;import \u0026lt;WSL_NAME\u0026gt; \u0026lt;WSL_STORE_DIR\u0026gt; \u0026lt;WSL_IMPORT_FILE_DIR\u0026gt;``\nImported Folder : \u0026lt;WSL_STORE_DIR\u0026gt; (ex. c:\\WSL\\Alpine322\\ext4.vhdx)\nPS\u0026gt; wsl --import Alpine322 c:\\WSL\\Alpine322 .\\Alpine322.tar ","permalink":"https://neosolaris.github.io/posts/wsl_alpine_docker_git/","summary":"\u003ch2 id=\"소개\"\u003e소개\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e기존에 쓰던 방법은 버전이 너무 오래되었거나 자신의 환경에 맞게 설치하기가 어려웠다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWindows 10, 11 에서 WSL2를 이용한 Alpine 설치를 최종 정리한다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e설치 뿐만 아니라 필요한 환경(docker, git 등)을 자동으로 구성하도록 한다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e기본적인 테스트를 하고 추가 패키지를 보완한 후 이미지를 백업한다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e추후 Windows를 재설치하거나 기타 문제가 발생할 경우 백업 이미지를 복원한다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e또는 다른 PC로 백업 이미지를 사용할 때도 유용하다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e최소설치만 적용해서 설치파일이나 백업파일을 만들어 두면 빠른 백업, 복구를 할 수 있다.\u003c/p\u003e","title":"Windows WSL Alpine Linux - Docker - Git 설치 및 환경"},{"content":"이곡을 알게 된 계기는 세브란스:단절 시즌 2 마지막 장면에서이다. 상황과 잘 들어 맞는 것 같다. 노래 가사나 가수의 목소리, 감정들과 무언가 무상한 인생사 등 여러가지가 마음 속에서 출렁거리게 한다.\nSinne Eag가 부른 것도 들어볼만하다. The Windmills Of Your Mind\nRound like a circle in a spiral 나선형 속의 원처럼 Like a wheel within a wheel 바퀴속의 바퀴처럼 Never ending nor beginning 시작도 끝도 없이 On an ever spinning reel 영원히 돌기만하는 얼레(실패)처럼 도는 Like a snowball down a mountain or a carnival balloon 카니발 풍선 혹은 산에서 내려오는 눈덩이처럼 Like a carousel that\u0026#39;s turning 도는 회전목마처럼 Running rings around the moon 고리 주위를 도는 달처럼 Like a clock whose hands are sweeping 바늘이 휩쓰는 시계처럼 Past the minutes of its face 시계 판의 분을 지나 And the world is like an apple Whirling silently in space 우주 공간을 조용히 휘도는 사과 같은 세상처럼 Like the circles that you find in the windmills of your mind 네 마음의 풍차에서 발견하는 원들처럼 Like a tunnel you can follow to a tunnel of its own 자신만의 터널을 쫓아가는 터널처럼 Down a hollow to a cavern where the sun has never shone 해가 비추지 않는 큰 동굴로 텅 빈 곳을 가며 Like a door that keeps revolving in a half forgotten dream 반쯤 잊힌 꿈속에서 계속 도는 문처럼 Or the ripples from a pebble Someone tosses in a stream 혹은 누군가 물속에 던진 조약돌의 잔물결처럼 Like a clock whose hands are sweeping 바늘이 휩쓰는 시계처럼 Past the minutes of its face 시계 판의 분을 지나 And the world is like an apple Whirling silently in space 우주 공간을 조용히 휘도는 사과 같은 세상처럼 Like the circles that you find in the windmills of your mind 네 마음의 풍차에서 발견하는 원들처럼 Keys that jingle in your pocket 주머니 속에서 짤랑거리는 열쇠 Words that jangle in your head 머릿속에서 땡그랑 거리는 말 Why did Summer go so quickly 왜 그렇게 여름은 빨리 갔을까 Was it something that you said? 그건 네가 말한 거였나? Lovers walk along a shore 연인들은 해변을 걷고 And leave their footprints in the sand 모래에 발자국을 남기지 Was the sound of distant drumming 멀리서 들리는 드럼소리는 Just the fingers of your hand? 네 손의 손가락이었나? Pictures hanging in a hallway 복도에 걸려 있는 그림들 Or the fragment of a song 혹은 노래의 조각 Half remembered names and faces 반쯤 기억나는 이름들과 얼굴들 But to whom do they belong? 그것들은 누구의 것이지? When you knew that it was over 끝났다는 걸 알았을 때 Were you suddenly aware 너는 갑자기 That the autumn leaves were turning 가을 잎들이 To the colour of her hair 그녀의 머리색으로 바뀌는 걸 알았니? A circle in a spiral 나선형의 원 A wheel within a wheel 바퀴 속의 바퀴 Never ending nor beginning 시작도 끝도 없는 On an ever-spinning reel 영원히 도는 얼레 As the images unwind 이미지들이 풀리면서 Like the circles that you find in the windmills of your mind 네 맘의 풍차에서 발견한 원들처럼 REFERENCE 가사 및 곡 설명: https://hyunjiwoon.tistory.com/3734 노래 듣기: https://youtu.be/Wc-V5-EVKc4 season2 OST: https://youtu.be/spz05JIHrPA 시즌2 OST 마지막곡도 좋음: https://youtu.be/udSbp_ztZ_k ","permalink":"https://neosolaris.github.io/posts/the-windmills-of-your-mind/","summary":"\u003cp\u003e이곡을 알게 된 계기는 세브란스:단절 시즌 2 마지막 장면에서이다. 상황과 잘 들어 맞는 것 같다. 노래 가사나 가수의 목소리, 감정들과 무언가 무상한 인생사 등 여러가지가 마음 속에서 출렁거리게 한다.\u003c/p\u003e\n\u003ch2 id=\"hahahugoshortcode136s0hbhb\"\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/Wc-V5-EVKc4?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSinne Eag가 부른 것도 들어볼만하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/67gHlsWiKp0?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003chr\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003eThe Windmills Of Your Mind\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e","title":"music - The Windmills Of Your Mind"},{"content":"WezTerm은 GPU 가속을 지원하는 고성능 터미널 에뮬레이터로, Windows, macOS, Linux 등 다양한 운영체제에서 사용할 수 있다. 개인적으로 더욱 좋은 것은 Lua 기반의 설정을 제공한다는 것이다. 탭/분할 창, 이미지 표시, SSH 멀티플렉싱 등 현대적인 다양한 기능을 제공합니다.\n소개 이유 빠른 화면 속도 Lua로 설정 tmux를 대체할 수 있고 오히려 더 편리한 사용성 터미널 내 복사, 붙여넣기, 검색 등의 편리함 다양한 테마와 Nerd Font 기본 지원, 폰트 별도 설치 불필요 왜 그동안 이걸 몰랐을까? 정말 모던하고 깔끔하고 안정적이고 풍부한 기능 제공 주요 기능 크로스 플랫폼 지원: Windows, macOS, Linux. GPU 가속: 부드러운 렌더링 성능. 탭/분할 창: 다중 작업 환경 지원. Lua 설정: 사용자 정의 가능한 테마, 키 바인딩, 동작. 이미지/폰트 지원: Sixel, Iterm2 이미지 및 Nerd Fonts. SSH 멀티플렉싱: 단일 연결로 다중 세션 관리. 설치 다음 링크에 여러 플랫폼 별 설치법이 나와 있다.\nhttps://wezterm.org/installation.html Alpine Linux\n$ doas apk add wezterm Windows install using Chocolatey $ choco install wezterm -y 기본 키 매핑 WezTerm에는 이미 많은 기본 키 매핑이 포함되어 있다. 다음은 일부 중요한 기본 매핑들이다:\n일반 명령어:\nCtrl + N: 새 세션 생성 Ctrl + W: 현재 세션 닫기 Ctrl + Tab: 활성 세션 전환 Ctrl + Shift + C: 복사 Ctrl + Shift + V: 붙여넣기 Ctrl + /: 현재 컨텍스트 팁 표시 Ctrl + Q: 전체적인 사용법 안내 창 관리:\nCtrl + Shift + 화살표: 창 이동 Ctrl + Alt + 화살표: 창 크기 조절 테마 및 모드:\nCtrl + Shift + P: 빠른 메뉴 (테마 선택) Ctrl + ,: 설정 열기 스크린샷:\nCtrl + Shift + S: 현재 패널 스크린샷 캡처 기본 설정 설정 파일\n1차: $HOME/.config/wezterm/init.lua 2차: $HOME/.wezterm.lua 설정 적용\nwezterm 재실행 또는 설정 파일 수정 시 바로 적용 설정 예제\nfont: 사용할 폰트를 설정. font_size: 폰트 크기를 설정. color_scheme: 사용할 색상 테마를 설정. window_background_opacity: 배경 투명도를 설정. enable_tab_bar: 탭 바의 표시 여부를 설정. keys: 사용자 정의 키 바인딩을 설정. local wezterm = require \u0026#39;wezterm\u0026#39;; return { font = wezterm.font(\u0026#34;Fira Code\u0026#34;), font_size = 12.0, color_scheme = \u0026#34;Dracula\u0026#34;, window_background_opacity = 0.9, enable_tab_bar = true, keys = { {key=\u0026#34;t\u0026#34;, mods=\u0026#34;CTRL|SHIFT\u0026#34;, action=wezterm.action{ SpawnTab=\u0026#34;CurrentPaneDomain\u0026#34;} }, {key=\u0026#34;w\u0026#34;, mods=\u0026#34;CTRL|SHIFT\u0026#34;, action=\u0026#34;CloseCurrentTab\u0026#34;}, }, } Windows + WSL 환경 설정 윈도우즈용 Wezterm 설치 작업표시줄에 등록 윈도우즈 사용자홈내에 C:\\Users\\사용자명\\.wezterm.lua 다음과 같이 설정 아래 예제는 wsl의 Alpine318 리눅스를 wezterm 실행시에 기본 동작하는 예. 나머지는 개인 취향 -- Pull in the wezterm API local wezterm = require \u0026#39;wezterm\u0026#39; -- This will hold the configuration. local config = wezterm.config_builder() --// WSL ALpine Linux 기본 로드 -- This is where you actually apply your config choices --config.default_prog = {\u0026#34;powershell.exe\u0026#34;, \u0026#34;-NoLogo\u0026#34;} --config.default_prog = {\u0026#34;wsl.exe -d Alpine318\u0026#34;} -- 아래 wsl을 기본으로 설정하는 방법인데 bash 서브쉘을 여러개 생성한다는 문제가 있다. --config.default_prog = {\u0026#34;wsl.exe\u0026#34;, \u0026#34;-d\u0026#34;, \u0026#34;Alpine318\u0026#34;, \u0026#34;-e\u0026#34;, \u0026#34;bash\u0026#34;, \u0026#34;-l\u0026#34;, \u0026#34;-c\u0026#34;, \u0026#34;cd ~; exec bash\u0026#34;} -- 다음 방법으로 해결: domain 설정 config.default_domain = \u0026#39;WSL:Alpine318\u0026#39; -- 폰트 설정 --config.font = wezterm.font(\u0026#34;Your Font Name\u0026#34;) --config.font_size = 10.0 config.font_size = 11.0 --// Window Size 변경 (문자의 종수, 횡수) config.window_decorations = \u0026#34;RESIZE\u0026#34; config.initial_cols = 116 config.initial_rows = 58 -- color scheme 설정 --config.color_scheme = \u0026#39;AdventureTime\u0026#39; --config.color_scheme = \u0026#39;Batman\u0026#39; config.color_scheme = \u0026#39;Tokyo Night\u0026#39; --config.color_scheme = \u0026#39;Catppuccin Mocha\u0026#39; -- 줄바꿈 처리 설정(Windows에서 WSL 또는 Linux 터미널 사용시) config.canonicalize_pasted_newlines = \u0026#34;None\u0026#34; return config Tab 추가시 확장 설정 $HOME/.wezterm.lua에 다음 프로파일을 추가한다. (윈도우즈의 경우 사용자 홈 폴더) 저장하고 wezterm을 재실행한다. -- Pull in the wezterm API local wezterm = require \u0026#39;wezterm\u0026#39; -- This will hold the configuration. local config = wezterm.config_builder() -- This is where you actually apply your config choices -- config.default_prog : 실행시 기본 프로그램 등록 config.default_prog = {\u0026#34;wsl.exe\u0026#34;, \u0026#34;-d\u0026#34;, \u0026#34;Alpine318\u0026#34;, \u0026#34;-e\u0026#34;, \u0026#34;bash\u0026#34;, \u0026#34;-l\u0026#34;, \u0026#34;-c\u0026#34;, \u0026#34;cd ~; exec bash\u0026#34;} -- 프로파일 추가 -- config.launch_menu: 등록된 label들은 상단 탭의 \u0026#39;+\u0026#39;를 마우스 우클릭하여 선택하면 실행된다. config.launch_menu = { { label = \u0026#34;Alpine318\u0026#34;, --args = {\u0026#34;wsl.exe\u0026#34;}, args = {\u0026#34;wsl.exe\u0026#34;, \u0026#34;-d\u0026#34;, \u0026#34;Alpine318\u0026#34;, \u0026#34;-e\u0026#34;, \u0026#34;bash\u0026#34;, \u0026#34;-l\u0026#34;, \u0026#34;-c\u0026#34;, \u0026#34;cd ~; exec bash\u0026#34;}, }, { label = \u0026#34;Busybox64\u0026#34;, args = {\u0026#34;C:\\\\Users\\\\batut\\\\bin\\\\busybox64.exe\u0026#34;, \u0026#34;bash\u0026#34;, \u0026#34;-l\u0026#34;}, }, { label = \u0026#34;Busybox64u\u0026#34;, args = {\u0026#34;C:\\\\Users\\\\batut\\\\bin\\\\busybox64u.exe\u0026#34;, \u0026#34;bash\u0026#34;, \u0026#34;-l\u0026#34;}, }, { label = \u0026#34;GSL-Shell\u0026#34;, args = {\u0026#34;C:\\\\Users\\\\batut\\\\gsl-shell\\\\gsl-shell.exe\u0026#34;}, }, { label = \u0026#34;PowerShell\u0026#34;, --args = {\u0026#34;powershell.exe\u0026#34;, \u0026#34;-NoExit\u0026#34;, \u0026#34;-Command\u0026#34;, \u0026#34;Start-Process PowerShell -Verb RunAs\u0026#34;}, args = {\u0026#34;powershell.exe\u0026#34;}, }, } 윈도우즈에서 유닉스 명령 환경 구성 Busybox64는 윈도우즈 환경에서 busybox를 통해 unix 명령어를 사용하기위한 좋은 방법이다. 윈도우즈에서 간단히 파일 편집, 이동, 파일 조작 등 익숙한 172개의 명령어 사용가능. Shell Script 작성도 가능 : sh, bash, vi 등으로 여러 작업 자동화 스크립트 작성. 가벼운 작업만 한다면 cygwin, msys2, git for windows 등이 굳이 필요치 않다. busybox.exe(32bit), busybox64.exe(64bit), busybox64u.exe (64bit unicode) 중 선택해서 사용한다. 다운로드: https://frippery.org/busybox/ busybox.exe bash -l : bash 쉘 환경으로 터미널이 실행된다. (sh, ash, bash 지원) busybox.exe --list : 사용할 수 있는 unix 명령들 목록 (sed, awk, grep, make, wget, vi, ..) busybox.exe --help : 도움말 REFERENCE wezterm home: http://wezterm.org config help: https://wezfurlong.org/wezterm/config/lua.html busybox home: https://frippery.org/busybox/ busybox github: https://github.com/rmyorston/busybox-w32 ","permalink":"https://neosolaris.github.io/posts/wezterm/","summary":"\u003cp\u003e\u003cstrong\u003eWezTerm\u003c/strong\u003e은 GPU 가속을 지원하는 고성능 터미널 에뮬레이터로, Windows, macOS, Linux 등 다양한 운영체제에서 사용할 수 있다.\n개인적으로 더욱 좋은 것은 Lua 기반의 설정을 제공한다는 것이다.\n탭/분할 창, 이미지 표시, SSH 멀티플렉싱 등 현대적인 다양한 기능을 제공합니다.\u003c/p\u003e\n\u003ch2 id=\"소개-이유\"\u003e소개 이유\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e빠른 화면 속도\u003c/li\u003e\n\u003cli\u003eLua로 설정\u003c/li\u003e\n\u003cli\u003etmux를 대체할 수 있고 오히려 더 편리한 사용성\u003c/li\u003e\n\u003cli\u003e터미널 내 복사, 붙여넣기, 검색 등의 편리함\u003c/li\u003e\n\u003cli\u003e다양한 테마와 Nerd Font 기본 지원, 폰트 별도 설치 불필요\u003c/li\u003e\n\u003cli\u003e왜 그동안 이걸 몰랐을까? 정말 모던하고 깔끔하고 안정적이고 풍부한 기능 제공\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"주요-기능\"\u003e\u003cstrong\u003e주요 기능\u003c/strong\u003e\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e크로스 플랫폼 지원\u003c/strong\u003e: Windows, macOS, Linux.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGPU 가속\u003c/strong\u003e: 부드러운 렌더링 성능.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e탭/분할 창\u003c/strong\u003e: 다중 작업 환경 지원.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLua 설정\u003c/strong\u003e: 사용자 정의 가능한 테마, 키 바인딩, 동작.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e이미지/폰트 지원\u003c/strong\u003e: Sixel, Iterm2 이미지 및 Nerd Fonts.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSSH 멀티플렉싱\u003c/strong\u003e: 단일 연결로 다중 세션 관리.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"설치\"\u003e설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e다음 링크에 여러 플랫폼 별 설치법이 나와 있다.\u003c/p\u003e","title":"Wezterm - Terminal Emulator"},{"content":" 위키문서를 관리하기 위한 홈페이지. 번잡하고 화려한 기술과 지나친 관리 용량을 피한다. 컴퓨터와 개인 관심사 일반을 문서로 정리한다. Unix의 철학, 작은 것이 아름답다를 실천한다. 최종 목표는 손쉬운 문서 작성과 관리를 단순화 하는 것. 문서는 시간이 지날 수록 완성되고 조직화될 것이다. ","permalink":"https://neosolaris.github.io/about/","summary":"\u003cul\u003e\n\u003cli\u003e위키문서를 관리하기 위한 홈페이지.\u003c/li\u003e\n\u003cli\u003e번잡하고 화려한 기술과 지나친 관리 용량을 피한다.\u003c/li\u003e\n\u003cli\u003e컴퓨터와 개인 관심사 일반을 문서로 정리한다.\u003c/li\u003e\n\u003cli\u003eUnix의 철학, \u003ccode\u003e작은 것이 아름답다\u003c/code\u003e를 실천한다.\u003c/li\u003e\n\u003cli\u003e최종 목표는 손쉬운 문서 작성과 관리를 단순화 하는 것.\u003c/li\u003e\n\u003cli\u003e문서는 시간이 지날 수록 완성되고 조직화될 것이다.\u003c/li\u003e\n\u003c/ul\u003e","title":"About"},{"content":"세계는 왜 이토록 폭력적이고 고통스러운가? 동시에 세계는 어떻게 이렇게 아름다운가? 한강 작가의 노벨문학상 수상 인터뷰 중에서 그렇게 자료 작업을 하던 시기에 내가 떠올리곤 했던 두 개의 질문이 있다. 이십대 중반에 일기장을 바꿀 때마다 맨 앞페이지에 적었던 문장들이다.\n현재가 과거를 도울 수 있는가? 산 자가 죽은 자를 구할 수 있는가? 자료을 읽을수록 이 질문들은 불가능한 것으로 판명되는 듯했다. 인간성의 가장 어두운 부분들을 지속적으로 접하며, 오래 전에 금기 갔다고 생각했던 인간성에 대한 믿음이 마저 깨어지고 부서지는 경험을 했기 때문이다. 이 소설을 쓰는 일을 더이상 진척할 수 없겠다고 거의 체념했을 때 한 젊은 야학 교사의 일기를 읽었다. 1980년 오월 당시 광주에서 군인들이 잠시 물러간 뒤 열흘 동안 이루어졌던 시민자치의 절대공동체에 참여했으며, 군인들이 되돌아오기로 예고된 새벽까지 도청 옆 YMCA에 남아 있다 살해되었던, 수줍은 성격의 조용한 사람이었다는 박용준은 마지막 밤에 이렇게 썼다. \u0026ldquo;하느님, 왜 저에게는 양심이 있어 이렇게 저를 찌르고 아프게 하는 것입니까? 저는 살고 싶습니다.\u0026rdquo;\n그 문장들을 읽는 순간, 이 소설이 어느 쪽으로 가야 하는지 벼락처럼 알게 되었다. 두 개의 질문을 이렇게 거꾸로 뒤집어야 한다는 것도 깨닫게 되었다.\n과거가 현재를 도울 수 있는가? 죽은 자가 산 자를 구할 수 있는가? 2024년 또 한 번의 계엄 한국에서 2024년 12월 3일 계엄이 선포되었다. 찾아 보니 1948년 여수순천사건을 시작으로 17번이나 있었고 내가 살면서 겪은 계엄은 72년 10월 유신, 79년 부마민주항쟁, 79년 10.26사태, 24년 윤석열의 12.3계엄으로 총 4번이다. 하지만 앞의 세 번은 내가 너무 어렸을 때라 대학에 가서야 구체적으로 알게 되었다.\n나이가 중년 후반으로 접어들어서 겪은 것은 올해의 계엄이다. 충격적이다. 지금 한국 사회는 정말 말할 수 없는 혼돈으로 쓸려가고 있다. 한강 작가의 노벨상으로 감격하고 자랑스러운 기분도 잠시, 그녀가 노벨상을 수상하기 위해 스톡홀롬으로 간 사이 소년이 온다의 작품에서 묘사하는 광주의 비극이 또 일어났다. 그녀는 지금 어떤 심정이고 또 우리들은 또 어떠했는가?\n누구는 아픔으로, 고통으로, 괴로움으로, 분노로, 슬픔으로 광장에 나와 촛불 집회에 참가했다.\n과거가 현재를 도울 수 있는가? - 그렇다 적어도 이번에는 과거가 도와 주었다.\n죽은 자가 산 자를 구할 수 있는가? - 그렇다 적어도 이번에는 산 자를 구했다.\n그래서 이 인터뷰를 접하고 지극히 단순하고 명료한 두 줄의 문장을 읽으니 나도 모르게 눈물이 났다. 그리고 또 울었다. 작가의 고민과 깊이, 통찰에 감격하지 않을 수 없다.\n과거가 현재를 돕고 죽은 자가 산 자를 살려 오늘의 계엄을 몰아내고 있다.\n","permalink":"https://neosolaris.github.io/posts/hangang-novelprize/","summary":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e세계는 왜 이토록 폭력적이고 고통스러운가?\n동시에\n세계는 어떻게 이렇게 아름다운가?\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"한강-작가의-노벨문학상-수상-인터뷰-중에서\"\u003e한강 작가의 노벨문학상 수상 인터뷰 중에서\u003c/h2\u003e\n\u003cp\u003e그렇게 자료 작업을 하던 시기에 내가 떠올리곤 했던 두 개의 질문이 있다.\n이십대 중반에 일기장을 바꿀 때마다 맨 앞페이지에 적었던 문장들이다.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e현재가 과거를 도울 수 있는가?\n산 자가 죽은 자를 구할 수 있는가?\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e자료을 읽을수록 이 질문들은 불가능한 것으로 판명되는 듯했다. 인간성의 가장\n어두운 부분들을 지속적으로 접하며, 오래 전에 금기 갔다고 생각했던 인간성에 대한\n믿음이 마저 깨어지고 부서지는 경험을 했기 때문이다. 이 소설을 쓰는 일을 더이상\n진척할 수 없겠다고 거의 체념했을 때 한 젊은 야학 교사의 일기를 읽었다.\n1980년 오월 당시 광주에서 군인들이 잠시 물러간 뒤 열흘 동안 이루어졌던\n시민자치의 절대공동체에 참여했으며, 군인들이 되돌아오기로 예고된 새벽까지\n도청 옆 YMCA에 남아 있다 살해되었던, 수줍은 성격의 조용한 사람이었다는 박용준은\n마지막 밤에 이렇게 썼다. \u0026ldquo;하느님, 왜 저에게는 양심이 있어 이렇게 저를 찌르고\n아프게 하는 것입니까? 저는 살고 싶습니다.\u0026rdquo;\u003c/p\u003e","title":"과거 현재 죽은 자 산 자 - 한강"},{"content":"Intro 알파인 리눅스에서 패키지만 업그레이드 하거나 OS 자체를 업그레이드 하는 방법을 설명한다.\n패키지 업그레이드 # apk update # apk upgrade OS 업그레이드 기존 패키지 업그레이드 # apk update # apk upgrade 저장소 설정 파일 수정 (ex. 3.18 -\u0026gt; 3.19) # vi /etc/apk/repositories 인덱스 업데이트 및 os 업그레이드 # apk update # apk upgrade --available \u0026amp;\u0026amp; sync # reboot 릴리즈 정보 업그레이드 # rm /etc/alpine-release # apk upgrade --no-self-upgrade --available --simulate # apk upgrade --available # sync # reboot ... # cat /etc/alpine-release # cat /etc/issue REFERENCE How to upgrade Alpine Linux 3.19 to 3.20\nhttps://www.cyberciti.biz/faq/how-to-upgrade-alpine-linux-3-4-to-3-5-xx/ ","permalink":"https://neosolaris.github.io/posts/alpine_upgrade/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003e알파인 리눅스에서 패키지만 업그레이드 하거나 OS 자체를 업그레이드 하는 방법을 설명한다.\u003c/p\u003e\n\u003ch2 id=\"패키지-업그레이드\"\u003e패키지 업그레이드\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# apk update \n# apk upgrade\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"os-업그레이드\"\u003eOS 업그레이드\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e기존 패키지 업그레이드\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# apk update\n# apk upgrade\n\u003c/code\u003e\u003c/pre\u003e\u003col\u003e\n\u003cli\u003e저장소 설정 파일 수정 (ex. 3.18 -\u0026gt; 3.19)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# vi /etc/apk/repositories\n\u003c/code\u003e\u003c/pre\u003e\u003col\u003e\n\u003cli\u003e인덱스 업데이트 및 os 업그레이드\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# apk update\n# apk upgrade --available \u0026amp;\u0026amp; sync\n# reboot\n\u003c/code\u003e\u003c/pre\u003e\u003col\u003e\n\u003cli\u003e릴리즈 정보 업그레이드\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# rm /etc/alpine-release\n# apk upgrade --no-self-upgrade --available --simulate\n# apk upgrade --available\n# sync\n# reboot\n...\n# cat /etc/alpine-release\n# cat /etc/issue\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHow to upgrade Alpine Linux 3.19 to 3.20\u003cbr\u003e\n\u003ca href=\"https://www.cyberciti.biz/faq/how-to-upgrade-alpine-linux-3-4-to-3-5-xx/\"\u003ehttps://www.cyberciti.biz/faq/how-to-upgrade-alpine-linux-3-4-to-3-5-xx/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Alpine Linux Upgrade"},{"content":"vi는 배우는 것이 아니라 몸으로 익히는 것이다. vi는 단순하고 일관성이 있다. Intro 장점 vi의 기본 명령을 제공한다. 단순하고 용량이 작아 임베디드 환경 및 원격지에서 사용하기에 좋다. neatvi로 부터 여러 기능이 추가되었다. vim, nvim과는 다르게 간단한 설정과 빠른 동작이 장점이다. utf-8을 지원한다. 한글 입출력 가능. 쉘명령 출력을 ex-mode(명령라인)에서 터미널 깨짐 없이 불러올 수 있다. 각종 플러그인이 없는 대신 ex-mode에서 터미널 툴과 상호 작용할 수 있다. 개인적으로 vim보다는 nvim을 더 선호한다. lua와 결합된 플러그인과의 연결이 정말 좋기 때문이다. 하지만 단점도 많다. lua를 공부해야하고 또 설정에 적응하려면 많은 시간과 노력이 필요하다. 더군다나 수많은 플러그인을 장착하게 되면 느려지고 무거워진다. 설정이 잘 못 되면 바로 잡느라 삽질을 해야한다. 물론 자신만의 설정을 잘 만들어서 백업해 두었다가 재사용하면 좋다. 하지만 nvim 자체의 패키지 사이즈와 수 많은 플러그인의 사이즈를 생각하면 작고 가볍게라는 말이 무색해진다.\n데비안을 쓰는 경우에는 더욱 문제가 많아진다. 버전이 낮아 플러그인 적용이 어려운 경우가 빈번히 발생한다. 최신 소스를 받아 컴파일하면 되지만 이것도 쉽지 않다. 컴파일 환경을 만들고 필요한 라이브러리를 준비하고 에러가 나면 이를 상황에 맞게 조정해 주어야 한다. 더군다나 라즈베리파이 같은 환경에서는 더더욱 어렵다.\n이러 저러한 문제로 상황에 맞게 작고 가볍고 빠른 vi 에디터를 찾아보기 시작했다. vi의 수많은 변종과 후손들 중에 nvi를 찾았다. 소스를 가져다 컴파일해서 쓰기에도 문제가 없다. 하지만 한글이 지원되지 않는다. 즉 utf8을 지원하지 않는다는 것이다. 이를 패치한 것이 있는 지 알아보았지만 찾을 수 없었다.\n다음은 vis 라는 것을 찾았다. nvim과 같이 lua를 지원하고 더욱 놀라운 것은 여러 줄을 동시에 편집할 수 있는 기능이 있다. 용량도 nvim에 비해 작고 빠르다. 한글도 지원이 된다. 한 동안 공부하면서 사용하다가 조금씩 껄끄러운 면이 드러났다. lua 버전이 최신 버전에 가깝기 때문에 luajit 기반으로 사용하는 입장에서 혼란을 준다. 더군다나 lua 플러그인도 nvim에 비해서 많이 부족하다. 필요한 것이 대부분 없다고 봐도 무방하다. 이것을 사용하는 유일한 장점은 다중 라인 편집이라고 생각한다. 전문 코딩을 하는 것이 아니기 때문에 개인적으로 그렇게 와닿지 않았다.\n그 다음으로 찾은 것이 neatvi이다. 말 그대로 neat한 vi인 것이다. 정말 작고 간단하지만 상태 표시와 코드 문법의 컬러 표시가 지원된다. 165kb 정도의 사이즈이다. 편집에 필요한 기본적인 vi 명령은 모두 지원한다. ex 명령줄에 터미널 명령과 상호 작용도 가능하다. 이것은 정말 놀라운 것이다. 보통 nvim 의 기능과 플러그인에서 제공하는 것을 모두 터미널 명령과의 상호작용으로 해결할 수 있기 때문이다. 더욱 놀라운 것은 터미널의 출력결과가 vim, nvim 등과는 다르게 투명하게 아무 문제 없이 표시된다는 것이다. 즉 컬러와 한글, nerd font 등이 그대로 neatvi 에서 출력된다. ls,find,grep,awk,sed 등 수많은 쉘 명령을 ex 모드에서 조합해 쓸 수 있다. 자주 빈번하게 사용된다면 스크립트나 프로그램을 만들어서 플러그인 역할을 하게 만들면 된다.\nneatvi가 왜 훌륭한가. 여러 가지가 있지만 위에서 언급한 것 이외에 기본 c 라이브러리만을 의존하고 그 어떤 의존성도 없고, 더욱이 utf8을 지원하여 다국어 표시와 입력이 가능하다는 점, 그럼에도 불구하고 작고 빠르다는 것이다. 작은 것이 아름답다라는 유닉스 철학과도 잘 부합한다. 필요한 툴은 터미널 명령어와 상호작용할 수 있다. 에디터는 파일 편집에만 집중하면 된다. 드디어 에디터 찾아 삼만리는 이제 끝을 향하고 있었다.\n참고로 youtube에 neatvi에 대한 소개가 있다. 시작하기 전에 아래 링크를 통해 전체적인 내용을 살펴 보면 좋다.\nhttps://www.youtube.com/watch?v=ZUdnHtvX4l4\u0026amp;pp=ugMICgJrbxABGAHKBQZuZWF0dmk%3D\nneatvi의 주소는 다음과 같다.\nhttps://github.com/aligrudi/neatvi\n작고 가볍고 임베디드 환경 및 여타 조건에서 가볍게 사용할 수 있는 neatvi 를 매우 만족하다가 조금 불편하다는 생각이 들었다. 고성능, 다기능의 nvim을 사용하다 거의 아무 기능도 없는 것을 쓰게 된 후유증 같은 것이다. 예를 들어 줄 번호를 표시할 수 없다거나 워드랩, 현재 디렉토리 내의 파일검색 및 불러오기, 자동 들여쓰기, 문서 내의 단어 완성 지원 등이 그것이다. 그래서 neatvi의 faq나 다른 사람의 요구사항 등을 살펴보다가 분기된 nextvi를 알게 되었다. neatvi로 부터 분기되어 여러 아쉬운 기능을 추가한 버전이다.\n이러한 이유로 nextvi 를 최종적으로 선택하여 사용하게 되었다. 물론 nvim등에 비할 바는 아니겠지만, 최소한의 기능과 성능으로 소스를 편집하거나 문서를 작성하는 데 있어 매우 훌룽하하고 본다. 이에 더하여 conf.c라는 파일에 자신이 선호하는 언어의 컬러를 설정해주고 컴파일해 사용한다면 더욱 쾌적한 환경이 된다. 물론 vi.c 파일을 편집하여 자신만의 키매핑도 추가할 수 있다. 복잡하다면 설정 변경 없이 써도 무방하다.\n모든 것이 그렇듯이 장점만 있는 것은 아니다. vim 등에서의 다양한 기본 기능과 플러그인이 없다. 하지만 이를 보완할 수 있는 여러 방법들을 살펴본다.\n아래 정리된 내용을 보기 전에 깃허브 소스의 README 파일이나 nextvi 홈의 README를 읽어 보자. neatvi와는 다르게 정말 많은 기능이 추가되었다. 그리고 독자적으로 변경된 것들도 있다. 개인적으로 주로 사용하는 방법을 적었으므로 그 외의 것들은 도움말을 참조해야 한다.\nnextvi\n자 그럼 설치부터 기본 사용법, 그리고 응용까지 정리해볼까 한다.\n설치 설치전에 gcc, clang, tcc 등의 컴파일러가 있어야한다. 컴파일 후 vi를 적절한 위치로 옮기고 PATH에 추가한다. $ git clone https://github.com/kyx0r/nextvi $ cd nextvi $ ./build.sh $ ./vi 기본 사용법 vi의 기본 명령과 모두 호환된다.\n파일 열기 $ vi # 파일이름 없이 열기 (:wq \u0026lt;filename\u0026gt; 으로 저장하고 종료) $ vi file_name.c # 파일이름 열기 (:wq 로 저장하고 종료) 파일 저장 및 종료 (ex-mode) :w (저장: 또는 명령모드에서 `^k`) :q (나가기: 저장하지 않고) :q! (강제로 나가기: 문서 변경 무시) :wq \u0026lt;filename\u0026gt; (filename으로 저장하고 종료) :wq (저장하고 종료) :wq! (강제로 저장하고 종료) `qq`,`zz` (`:q!`) 이동\nh - 커서 앞으로 한 칸 이동 l - 커서 뒤로 한 칸 이동 k - 커서 위로 한 칸 이동 j - 커서 밑으로 한 칸 이동 ^ - 행의 첫 글자로 이동 $ - 행의 마지막 글자로 이동 + - 다음 행의 첫 글자로 이동 - - 이전 행의 첫 글자로 이동 { - 이전 문단 이동 } - 다음 문단 이동 gg - 문서의 처음으로 이동 (1G) G - 문서의 마지막으로 이동 H - 화면의 맨 처음으로 이동 M - 화면의 중간으로 이동 L - 화면의 하단으로 이동 w - 다음 단어 이동 b - 이전 단어 이동 번호G, :번호 - n 번째 행으로 이동 입력\ni - 커서 바로 앞에서 입력하기 I - 커서 줄 맨 앞에서 입력하기 a - 커서 바로 뒤에서 입력하기 A - 커서 줄 맨 뒤에서 입력하기 esc - 입력을 종료하고 명령모드로 나가기 삭제\ndd, d1d - 커서 행을 지우기 3dd - 커서 행 포함 아래로 3 줄 지우기 d0 - 커서 위치에서 행의 처음까지 삭제 D, d$ - 커서 위치에서 행의 끝까지 삭제 복사/ 붙이기\n3yw - 커서 위치에서 3 단어 복사 3yy - 커서 위치에서 3 줄 복사 p,1p - 복사 또는 지운 것을 커서 기준 1번 붙이기 마킹(Marking)\nma - 현 커서 위치를 a로 마킹 'a - a 마킹한 곳으로 이동 '' - 이전 위치로 이동 undo/redo\nu - undo ^r - redo (Ctrl + r) 줄 번호 표시\n# - 줄 번호 표시 \u0026lt;space\u0026gt; - 줄 번호 표시 없애기 (또는 방향키 명령 hjkl) 절대 줄 번호와 상대 줄 번호가 모두 표시된다. # 명령으로만 표시할 수 있다. 항상 표시해서 사용할 수 없다. 여러 줄을 복사나 지우기 할 때, Tip. ^g(Ctrl+g) - 해당 줄 번호와 단어 수 등 확인가능 숨은 문자 표시\nV - 숨은 문자 표시/ 감추기 단어 자동 완성 (auto complete)\n^g - 입력 모드에서 실행하면 이전까지 입력했던 단어를 기억하고 자동완성 동작. 일부 문자를 적고 ^n다음, ^r이전 명령으로 선택 한글도 된다. 입력 중간 중간에 ^g해 주어야 한다. 터미널 쉘(Shell)과 상호 작용 쉘(Shell) 전환 잠시 편집을 멈추고 쉘로 갔다가 다시 vi로 돌아와야 할 때가 있다. 소스를 컴파일하고 테스트를 한다던가 잠시 다른 작업을 해야 하는 경우이다. 다음 두 가지 방법이 있다. 이것은 모든 vi clone 에서 사용할 수 있는 방법이다.\nEx-Mode\n:!sh 또는 :!bash - 본쉘 실행 또는 bash 쉘 실행 쉘에서 필요한 작업을 한다. $ exit - vi로 돌아오기 자식 쉘을 하나 더 생성하는 방식이다. Job Control\n\u0026lt;esc\u0026gt;로 명령모드로 전환한다. ^z - 터미널에서 해당 프로세스(vi)를 스톱하는 명령어 이를 통해 vi를 실행했던 부모 쉘로 돌아간다. 부모 쉘에서 필요한 작업을 한다. $ fg 명령으로 vi로 돌아온다. ($ jobs로 stop된 명령어 확인 가능) 부모 쉘을 사용하므로 편하지만 vi가 stop 되어 있는 지를 까먹을 때가 있다. vi를 빠져 나가지 않고 여러 쉘 명령을 바로 사용할 수 있다. 예시 중 ff,gg 등은 빠른 파일 또는 내용을 찾기 위한 플러그인 역할을 멋지게 해 낼 수 있다. 후에 상세히 설명한다. 쉘 명령어가 출력되면 vi에서 멈춤이 일어나고 아무 키나 누르면 vi로 돌아온다.\n쉘(Shell)과의 상호 작용 Shell Command\n:!쉘명령어 - ex-mode에서 사용 :!pwd - 현재 작업 디렉토리 확인 :!ls - 현재 디렉토리 파일 리스트 출력 :!date - 시간 확인 :!ff \u0026lt;keyword\u0026gt; - fast find (빠른 파일 찾기 스크립트) :!gg \u0026lt;keyword\u0026gt; - fast grep (빠른 파일 내용 찾기 스크립트) :!luajit % - 현재 파일(루아스크립트)을 실행 테스트하기 Tip1. 명령모드에서 v;하면 :!를 빠르게 입력할 수 있다. Tip2. 명령모드에서 vv하면 ex모드의 :이전명령를 재실행할 수 있다. Tip3. ex모드에서 ^a로 다음 이전 명령을 불러와서 엔터로 재실행할 수 있다. 상호 작용\n:w \\!less - 본문 내용을 터미널의 less로 보냄 :w \\!cat \u0026gt; file.txt - 본문 내용을 cat으로 보내고 이를 file.txt로 저장 :w \\!cat \u0026gt;\u0026gt; file.txt - 본문 내용을 cat으로 보내고 이를 file.txt로 덧붙임 :r \\!date - date 명령 결과를 본문에 삽입 \\!쉘명령의 형식이고 \\!은 ex명령 내에서 shell 명령임을 표시한다. !! 명령\n명령모드에서 !!를 사용하면 sed나 awk등으로 문자 치환을 할 수 있다. ex모드의 :시작줄번호,끝줄번호!쉘명령과 같다. snippet 프로그램 또는 스크립트를 만들어 스니팻 대용으로 쓸 수도 있다. :1,1! ex명령이 하단에 찍힌다. 여기에 쉘명령을 넣으면 상호작용한다. :1,1!date - 날짜를 해당 라인에 삽입 :23,23!awk '{print $1, $3}' - 23번 줄에서 1과 3 번째 단어로 대체 :5,5!sed 's/foo/bar/g' - 5번 줄에서 foo를 bar로 치환 :1,1!mysnip.sh mfront - 1번 줄에 스크립트 실행 결과를 삽입(front matter) 여러 개의 파일 편집하기 여러 개의 파일을 편집할 경우가 많다. 읽어 온 파일은 vi에서 버퍼라는 공간으로 복사된다. 사실은 버퍼를 편집하는 것인데, 버퍼간의 이동하는 법과 파일을 찾는 법 등을 설명한다.\n여러 파일 불러 오기\n$ vi *.c - 쉘에서 vi로 여러 파일을 불러 올 때 :e filename.c - vi에서 특정 파일을 불러 올 때 :e ./filename.c - vi에서 특정 파일을 불러 올 때 :e /home/user01/filename.c - vi에서 특정 파일을 불러 올 때 참고로 :e *.c 하면 좋을 것 같은데 nextvi는 지원하지 않는다. 정확한 파일이름이 기억나지 않는다면 :!ls 명령으로 파일 리스트를 확인한 후 입력. 파일이름이 상당히 길다면 마우스로 드래그해서 copy and paste 하는 것도 한 방법이다. nnn과 fzf를 이용한 방법도 생각해 볼 수 있다. 다만 동작 중에 nnn을 사용할 경우 파일 편집시 또 다른 vi가 동작한다. fd를 이용한 선택적 파일 불러 오기\n\\ - 명령모드에서 이 명령을 수행하면 임의의 버퍼 창이 열린다. :fd - ex-mode에서 fd(find) 명령을 수행한다. 그러면 현재 디렉토리의 파일 리스트가 버퍼에 올라온다. /\u0026lt;keyword\u0026gt; 명령이나 hjkl 등으로 원하는 파일로 이동한다. ^i 또는 \u0026lt;tab\u0026gt;을 사용하여 해당 파일을 버퍼에 불러온다. 주의할 것은 위 명령 사용시에 커서가 행의 맨 앞에 와야한다. 그렇지 않으면 커서 이후의 문자열이 전달되어 해당 파일이 열리지 않는다. 파일이 열리면 이를 편집하고 \\를 통해 다른 파일을 또 불러 올 수 있다. 말하자면 \\은 nextvi의 내장 파일 검색 플러그인이다. Tip) - 파일 리스트를 다른 조건으로 가져오기. \\로 파일 리스트로 이동 :fd명령으로 전에 불러온 파일 리스트를 dG로 모두 지운다. 아래와 같이 c 소스파일 리스트만 불러 올 수 있다. :1,1! find . -type f -name '*.c' 동일하게 원하는 파일이름으로 이동하여 \u0026lt;tab\u0026gt;키로 파일을 연다. 파일 버퍼 간의 이동\n^7 - 파일 버퍼 리스트를 볼 수 있다. 버퍼 리스트의 번호를 입력하면 해당 버퍼로 이동한다. :b - ex모드에서 사용하며 ^7과 같다. :b번호 - ex모드에서 해당 버퍼로 바로 이동한다. ^n - 명령모드에서 다음 파일 버퍼로 바로 전환한다. 파일 버퍼는 기본 10개이다. :bx \u0026lt;버퍼수\u0026gt;로 재지정 가능하다. 주의할 것은 vi 종료 시, 파일 버퍼가 모두 저장되어 있지 않으면 종료되지 않는다. README를 찾아 보았는데 열린 버퍼를 개별적으로 닫는 방법은 아직 모른다. Links Next Vi Home https://github.com/kyx0r/nextvi Neat Vi Home https://github.com/aligrudi/neatvi ","permalink":"https://neosolaris.github.io/posts/nextvi/","summary":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003evi는 배우는 것이 아니라 몸으로 익히는 것이다.\nvi는 단순하고 일관성이 있다.\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e장점\n\u003cul\u003e\n\u003cli\u003evi의 기본 명령을 제공한다.\u003c/li\u003e\n\u003cli\u003e단순하고 용량이 작아 임베디드 환경 및 원격지에서 사용하기에 좋다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../neatvi\"\u003eneatvi\u003c/a\u003e로 부터 여러 기능이 추가되었다.\u003c/li\u003e\n\u003cli\u003evim, nvim과는 다르게 간단한 설정과 빠른 동작이 장점이다.\u003c/li\u003e\n\u003cli\u003eutf-8을 지원한다. 한글 입출력 가능.\u003c/li\u003e\n\u003cli\u003e쉘명령 출력을 ex-mode(명령라인)에서 터미널 깨짐 없이 불러올 수 있다.\u003c/li\u003e\n\u003cli\u003e각종 플러그인이 없는 대신 ex-mode에서 터미널 툴과 상호 작용할 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e개인적으로 vim보다는 nvim을 더 선호한다. lua와 결합된 플러그인과의 연결이 정말 좋기\n때문이다. 하지만 단점도 많다. lua를 공부해야하고 또 설정에 적응하려면 많은 시간과 노력이\n필요하다. 더군다나 수많은 플러그인을 장착하게 되면 느려지고 무거워진다. 설정이 잘 못\n되면 바로 잡느라 삽질을 해야한다. 물론 자신만의 설정을 잘 만들어서 백업해 두었다가\n재사용하면 좋다. 하지만 nvim 자체의 패키지 사이즈와 수 많은 플러그인의 사이즈를 생각하면\n작고 가볍게라는 말이 무색해진다.\u003c/p\u003e","title":"Nextvi - Small and Simple Editor"},{"content":"last updated: {{ \u0026ldquo;1712680347\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\nIntro zig로 c 소스를 컴파일할 수 있다. zig의 장점은 여러 플랫폼과 아키텍처용 컴파일이 가능하다는 것이다. static, dynamic 모두 가능하다. Linux, iOS, Windows 등 여러 OS 환경 지원. x86, , x86-64, aarch64 등 아키텍처 지원 Target List 다음 방법으로 원하는 플랫폼, 아키텍쳐를 먼저 찾는다. $ zig targets $ zig targets | grep x86 $ zig targets | grep x86-64 $ zig targets | grep aarch64 $ zig targets | grep linux $ zig targets | grep windows $ zig targets | grep macos x86, x86_64 - intel 계열 aarch64 - arm 계열 (raspberrypi) linux - Linux windows - Ms Windows macos - Mac OS Local Compile dynamic: Alpine Linux (x86_64) $ zig cc -o hello_dynamic hello.c $ file hello_dynamic hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-musl-x86_64.so.1, with debug_info, not stripped $ ./hello Hello World! static: Alpine Linux (x86_64) $ zig cc -o hello hello.c -target x86_64-linux-musl $ file hello ./hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, with debug_info, not stripped $ ./hello Hello World! Cross Compile For windows $ zig cc -o hello.exe hello.c -target x86_64-windows-gnu $ file ./hello.exe hello: PE32+ executable (console) x86-64, for MS Windows, 7 sections Windows c:\u0026gt; .\\hello.exe Hello World! For Linux dynamic with Gnu Libs $ zig cc -o hello hello.c -target x86_64-linux-gnu $ file ./hello.exe ./hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.0.0, with debug_info, not stripped gnu-linux$ ./hello Hello World! For Linux Static with musl $ zig cc -o hello.exe hello.c -target x86_64-linux-gnu $ file ./hello.exe ./hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, with debug_info, not stripped any-linux$ ./hello Hello World! Makefile or Build.sh 해당 파일에서 gcc, clang 부분을 zig cc로 수정한다. make 또는 ./Build.sh 실행 Links zig cc: a Powerful Drop-In Replacement for GCC/Clang https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html ","permalink":"https://neosolaris.github.io/posts/zig-cc/","summary":"\u003cp\u003elast updated: {{ \u0026ldquo;1712680347\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\u003c/p\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ezig로 c 소스를 컴파일할 수 있다.\u003c/li\u003e\n\u003cli\u003ezig의 장점은 여러 플랫폼과 아키텍처용 컴파일이 가능하다는 것이다.\u003c/li\u003e\n\u003cli\u003estatic, dynamic 모두 가능하다.\u003c/li\u003e\n\u003cli\u003eLinux, iOS, Windows 등 여러 OS 환경 지원.\u003c/li\u003e\n\u003cli\u003ex86, , x86-64, aarch64 등 아키텍처 지원\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"target-list\"\u003eTarget List\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e다음 방법으로 원하는 플랫폼, 아키텍쳐를 먼저 찾는다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig targets\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig targets \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep x86\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig targets \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep x86-64\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig targets \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep aarch64\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig targets \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep linux\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig targets \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep windows\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig targets \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep macos\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ex86, x86_64 - intel 계열\u003c/li\u003e\n\u003cli\u003eaarch64 - arm 계열 (raspberrypi)\u003c/li\u003e\n\u003cli\u003elinux - Linux\u003c/li\u003e\n\u003cli\u003ewindows - Ms Windows\u003c/li\u003e\n\u003cli\u003emacos - Mac OS\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"local-compile\"\u003eLocal Compile\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003edynamic: Alpine Linux (x86_64)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig cc -o hello_dynamic hello.c\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e file hello_dynamic\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ehello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003einterpreter /lib/ld-musl-x86_64.so.1, with debug_info, not stripped\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ./hello\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eHello World!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003estatic: Alpine Linux (x86_64)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig cc -o hello hello.c -target x86_64-linux-musl\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e file hello\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e./hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewith debug_info, not stripped\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ./hello\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eHello World!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"cross-compile\"\u003eCross Compile\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFor windows\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig cc -o hello.exe hello.c -target x86_64-windows-gnu\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e file ./hello.exe\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ehello: PE32+ executable (console) x86-64, for MS Windows, 7 sections\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003eWindows c:\u0026gt; .\\hello.exe\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eHello World!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eFor Linux dynamic with Gnu Libs\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig cc -o hello hello.c -target x86_64-linux-gnu\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e file ./hello.exe\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e./hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003einterpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.0.0, with debug_info,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003enot stripped\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003egnu-linux$ ./hello\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eHello World!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eFor Linux Static with musl\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig cc -o hello.exe hello.c -target x86_64-linux-gnu\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e file ./hello.exe\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e./hello: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewith debug_info, not stripped\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003eany-linux$ ./hello\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eHello World!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"makefile-or-buildsh\"\u003eMakefile or Build.sh\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e해당 파일에서 gcc, clang 부분을 \u003ccode\u003ezig cc\u003c/code\u003e로 수정한다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emake\u003c/code\u003e 또는 \u003ccode\u003e./Build.sh\u003c/code\u003e 실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ezig cc\u003c/code\u003e: a Powerful Drop-In Replacement for GCC/Clang\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html\"\u003ehttps://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Zig로 gcc/clang 컴파일러 대체하기"},{"content":"last updated: {{ \u0026ldquo;1710903265\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\nIntro neovim에서 zig 설정 방법을 설명한다. Install on Alpine 설치하기 $ doas apk add zig zls neovim $ nvim ~/.local/nvim/init.lua require \u0026#39;lspconfig\u0026#39;.zls.setup{} 다른 어떤 언어보다도 설정이 간단하다. zls는 zig language server lspconfig는 neovim에 내장된 LSP 설정을 말한다. nvim 설정 후 zig파일을 열고 코딩하면 도움말이 나타난다. tab으로 이동하고 Enter로 선택한다. Install zls from Source 소스를 컴파일하는 방법. 최신 버전의 zig(현재 0.12)이어야 git 소스로 컴파일 된다. zig 최신 버전은 zig 홈에서 다운로드할 수 있다. 다음 절차에 따라 빌드한다. $ git clone https://github.com/zigtools/zls $ cd zls $ zig build -Doptimize=ReleaseSafe $ mkdir ~/bin \u0026amp;\u0026amp; cp zig-out/bin/zls ~/bin $ echo \u0026#39;export PATH=$HOME/bin:$PATH\u0026#39; \u0026gt;\u0026gt; ~/.bash_profile $ source ~/.bash_profile $ zls --version Links Neovim setup for Zig\nhttps://terminalprogrammer.com/neovim-setup-for-zig ","permalink":"https://neosolaris.github.io/posts/zig-nvim/","summary":"\u003cp\u003elast updated: {{ \u0026ldquo;1710903265\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\u003c/p\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eneovim에서 zig 설정 방법을 설명한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install-on-alpine\"\u003eInstall on Alpine\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e설치하기\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e doas apk add zig zls neovim\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e nvim ~/.local/nvim/init.lua\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    require \u0026#39;lspconfig\u0026#39;.zls.setup{}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e다른 어떤 언어보다도 설정이 간단하다.\u003c/li\u003e\n\u003cli\u003ezls는 zig language server\u003c/li\u003e\n\u003cli\u003elspconfig는 neovim에 내장된 LSP 설정을 말한다.\u003c/li\u003e\n\u003cli\u003envim 설정 후 zig파일을 열고 코딩하면 도움말이 나타난다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etab\u003c/code\u003e으로 이동하고 \u003ccode\u003eEnter\u003c/code\u003e로 선택한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install-zls-from-source\"\u003eInstall zls from Source\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e소스를 컴파일하는 방법.\u003c/li\u003e\n\u003cli\u003e최신 버전의 zig(현재 0.12)이어야 git 소스로 컴파일 된다.\u003c/li\u003e\n\u003cli\u003ezig 최신 버전은 zig 홈에서 다운로드할 수 있다.\u003c/li\u003e\n\u003cli\u003e다음 절차에 따라 빌드한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/zigtools/zls\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e zls\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig build -Doptimize\u003cspan class=\"o\"\u003e=\u003c/span\u003eReleaseSafe\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mkdir ~/bin \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e cp zig-out/bin/zls ~/bin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;export PATH=$HOME/bin:$PATH\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; ~/.bash_profile\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003esource\u003c/span\u003e ~/.bash_profile\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zls --version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eNeovim setup for Zig\u003cbr\u003e\n\u003ca href=\"https://terminalprogrammer.com/neovim-setup-for-zig\"\u003ehttps://terminalprogrammer.com/neovim-setup-for-zig\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Zig + Nvim 설정"},{"content":"last updated: {{ \u0026ldquo;1712202776\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\nIntro a general-purpose programming language and toolchain for maintaining robust, optimal and reusable software. Install Debian/Ubuntu $ sudo apt install zig Alpine Linux $ doas apk add zig 최신 리눅스 버전 설치 https://ziglang.org/download/ os와 아키텍쳐에 맞는 파일을 다운로드한다. 압축을 푼 후 PATH를 설정해주면 바로 사용 가능하다. 현재 사용 버전: 0.12 $ tar xJf zig-linux-x86_64-0.12.0-dev.3212+40e64245f.tar.xz $ ln -s zig-linux-x86_64-0.12.0-dev.3212+40e64245f/ zig $ cd zig; ls $ ./zig version $ ./zig help Hello World hello-world.zig const std = @import(\u0026#34;std\u0026#34;); pub fn main() !void { std.debug.print(\u0026#34;Hello, World!\\n\u0026#34;, .{}); } run / test $ zig run hello-world.zig $ zig test hello-world.zig build (default=debug, small, fast, safe) $ zig build-exe hello.zig $ ./hello $ zig build-exe --name hello-small -O ReleaseSmall hello.zig $ zig build-exe --name hello-fast -O ReleaseFast hello.zig $ zig build-exe --name hello-safe -O ReleaseSafe hello.zig $ zig build-exe --name hello-debug -O Debug hello.zig $ ls -l $ ./hello-small More Docs zig-nvim - neovim에 zig 개발 환경 설정하기 zig-cc - Zig로 gcc/clang 컴파일러 대체하기 Links home - https://ziglang.org/ awesome zig - https://www.trackawesomelist.com/catdevnull/awesome-zig/readme/ Study and Docs zig-guide - https://zig.guide/ reference - https://ziglang.org/documentation/0.11.0/ zig-by-example - https://zig-by-example.com/ zig std - https://ziglang.org/documentation/master/std/ exercises - https://exercism.org/tracks/zig/exercises learn x in y minutes - https://learnxinyminutes.com/docs/zig/ Compile and Build zig-cc - https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html Zig Build System Internals - https://mitchellh.com/zig/build-internals ","permalink":"https://neosolaris.github.io/posts/zig/","summary":"\u003cp\u003elast updated: {{ \u0026ldquo;1712202776\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\u003c/p\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ea general-purpose programming language and toolchain for maintaining robust, optimal and reusable software.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDebian/Ubuntu\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install zig\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eAlpine Linux\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e doas apk add zig\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e최신 리눅스 버전 설치\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ziglang.org/download/\"\u003ehttps://ziglang.org/download/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eos와 아키텍쳐에 맞는 파일을 다운로드한다.\u003c/li\u003e\n\u003cli\u003e압축을 푼 후 \u003ccode\u003ePATH\u003c/code\u003e를 설정해주면 바로 사용 가능하다.\u003c/li\u003e\n\u003cli\u003e현재 사용 버전: 0.12\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e tar xJf zig-linux-x86_64-0.12.0-dev.3212+40e64245f.tar.xz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ln -s zig-linux-x86_64-0.12.0-dev.3212+40e64245f/ zig\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e zig\u003cspan class=\"p\"\u003e;\u003c/span\u003e ls \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ./zig version\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ./zig \u003cspan class=\"nb\"\u003ehelp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"hello-world\"\u003eHello World\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ehello-world.zig\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-zig\" data-lang=\"zig\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003econst\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nb\"\u003e@import\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;std\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"kr\"\u003epub\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edebug\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello, World!\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e.{});\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003erun / test\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig run hello-world.zig\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig \u003cspan class=\"nb\"\u003etest\u003c/span\u003e hello-world.zig\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ebuild (default=debug, small, fast, safe)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig build-exe hello.zig\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ./hello\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig build-exe --name hello-small -O ReleaseSmall hello.zig\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig build-exe --name hello-fast -O ReleaseFast hello.zig\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig build-exe --name hello-safe -O ReleaseSafe hello.zig\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e zig build-exe --name hello-debug -O Debug hello.zig\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ls -l \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ./hello-small\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"more-docs\"\u003eMore Docs\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../zig-nvim.md\"\u003ezig-nvim\u003c/a\u003e - neovim에 zig 개발 환경 설정하기\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../zig-cc.md\"\u003ezig-cc\u003c/a\u003e - Zig로 gcc/clang 컴파일러 대체하기\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ehome - \u003ca href=\"https://ziglang.org/\"\u003ehttps://ziglang.org/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eawesome zig - \u003ca href=\"https://www.trackawesomelist.com/catdevnull/awesome-zig/readme/\"\u003ehttps://www.trackawesomelist.com/catdevnull/awesome-zig/readme/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"study-and-docs\"\u003eStudy and Docs\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ezig-guide - \u003ca href=\"https://zig.guide/\"\u003ehttps://zig.guide/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ereference - \u003ca href=\"https://ziglang.org/documentation/0.11.0/\"\u003ehttps://ziglang.org/documentation/0.11.0/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ezig-by-example - \u003ca href=\"https://zig-by-example.com/\"\u003ehttps://zig-by-example.com/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ezig std - \u003ca href=\"https://ziglang.org/documentation/master/std/\"\u003ehttps://ziglang.org/documentation/master/std/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eexercises - \u003ca href=\"https://exercism.org/tracks/zig/exercises\"\u003ehttps://exercism.org/tracks/zig/exercises\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003elearn x in y minutes - \u003ca href=\"https://learnxinyminutes.com/docs/zig/\"\u003ehttps://learnxinyminutes.com/docs/zig/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"compile-and-build\"\u003eCompile and Build\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ezig-cc - \u003ca href=\"https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html\"\u003ehttps://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eZig Build System Internals - \u003ca href=\"https://mitchellh.com/zig/build-internals\"\u003ehttps://mitchellh.com/zig/build-internals\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Zig Programming Language"},{"content":" 아끼지 마세요/ 나태주 좋은 것 아끼지 마세요 옷장 속에 들어 있는 새로운 옷 예쁜 옷 잔칫날 간다고 결혼식장 간다고 아끼지 마세요 그러다 그러다가 철지나면 헌옷 되지요 마음 또한 아끼지 마세요 마음속에 들어 있는 사랑스런 마음 그리운 마음 정말로 좋은 사람 생기면 준다고 아끼지 마세요 그러다 그러다가 마음의 물기 마르면 노인이 되지요 좋은 옷 있으면 생각날 때 입고 좋은 음식 있으면 먹고 싶은 때 먹고 좋은 음악 있으면 듣고 싶은 때 들으세요 더구나 좋은 사람 있으면 마음속에 숨겨두지 말고 마음껏 좋아하고 마음껏 그리워하세요 그리하여 때로는 얼굴 붉힐 일 눈물 글썽일 일 있다한들 그게 무슨 대수겠어요! 지금도 그대 앞에 꽃이 있고 좋은 사람이 있지 않나요 그 꽃을 마음껏 좋아하고 그 사람을 마음껏 그리워하세요. (2012) ","permalink":"https://neosolaris.github.io/posts/%EC%95%84%EB%81%BC%EC%A7%80-%EB%A7%88%EC%84%B8%EC%9A%94/","summary":"\u003cul\u003e\n\u003cli\u003e아끼지 마세요/ 나태주\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e좋은 것 아끼지 마세요\n옷장 속에 들어 있는 새로운 옷 예쁜 옷\n잔칫날 간다고 결혼식장 간다고\n아끼지 마세요\n그러다 그러다가 철지나면 헌옷 되지요\n\n마음 또한 아끼지 마세요\n마음속에 들어 있는 사랑스런 마음 그리운 마음\n정말로 좋은 사람 생기면 준다고\n아끼지 마세요\n그러다 그러다가 마음의 물기 마르면 노인이 되지요\n\n좋은 옷 있으면 생각날 때 입고\n좋은 음식 있으면 먹고 싶은 때 먹고\n좋은 음악 있으면 듣고 싶은 때 들으세요\n더구나 좋은 사람 있으면\n마음속에 숨겨두지 말고\n마음껏 좋아하고 마음껏 그리워하세요\n\n그리하여 때로는 얼굴 붉힐 일\n눈물 글썽일 일 있다한들\n그게 무슨 대수겠어요!\n지금도 그대 앞에 꽃이 있고\n좋은 사람이 있지 않나요\n그 꽃을 마음껏 좋아하고\n그 사람을 마음껏 그리워하세요. (2012)\n\u003c/code\u003e\u003c/pre\u003e","title":"아끼지 마세요 - 나태주"},{"content":"last updated: {{ \u0026ldquo;1710725585\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\nINTRO 레디스(Redis)는 Remote Dictionary Server의 약자로서[4], \u0026ldquo;키-값\u0026rdquo; 구조의 비정형 데이터를 저장하고 관리하기 위한 오픈 소스 기반의 비관계형 데이터베이스 관리 시스템(DBMS)이다. 2009년 살바토르 산필리포(Salvatore Sanfilippo)가 처음 개발했다. 2015년부터 Redis Labs가 지원하고 있다. 모든 데이터를 메모리로 불러와서 처리하는 메모리 기반 DBMS이다. BSD 라이선스를 따른다. DB-Engines.com의 월간 랭킹에 따르면, 레디스는 가장 인기 있는 키-값 저장소이다.\nINSTALL - alpine linux # Install Redis doas apk add redis redis-openrc # Add Openrc doas rc-update add redis default # Run redis server doas openrc default rc-status # Connect to redis redis-cli Links Redis - https://redis.io Install - https://redis.io/docs/install Docs - https://redis.io/docs command ref - https://redis.io/commands/ redis lua - https://www.freecodecamp.org/news/a-quick-guide-to-redis-lua-scripting/ ","permalink":"https://neosolaris.github.io/posts/redis/","summary":"\u003cp\u003elast updated: {{ \u0026ldquo;1710725585\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\u003c/p\u003e\n\u003ch2 id=\"intro\"\u003eINTRO\u003c/h2\u003e\n\u003cp\u003e레디스(Redis)는 Remote Dictionary Server의 약자로서[4], \u0026ldquo;키-값\u0026rdquo; 구조의 비정형 데이터를 저장하고 관리하기 위한 오픈 소스 기반의 비관계형 데이터베이스 관리 시스템(DBMS)이다. 2009년 살바토르 산필리포(Salvatore Sanfilippo)가 처음 개발했다. 2015년부터 Redis Labs가 지원하고 있다. 모든 데이터를 메모리로 불러와서 처리하는 메모리 기반 DBMS이다. BSD 라이선스를 따른다. DB-Engines.com의 월간 랭킹에 따르면, 레디스는 가장 인기 있는 키-값 저장소이다.\u003c/p\u003e\n\u003ch2 id=\"install---alpine-linux\"\u003eINSTALL - alpine linux\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e Install Redis\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003edoas apk add redis redis-openrc\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e Add Openrc \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003edoas rc-update add redis default\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e Run redis server\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003edoas openrc default\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003erc-status\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e Connect to redis\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eredis-cli\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRedis - \u003ca href=\"https://redis.io\"\u003ehttps://redis.io\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eInstall - \u003ca href=\"https://redis.io/docs/install\"\u003ehttps://redis.io/docs/install\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocs - \u003ca href=\"https://redis.io/docs\"\u003ehttps://redis.io/docs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ecommand ref - \u003ca href=\"https://redis.io/commands/\"\u003ehttps://redis.io/commands/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eredis lua - \u003ca href=\"https://www.freecodecamp.org/news/a-quick-guide-to-redis-lua-scripting/\"\u003ehttps://www.freecodecamp.org/news/a-quick-guide-to-redis-lua-scripting/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Redis - Remote Dictionary Server"},{"content":"Intro minimum 수동 설치 방법이 있으나 데몬 서비스, docker 설치 등에 어려움이 있다. 여기에서는 다음 두 가지 설치 방법을 정리한다. Microsoft Store - Alpine WSL Install, 2. Github - AlpineWSL Install 특이사항: default shell: ash (필요하면 bash를 추가 설치: apk add bash bash-completion) grep: busybox grep (고성능의 grep이 필요하다면 추가 설치: apk add grep) sudo: doas (필요하면 추가 설치: apk add doas) openssh: openssh (필요하면 설치: apk add openssh) curl: wget은 기본 설치 (필요하면 추가설치: apk add curl) Microsoft Store - Alpine WSL Install 참고 사항\n버전은 3.17로 2018년이다. 업데이트도 안되고 있는 듯. 하지만 Microsoft Store를 이용하므로 편리하다. application - C:\\Program Files\\WindowsApps\\36828agowa338.AlpineWSL_3.17.0.0_x64__my43bytk1c4nr\\Alpine.exe ext4 filesystem - C:\\Users\\batut\\AppData\\Local\\Packages Install\nMicrosoft Store \u0026gt; alpine 검색 \u0026gt; 설치 \u0026gt; 실행 처음 실행시 user 및 password 입력: root는 설정해준 일반유저와 동일. ex) $su - 설치 후 PowerShell에서 Default로 설정\nwsl -s Alpine # --set-default: wsl default set Alpine WSL2 실행후 기본 정보 확인 $ passwd # Password 설정 $ cat /etc/os-release # Os Version Check $ uname -a # Os Info Check $ df -Th / # Disck Usage Check 기본 최소 패키지 설치 $ su - # Change to Root # cat \u0026gt; /etc/apk/repositories \u0026lt;\u0026lt; EOF; $(echo) https://dl-cdn.alpinelinux.org/alpine/v$(cut -d\u0026#39;.\u0026#39; -f1,2 /etc/alpine-release)/main/ https://dl-cdn.alpinelinux.org/alpine/v$(cut -d\u0026#39;.\u0026#39; -f1,2 /etc/alpine-release)/community/ https://dl-cdn.alpinelinux.org/alpine/edge/testing/ EOF # apk update # Update # apk add libstdc++ curl grep bash bash-completion openssh nvim # libs, Utils # apk add openrc git docker # Daemon Service, Git, Docker Install doas (like sudo) 설정 # vi /etc/doas.d/doas.conf ... # user01 is username, root permition allowed, password once and cached #permit persist user01 as root # user01 is username, root permition allowed, no password permit nopass user01 as root ... Github - AlpineWSL Install 최신 버전을 설치할 수 있다.\n몇가지 설정만 하면 바로 사용 가능하다.\n설치 준비\n최신 버전 다운로드: https://github.com/yuk7/AlpineWSL/releases Current version: 3.21.x 참고로 Windows용은 Alpine.zip이다. 적당한 폴더에 압축을 푼다. ex) C:\\WSL\\Alpine\\ PowerShell 실행하여 해당 폴더로 이동 해당 폴더에서 Alpine.exe를 실행하면 ex4.vhdx의 파일시스템이 생성된다. 이 때, 이미 Alpine이 이미 설치되어 있다면 충돌을 피하기위해 Apline4184.exe 등으로 변경하고 실행한다. AlpineWSL 설치\nc:\\WSL\\Alpine\u0026gt; mv Alpine.exe Alpine321.exe c:\\WSL\\Alpine\u0026gt; Alpine321.exe c:\\WSL\\Alpine\u0026gt; ls c:\\WSL\\Alpine\u0026gt; wsl -l c:\\WSL\\Alpine\u0026gt; wsl -s Alpine321 # wsl default image set c:\\WSL\\Alpine\u0026gt; wsl # execute alpine 3.21 linux alpine setup root, user User Setup export TZ=Asia/Seoul # Time Zone Setup apk add --no-cache tzdata \u0026amp;\u0026amp; \\ cp /usr/share/zoneinfo/$TZ /etc/localtime \u0026amp;\u0026amp; \\ echo $TZ \u0026gt; /etc/timezone # cat /etc/os-release # check os version # apk update \u0026amp;\u0026amp; apk upgrade # package update, upgrade # passwd root # root password set # apk add --no-cache doas # addgroup -g 1000 borisu # user set # adduser -u 1000 -G borisu -s /bin/bash -D borisu # echo \u0026#39;borisu:borisu\u0026#39; | chpasswd # echo \u0026#39;permit nopass borisu as root\u0026#39; \u0026gt; /etc/doas.d/doas.conf # passwd borisu # user password set # exit config alpine default login user C:\\\u0026gt; wsl -d Alpine321 -u borisu로 직접 실행 가능. 아래는 직접 설정을 해주고 wsl -d Alpine321을 실행 하는 방법이다. PS C:\\wsl\\Alpine\u0026gt; .\\Alpine321.exe config --default-uid 1000 PS C:\\wsl\\Alpine\u0026gt; .\\Alpine321.exe config --default-user borisu Windows Terminal Setting 윈도우즈 터미널의 설정을 클릭한다. 좌측 메뉴 새프로파일 추가 이름: Alpine321 명령줄: C:\\WINDOWS\\system32\\wsl.exe -d Alpine321 기타 설정 후 저장 이후 작업 필요한 패키지 설치 Alpine 도커에 관해서는 과거 버전(ex.3.18)에서는 기본 패키지가 없었다. 과거 버전 설치는 docker-windows 참조. 현재(ex.3.21)에서는 docker 패키지가 기본 포함되었다. 백업과 복구 이렇게 설치하고 환경을 구성하는 데에도 많은 시간과 노력이 든다. 필요한 패키지 설치와 설정 등을 완료했다면 백업을 해 두는 것이 좋다. 이것을 다른 PC로 옮기거나 윈도우즈 재설치 등으로 복구를 쉽게 할 수 있다. Alpine321을 예로 든다. 백업 Windows PowerShell을 실행한다. wsl -l -v # 현재 WSL 등록 및 동작 상태 확인 wsl -t Alpine321 # Alpine321을 종료 wsl --export Alpine32 D:\\Alpine321.tar # D:\\Alpine321.tar 로 백업 제거 제거를 해야할 경우이므로 반드시 백업을 먼저 해두어야 한다. wsl2의 경우 등록된 폴더(설치 폴더)에 wsl -l -v wsl -t Alpine321 # Alpine321을 종료 wsl --unregister Alpine321 # 제거 wsl -l -v # 제거 확인 복구 복구시 복구할 폴더 (ex. C:\\WSL\\Alpine321)로 먼저 이동한다. 필요하면 생성. 복구 명령은 wsl --import (distribution) (install location) (file path) 이다. cd C:\\WSL\\Alpine321 wsl --import Alpine321 D:\\Alpine321.tar # 백업 파일의 위치는 D:\\Alpine321.tar wsl -l -v # 복구 확인 REFERENCE Automated Alpine Linux Setup in WSL2 https://www.numbersandreality.com/computers/linux/alpine-wsl/ Alpine Docker Install https://wiki.alpinelinux.org/wiki/Docker https://wiki.alpinelinux.org/wiki/Docker#Installation Install Alpine Linux on WSL and connect it to Docker Desktop https://gist.github.com/mac641/07a53ba45f0b30af046d6f9ed94a1ace How to enable services on Alpine Linux https://www.cyberciti.biz/faq/how-to-enable-and-start-services-on-alpine-linux/ Openrc Howto on Alpine https://wiki.alpinelinux.org/wiki/OpenRC ","permalink":"https://neosolaris.github.io/posts/alpine_wsl2/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eminimum 수동 설치 방법이 있으나 데몬 서비스, docker 설치 등에 어려움이 있다.\u003c/li\u003e\n\u003cli\u003e여기에서는 다음 두 가지 설치 방법을 정리한다.\u003c/li\u003e\n\u003cli\u003e\n\u003col\u003e\n\u003cli\u003eMicrosoft Store - Alpine WSL Install, 2. Github - AlpineWSL Install\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e특이사항:\n\u003cul\u003e\n\u003cli\u003edefault shell: ash (필요하면 bash를 추가 설치: apk add bash bash-completion)\u003c/li\u003e\n\u003cli\u003egrep: busybox grep (고성능의 grep이 필요하다면 추가 설치: apk add grep)\u003c/li\u003e\n\u003cli\u003esudo: doas (필요하면 추가 설치: apk add doas)\u003c/li\u003e\n\u003cli\u003eopenssh: openssh (필요하면 설치: apk add openssh)\u003c/li\u003e\n\u003cli\u003ecurl: wget은 기본 설치 (필요하면 추가설치: apk add curl)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"microsoft-store----alpine-wsl-install\"\u003eMicrosoft Store  - Alpine WSL Install\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e참고 사항\u003c/p\u003e","title":"Windows WSL2 Alpine Install"},{"content":"Setup build-base 설치 binutils file gcc g++ make libc-dev fortify-headers patch # Install build-base doas apk add build-base # Check gcc --version make --version ","permalink":"https://neosolaris.github.io/posts/alpine_devel/","summary":"\u003ch2 id=\"setup\"\u003eSetup\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ebuild-base 설치\n\u003cul\u003e\n\u003cli\u003ebinutils file gcc g++ make libc-dev fortify-headers patch\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# Install build-base\ndoas apk add build-base\n\n# Check\ngcc --version\nmake --version\n\u003c/code\u003e\u003c/pre\u003e","title":"Alpine Devel - 알파인 개발 환경"},{"content":"Intro 설치에는 크게 일반적인 설치 방법과 Windows WSL에 올리는 방법이 있다. 일반 설치 ISO 이미지를 부팅용 USB로 작성 usb 부팅 및 설치 패키지 설치 및 설정 윈도우즈 설치 ( WSL2 + Alpine ) 윈도우즈 10, 11 기반, WSL2 설치 또는 업그레이드: c:\u0026gt; wsl --update Alpine-Wsl 설치 (Microsoft Store) 설치 후 실행 아이콘 실행 자세한 내용은 다음 문서 참조: docker windows Upgrade 최신 버전으로 업그레이드 하는 방법을 정리한다. alpine-wsl에서는 업그레이드가 되지만 버전정보는 그대로이다. $ cat /etc/alpine-release # Check Current Version $ su - # apk update \u0026amp;\u0026amp; apk upgrade # update \u0026amp; upgrade current version OR # apk -U upgrade # sudo setup-apkrepos # Enter `:e` for edit and change version what you want https://dl-cdn.alpinelinux.org/alpine/v3.18/main/ https://dl-cdn.alpinelinux.org/alpine/v3.18/community/ https://dl-cdn.alpinelinux.org/alpine/edge/testing/ :wq # sudo apk update # sudo apk upgrade ---available # sync # reboot ... $ cat /etcalpine-release $ uname -r 관련 문서 lua-language-server 설치: alpine lua language server 설치 REFERENCE Alpine Install: https://wiki.alpinelinux.org/wiki/Installation Alpine Tutorial and Howtos: https://wiki.alpinelinux.org/wiki/Tutorials_and_Howtos ","permalink":"https://neosolaris.github.io/posts/alpine_install/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e설치에는 크게 일반적인 설치 방법과 Windows WSL에 올리는 방법이 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"일반-설치\"\u003e일반 설치\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eISO 이미지를 부팅용 USB로 작성\u003c/li\u003e\n\u003cli\u003eusb 부팅 및 설치\u003c/li\u003e\n\u003cli\u003e패키지 설치 및 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"윈도우즈-설치--wsl2--alpine-\"\u003e윈도우즈 설치 ( WSL2 + Alpine )\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e윈도우즈 10, 11 기반, WSL2 설치 또는 업그레이드: \u003ccode\u003ec:\u0026gt; wsl --update\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAlpine-Wsl 설치 (Microsoft Store)\u003c/li\u003e\n\u003cli\u003e설치 후 실행 아이콘 실행\u003c/li\u003e\n\u003cli\u003e자세한 내용은 다음 문서 참조: \u003ca href=\"../docker-windows\"\u003edocker windows\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"upgrade\"\u003eUpgrade\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e최신 버전으로 업그레이드 하는 방법을 정리한다.\u003c/li\u003e\n\u003cli\u003ealpine-wsl에서는 업그레이드가 되지만 버전정보는 그대로이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat /etc/alpine-release   \u003cspan class=\"c1\"\u003e# Check Current Version\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e su -\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e apk update \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e apk upgrade \u003cspan class=\"c1\"\u003e# update \u0026amp; upgrade current version\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eOR\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e apk -U upgrade\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e sudo setup-apkrepos     \u003cspan class=\"c1\"\u003e# Enter `:e` for edit and change version what you want\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ehttps://dl-cdn.alpinelinux.org/alpine/v3.18/main/\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ehttps://dl-cdn.alpinelinux.org/alpine/v3.18/community/\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ehttps://dl-cdn.alpinelinux.org/alpine/edge/testing/\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e:wq\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e sudo apk update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e sudo apk upgrade ---available\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e sync\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e reboot\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat /etcalpine-release\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e uname -r\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"관련-문서\"\u003e관련 문서\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003elua-language-server 설치: \u003ca href=\"../alpine-lua-language-server\"\u003ealpine lua language server\u003c/a\u003e\n설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAlpine Install: \u003ca href=\"https://wiki.alpinelinux.org/wiki/Installation\"\u003ehttps://wiki.alpinelinux.org/wiki/Installation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAlpine Tutorial and Howtos: \u003ca href=\"https://wiki.alpinelinux.org/wiki/Tutorials_and_Howtos\"\u003ehttps://wiki.alpinelinux.org/wiki/Tutorials_and_Howtos\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Alpine Linux Install"},{"content":"INTRO esptool은 python으로 만든 esp 펌웨어 툴이다. 펌웨어 읽기, 쓰기, 지우기가 가능하다. 기본 사용법을 숙지하고 필요에 따라 메뉴얼을 참고한다. INSTALL 다운로드 - https://github.com/espressif/esptool/releases\nwindows - esptool.exe\nesptool-v4.x.x-win64.zip 압축을 풀고 esptool.exe를 사용 esptool.exe 단일 파일로 파이썬 설치를 필요로 하지 않는다. Windows - esptool.py\npython3를 설치한다. powershell 또는 터미널창에서 pip로 설치한다. pip install esptool esptool.py -h Linux - esptool.py\npython3가 없다면 설치한다. sudo apt install python3 python3-pip sudo pip install esptool esptool.py -h Flash Upload PORT - windows:COM#, Linux: /dev/ttyUSB# BAUDRATE - 460800 recommended # nodemcu build image esptool.py -p PORT -b BAUDRATE \\ --before default_reset \\ --after hard_reset \\ --chip esp32 write_flash \\ --flash_mode dio \\ --flash_size detect \\ --flash_freq 40m \\ 0x1000 bootloader.bin \\ 0x8000 partition-table.bin \\ 0x10000 nodemcu.bin # other built-in image esptool.py -p PORT -b 460800 \\ --before default_reset \\ --after hard_reset \\ --chip esp32 write_flash \\ --flash_mode dio \\ --flash_size detect \\ --flash_freq 40m \\ 0x0 single-app.bin \\ Firmware Check PORT - windows:COM#, Linux: /dev/ttyUSB# # check flash id info esptool.py -p PORT flash_id # check built-in mac address esptool.py -p PORT read_mac # check image info esptool.py -p PORT image_info --version 2 my_esp_app.bin Firmware Erase 연결된 esp32의 펌웨어 제거 PORT - windows:COM#, Linux: /dev/ttyUSB# BAUDRATE - 460800 Recommended esptool.py -p $PORT -b $SPEED erase_flash Firmware Read esp32에 들어있는 펌웨어를 복제하는 방법 flash_id로 flash_size를 확인 후 적용 아래 예제는 0 부터 0x400000(4MB)까지 읽어서 out.bin 으로 복사하는 예. PORT - windows: COM#, Linux: /dev/ttyUSB# BAUDRATE - 460800 Recommended # esp32의 펌웨어를 읽어 out.bin으로 저장: from 0 to 0x400000 esptool.py -p PORT -b BAUDRATE read_flash 0 0x400000 out.bin # esp32의 펌웨어를 읽어 out.bin으로 저장: from 0 to ALL (auto detect) esptool.py -p PORT -b BAUDRATE read_flash 0 ALL out.bin # 저장해 놓은 out.bin을 다른 esp32에 업로드 esptool.py -p PORT -b BAUDRATE \\ --before default_reset \\ --after hard_reset \\ --chip esp32 write_flash \\ --flash_mode dio \\ --flash_freq 40m \\ --flash_size 4MB \\ 0x0 out.bin \\ REFERENCE esptool docs - https://docs.espressif.com/projects/esptool/en/latest/esp32/ ","permalink":"https://neosolaris.github.io/posts/esptool/","summary":"\u003ch2 id=\"intro\"\u003eINTRO\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eesptool은 python으로 만든 esp 펌웨어 툴이다.\u003c/li\u003e\n\u003cli\u003e펌웨어 읽기, 쓰기, 지우기가 가능하다.\u003c/li\u003e\n\u003cli\u003e기본 사용법을 숙지하고 필요에 따라 메뉴얼을 참고한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eINSTALL\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e다운로드 - \u003ca href=\"https://github.com/espressif/esptool/releases\"\u003ehttps://github.com/espressif/esptool/releases\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ewindows - \u003ccode\u003eesptool.exe\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eesptool-v4.x.x-win64.zip\u003c/code\u003e 압축을 풀고 esptool.exe를 사용\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eesptool.exe\u003c/code\u003e 단일 파일로 파이썬 설치를 필요로 하지 않는다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWindows - \u003ccode\u003eesptool.py\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003epython3를 설치한다.\u003c/li\u003e\n\u003cli\u003epowershell 또는 터미널창에서 pip로 설치한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003epip install esptool\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -h\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLinux - \u003ccode\u003eesptool.py\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003epython3가 없다면 설치한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install python3 python3-pip\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo pip install esptool\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -h\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"flash-upload\"\u003eFlash Upload\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePORT - windows:COM#, Linux: /dev/ttyUSB#\u003c/li\u003e\n\u003cli\u003eBAUDRATE - 460800 recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e nodemcu build image\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -p PORT  -b BAUDRATE \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --before default_reset \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --after hard_reset \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --chip esp32  write_flash \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --flash_mode dio \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --flash_size detect \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --flash_freq 40m \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e     0x1000 bootloader.bin \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e     0x8000 partition-table.bin \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e     0x10000 nodemcu.bin\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e other built-in image\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -p PORT  -b 460800 \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --before default_reset \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --after hard_reset \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --chip esp32  write_flash \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --flash_mode dio \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --flash_size detect \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --flash_freq 40m \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e     0x0 single-app.bin \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"firmware-check\"\u003eFirmware Check\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePORT - windows:COM#, Linux: /dev/ttyUSB#\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e check flash id info\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -p PORT flash_id\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e check built-in mac address\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -p PORT read_mac\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e check image info\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -p PORT image_info --version 2 my_esp_app.bin\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"firmware-erase\"\u003eFirmware Erase\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e연결된 esp32의 펌웨어 제거\u003c/li\u003e\n\u003cli\u003ePORT - windows:COM#, Linux: /dev/ttyUSB#\u003c/li\u003e\n\u003cli\u003eBAUDRATE - 460800 Recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -p $PORT -b $SPEED erase_flash\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"firmware-read\"\u003eFirmware Read\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eesp32에 들어있는 펌웨어를 복제하는 방법\u003c/li\u003e\n\u003cli\u003eflash_id로 flash_size를 확인 후 적용\u003c/li\u003e\n\u003cli\u003e아래 예제는 0 부터 0x400000(4MB)까지 읽어서 out.bin 으로 복사하는 예.\u003c/li\u003e\n\u003cli\u003ePORT - windows: COM#, Linux: /dev/ttyUSB#\u003c/li\u003e\n\u003cli\u003eBAUDRATE - 460800 Recommended\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e esp32의 펌웨어를 읽어 out.bin으로 저장: from \u003cspan class=\"m\"\u003e0\u003c/span\u003e to 0x400000\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -p PORT -b BAUDRATE read_flash 0 0x400000 out.bin\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e esp32의 펌웨어를 읽어 out.bin으로 저장: from \u003cspan class=\"m\"\u003e0\u003c/span\u003e to ALL \u003cspan class=\"o\"\u003e(\u003c/span\u003eauto detect\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -p PORT -b BAUDRATE read_flash 0 ALL out.bin\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e 저장해 놓은 out.bin을 다른 esp32에 업로드\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eesptool.py -p PORT  -b BAUDRATE \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --before default_reset \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --after hard_reset \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --chip esp32  write_flash \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --flash_mode dio \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --flash_freq 40m \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    --flash_size 4MB \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e     0x0 out.bin \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eesptool docs - \u003ca href=\"https://docs.espressif.com/projects/esptool/en/latest/esp32/\"\u003ehttps://docs.espressif.com/projects/esptool/en/latest/esp32/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"esptool - esp firmware flash upload, erase, read"},{"content":"비교표 아래 링크를 참조한다. 보다 자세하고 충분한 설명이 있다. https://makeradvisor.com/esp32-vs-esp8266/ 내용 ESP8266 ESP32 MCU Xtensa Single-core 32-bit L106 Xtensa Dual-Core 32-bit LX6 with 600 DMIPS 802.11 b/g/n Wi-Fi HT20 HT40 Bluetooth X Bluetooth 4.2 and BLE Typical Frequency 80 MHz 160 MHz SRAM X ✓ Flash X ✓ GPIO 17 36 Hardware /Software PWM None / 8 channels None / 16 channels SPI/I2C/I2S/UART 2/1/2/2 4/2/2/2 ADC 10-bit 12-bit CAN X ✓ Ethernet MAC Interface X ✓ Touch Sensor X ✓ Temperature Sensor X ✓(old versions) Working Temperature -40ºC to 125ºC -40ºC to 125ºC Hall effect sensor X ✓ Price\t$ (3$ – $6) ($6 – $12) 개발보드 ESP32 ESP8266 REFERENCE esp32-vs-esp8266 - https://makeradvisor.com/esp32-vs-esp8266/ ","permalink":"https://neosolaris.github.io/posts/esp8266-vs-esp32/","summary":"\u003ch2 id=\"비교표\"\u003e비교표\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래 링크를 참조한다. 보다 자세하고 충분한 설명이 있다.\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://makeradvisor.com/esp32-vs-esp8266/\"\u003ehttps://makeradvisor.com/esp32-vs-esp8266/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e내용\u003c/th\u003e\n          \u003cth\u003eESP8266\u003c/th\u003e\n          \u003cth\u003eESP32\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eMCU\u003c/td\u003e\n          \u003ctd\u003eXtensa Single-core 32-bit L106\u003c/td\u003e\n          \u003ctd\u003eXtensa Dual-Core 32-bit LX6 with 600 DMIPS\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e802.11 b/g/n Wi-Fi\u003c/td\u003e\n          \u003ctd\u003eHT20\u003c/td\u003e\n          \u003ctd\u003eHT40\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eBluetooth\u003c/td\u003e\n          \u003ctd\u003eX\u003c/td\u003e\n          \u003ctd\u003eBluetooth 4.2 and BLE\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eTypical Frequency\u003c/td\u003e\n          \u003ctd\u003e80 MHz\u003c/td\u003e\n          \u003ctd\u003e160 MHz\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eSRAM\u003c/td\u003e\n          \u003ctd\u003eX\u003c/td\u003e\n          \u003ctd\u003e✓\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFlash\u003c/td\u003e\n          \u003ctd\u003eX\u003c/td\u003e\n          \u003ctd\u003e✓\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eGPIO\u003c/td\u003e\n          \u003ctd\u003e17\u003c/td\u003e\n          \u003ctd\u003e36\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eHardware /Software PWM\u003c/td\u003e\n          \u003ctd\u003eNone / 8 channels\u003c/td\u003e\n          \u003ctd\u003eNone / 16 channels\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eSPI/I2C/I2S/UART\u003c/td\u003e\n          \u003ctd\u003e2/1/2/2\u003c/td\u003e\n          \u003ctd\u003e4/2/2/2\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eADC\u003c/td\u003e\n          \u003ctd\u003e10-bit\u003c/td\u003e\n          \u003ctd\u003e12-bit\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eCAN\u003c/td\u003e\n          \u003ctd\u003eX\u003c/td\u003e\n          \u003ctd\u003e✓\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eEthernet MAC Interface\u003c/td\u003e\n          \u003ctd\u003eX\u003c/td\u003e\n          \u003ctd\u003e✓\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eTouch Sensor\u003c/td\u003e\n          \u003ctd\u003eX\u003c/td\u003e\n          \u003ctd\u003e✓\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eTemperature Sensor\u003c/td\u003e\n          \u003ctd\u003eX\u003c/td\u003e\n          \u003ctd\u003e✓(old versions)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eWorking Temperature\u003c/td\u003e\n          \u003ctd\u003e-40ºC to 125ºC\u003c/td\u003e\n          \u003ctd\u003e-40ºC to 125ºC\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eHall effect sensor\u003c/td\u003e\n          \u003ctd\u003eX\u003c/td\u003e\n          \u003ctd\u003e✓\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003ePrice\t$\u003c/td\u003e\n          \u003ctd\u003e(3$ – $6)\u003c/td\u003e\n          \u003ctd\u003e($6 – $12)\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"개발보드\"\u003e개발보드\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eESP32\n\u003cimg alt=\"ESP32\" loading=\"lazy\" src=\"../https://makeradvisor.com/wp-content/uploads/2018/04/ESP32-DOIT-DEVKIT-V1-Board-Pinout-36-GPIOs-Copy.jpg\"\u003e\u003c/p\u003e","title":"ESP8266 vs ESP32"},{"content":"Intro nodemcu나 arduino를 이용한 회로 설계에 활용 Install 깃허브 개발용을 설치 https://github.com/fritzing/fritzing-app/releases 자신의 OS에 맞는 것을 선택 (ex. Windows: fritzing-xxx-develop-548.windows.64.zip) 압축을 풀고 적당한 곳에 옮긴 후 실행파일을 바탕화면에 링크복사 실행 parts관련 업데이트 창: clean parts선택 후 업데이트 windows User Files Folder: C:\\Users\\사용자명\\OneDrive\\문서\\Fritzing Nodemcu parts 등록하기 기본 설치시 esp32, esp8266이 없으므로 사용자 등록을 해준다. [esp32-parts] https://forum.fritzing.org/uploads/default/original/2X/8/8d99adbb2e8f966178bdb46f5cffa7bd72ce2c2a.fzpz [esp8266-parts] https://blog-cms.tasnimzotder.com/content/files/2022/01/NodeMCU-V1.0-1.fzpz 다운받은 파일을 우측상단 Parts 패널의 부메뉴\u0026gt;import를 클릭하여 로드한다. Parts 패널에 Mine\u0026gt;My parts에 등록된 것을 확인한다. import하여 등록한 parts는 C:\\Users\\사용자명\\OneDrive\\문서\\Fritzing 이하에 저장된다. 따라서 이를 백업해두면 나중에 쉽게 자신의 환경을 복원할 수 있다. REFERENCE Fritzing Home: https://fritzing.org/ Fritzing Github: https://github.com/fritzing/fritzing-app learning Fritzing: https://fritzing.org/learning/ ","permalink":"https://neosolaris.github.io/posts/fritzing/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003enodemcu나 arduino를 이용한 회로 설계에 활용\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e깃허브 개발용을 설치\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/fritzing/fritzing-app/releases\"\u003ehttps://github.com/fritzing/fritzing-app/releases\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e자신의 OS에 맞는 것을 선택 (ex. Windows: fritzing-xxx-develop-548.windows.64.zip)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e압축을 풀고 적당한 곳에 옮긴 후 실행파일을 바탕화면에 링크복사\u003c/li\u003e\n\u003cli\u003e실행\n\u003cul\u003e\n\u003cli\u003eparts관련 업데이트 창: clean parts선택 후 업데이트\u003c/li\u003e\n\u003cli\u003ewindows User Files Folder: \u003ccode\u003eC:\\Users\\사용자명\\OneDrive\\문서\\Fritzing\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"nodemcu-parts-등록하기\"\u003eNodemcu parts 등록하기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e기본 설치시 esp32, esp8266이 없으므로 사용자 등록을 해준다.\u003c/li\u003e\n\u003cli\u003e[esp32-parts]\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://forum.fritzing.org/uploads/default/original/2X/8/8d99adbb2e8f966178bdb46f5cffa7bd72ce2c2a.fzpz\"\u003ehttps://forum.fritzing.org/uploads/default/original/2X/8/8d99adbb2e8f966178bdb46f5cffa7bd72ce2c2a.fzpz\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e[esp8266-parts]\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://blog-cms.tasnimzotder.com/content/files/2022/01/NodeMCU-V1.0-1.fzpz\"\u003ehttps://blog-cms.tasnimzotder.com/content/files/2022/01/NodeMCU-V1.0-1.fzpz\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e다운받은 파일을 우측상단 Parts 패널의 \u003ccode\u003e부메뉴\u0026gt;import\u003c/code\u003e를 클릭하여 로드한다.\u003c/li\u003e\n\u003cli\u003eParts 패널에 \u003ccode\u003eMine\u0026gt;My parts\u003c/code\u003e에 등록된 것을 확인한다.\u003c/li\u003e\n\u003cli\u003eimport하여 등록한 parts는 \u003ccode\u003eC:\\Users\\사용자명\\OneDrive\\문서\\Fritzing\u003c/code\u003e 이하에 저장된다.\u003c/li\u003e\n\u003cli\u003e따라서 이를 백업해두면 나중에 쉽게 자신의 환경을 복원할 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFritzing Home: \u003ca href=\"https://fritzing.org/\"\u003ehttps://fritzing.org/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFritzing Github: \u003ca href=\"https://github.com/fritzing/fritzing-app\"\u003ehttps://github.com/fritzing/fritzing-app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003elearning Fritzing: \u003ca href=\"https://fritzing.org/learning/\"\u003ehttps://fritzing.org/learning/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Fritzing"},{"content":"Intro 기본 정보\nEspressif Systems 제조, 2016년 출시 Wi-Fi와 블루투스 무선 통신 기능을 탑재한 저전력 마이크로컨트롤러 강력한 퍼포먼스, 고성능 어플리케이션 처리 esp8266의 업그레이드 버전 스펙\nCPU - Xtensa® single-/dual-core 32-bit LX6 microprocessor(s) 동작전압 - 2.7V~3.6V WIFI - 802.11b/g/n (2.4 GHz) 블루투스 - v4.2 BR/EDR 및 Bluetooth LE IO(pinout) - 34 RAM - 448KB SRAM - 520KB 외장플래쉬 - 512KB(최소사양),OTA(on the air)최소사양(1MB)~16MB까지 지원 개발을 위한 준비물\nesp32 개발 컨트롤러 (인터넷에서 구매) nodemcu firmware - 직접 build하거나 배포된 이미지를 다운 받는다. firmware upload tool - esptool, NodeMCU-PyFlasher Esplorer - Java로 만든 GUI 개발 툴 (오픈소스, 여러 OS에 독립 실행) 개발방법은 아두이노IDE를 통한 개발(C언어)과 nodemcu + Esplorer를 통한 개발(Lua언어)이 있다.\n전자는 인터넷에 많은 자료와 예제가 있으므로 이를 참조한다.\n여기에서는 nodemcu(Lua base Firmware) + Esplorer(GUI Dev Tool)에 집중한다.\n개발 환경 구성 개발 환경 nodemcu - Lua 기반의 펌웨어\n참고사이트 - https://nodemcu.readthedocs.io/en/release/ esplorer에서 사용 가능하다. esp8266은 미리 빌드된 펌웨어를 제공하여 사용상 문제가 없으나 esp32는 제공되지 않는다. 현재 dev-esp32 프로젝트는 ipf4에 통합되면서 직접 빌드는 가능하나 빌드 및 사용시 많은 문제가 발생한다. LFS(Lua File System) 마운트 에러 - 부팅시 마운트 fail 파티션테이블의 각 영역 주소 에러 - 특별히 부팅시 LFS 주소값이 잘못 되었다고 나옴 gpio 모듈 변경 - gpio.mode 함수가 없어짐, 대신 gpio.config함수 존재, nodemcu 문서에 언급 없음. micropython의 다양한 빌드 이미지를 제공하는 것과 비교해 많이 실망스럽다. 과거에 비해 빌드시 에러가 많고 이를 해결해도 펌웨어가 제대로 동작하지 않는다. Luanode - Lua 기반의 펌웨어\n개인 개발 펌웨어지만 esp32에서 잘 동작한다. 미리 빌드된 펌웨어를 제공한다. esplorer에서 사용 가능하다. 단점으로는 4년 동안 업데이트가 없고 nodemcu와 조금 다르다. nodemcu 등에 비해서 충분한 모듈과 기술, 문서 등의 지원이 부족하다. Xedge - Lua 기반의 펌웨어\n참고사이트 - https://realtimelogic.com/ba/ESP32/source/GettingStarted.html 브라우저에서 펌웨어 다운로드 및 루아로 개발해 업로드 할 수 있는 환경. 기본 웹서비스 환경을 만들고 IoT를 지원한다. nodemcu와는 다른 API를 제공한다. esp32와 esp32-s3만을 지원한다. esp32는 일반적인 devkit은 안되고 WROVER버전 SRAM이 4MB 지원되는 모델이어야 한다. 간단히 말해서 xedge는 esp32-s3를 사용할 것을 권장한다. 조사해 보았는데 국외는 0.7~1만원(배송비포함)정도이고 국내는 1.5-2만원 정도이다. 이렇게 하드웨어 제약이 있기는 하지만 nodemcu에 비해 정말 훌륭한 환경을 제공하고 있다. 각종 API와 이에 대한 문서를 제공하고 있다. 계속해서 펌웨어와 문서가 업데이트되고 있다. 단순하고 심플한 기능보다는 좀 더 다양하고 복잡한 기능을 개발할 때 좋을 듯하다. Micropython - Python 기반의 펌웨어\n직접 빌드하는 것 뿐만 아니라 다양한 하드웨어의 펌웨어를 다운로드 받을 수 있다. arduino, esp8266, esp32 등 다양한 펌웨어 이미지를 제공한다. nodemcu에 비해 훨씬 견고하고 다양한 모듈과 문서를 제공한다. 시리얼포트로 접속하면 반가운 파이썬 프롬프트 \u0026gt;\u0026gt;\u0026gt;가 뜬다. 프롬프트 내에서 위쪽 화살키를 누르면 이전 명령어를 재 실행할 수 있다. 파이썬을 좋아한다면 가장 좋은 선택이 아닐까한다. Esp-idf - C, C++ 기반의 개발환경\nespressif사에서 제공하는 개발툴(firmware build, upload, debug, examples) esp칩 제조사에서 제공하므로 신뢰 및 안정적인 개발이 가능. 하지만 C, C++에 능숙하고, 많은 API를 공부해야 한다. 그리고 많은 소스 예제를 제공하지는 않는 것 같다. 그렇다면 다음 Arduino의 C, C++ 환경이 적합하지 않을까. Arduino - C, C++ 기반의 개발환경\nArduino IDE로 쉽게 개발할 수 있다. esp-idf 툴체인보다 단순화된 코드이므로 훨씬 쉽다. 수많은 사용자와 개발자들의 예제와 소스들이 가장 많다. 결론\nLua기반의 esp32 개발 환경은 아직 정돈되지 못하고 불편하다. 안정적이고 충분한 지원이 되는 펌웨어를 배포하는 micropython 환경이 부럽다. 현 시점에서 nodemcu는 충분한 시간을 두고 틈틈히 빌드환경을 공부하고 문제점을 해결하도록 한다. micropython의 장점은 컴파일 및 업로드가 생략되고 테스트가 빠르고 소스만 업로드 하므로 편리하다. 하지만 arduino IDE 환경에서 개발하는 것이 편리함, 방대한 자료 및 소스 등에서 최고이다. 단점이라면 컴파일 및 업로드가 조금 더 걸리는 정도이다. C와 C++로 가장 표준적인 개발은 esp-idf 개발 환경이다. STEP01. 하드웨어 준비: nodemcu esp32 dev kit usb serial driver install - CP210x_Universal_Windows_Driver https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers 장치 연결 확인 Windows - 장치관리자 \u0026gt; usb com serial port 확인 Linux - lsusb STEP02. NodeMCU 펌웨어 직접 빌드하는 것은 여러가지 문제가 있어 추후에 기술 nodemcu esp32 firmware download https://nodemcu-build.com/ 는 현재 esp8266만을 지원하는 것으로 보인다. LuaNode: 지금 시점에서 4년여 정도 지났지만 테스트용 펌웨어를 다운 받을 수 있다. https://github.com/Nicholas3388/LuaNode/tree/master/LuaNode_Esp32/firmware 펌웨어 업로드시 시작 주소값은 0x1000이다. 펌웨어를 esp32에 업로드(Flash) NodeMCU-PyFlasher.exe는 주소값을 지정해서 이미지를 쓸 수가 없어서 esptool.exe를 사용한다. esptool 설치 Python으로 만들었지만 파이썬을 따로 설치하지 않아도 된다. Windows - https://github.com/espressif/esptool/releases/download/v4.7.0/esptool-v4.7.0-win64.zip Linux - https://github.com/espressif/esptool/releases/download/v4.7.0/esptool-v4.7.0-linux-amd64.zip esp장치의 Com 포트번호 확인 (ex. COM6) 다음 명령 실행(Windows Powershell) esptool.exe -p COM6 -b 460800 --before default_reset --after hard_reset --chip esp32 write_flash --flash_mode dio --flash_size detect --flash_freq 40m 0x1000 .\\LuaNode_201705040906.bin 이미 설치된 펌웨어를 제거하고 다시 업로드할 때는 다음을 먼저 수행해 준다. esptool.exe -p COM6 -b 460800 erase_flash STEP03. Esplorer esp8266, esp32 모두 사용할 수 있다.\n자바 설치가 필요 - https://www.java.com/en/download/\n다운로드 - https://github.com/AndiDittrich/NodeMCU-Tool\n따로 설치가 필요없고 압축을 풀고 esplorer.bat(Windows) 또는 esplorer.sh(Linux)를 실행\n우측에 COM 포트 정해주고 연결(Open버튼), 속도는 (115200)\nIDE 좌측화면은 로컬 코딩 영역, 우측은 원격 장치 대화 영역\nlua 코드를 좌측화면에서 코딩 후 Upload또는 상단 Save시 init.lua로 저장\nesp 장치에 RST버튼을 눌러 reset해서 적용을 확인한다.\nExample Code - Built-in LED Test\nn = 0 max = 5 LED = 2 gpio.mode(LED, gpio.OUTPUT) while n \u0026lt; max do n = n + 1 print(n, \u0026#39;Built-in test esp32: LED(gpio #\u0026#39;.. LED ..\u0026#39;)\u0026#39; ) print(\u0026#39; --\u0026gt; On\u0026#39;) gpio.write(LED, gpio.HIGH) tmr.delay(1) print(\u0026#39; --\u0026gt; Off\u0026#39;) gpio.write(LED, gpio.LOW) tmr.delay(1) end esplorer 사용법 동영상 STEP04. NodeMCU 개발하기 nodemcu 레퍼런스 문서 주의할 것은 https://nodemcu.com 의 example은 오래되어 아래 문서를 참조. NodeMCU Document - https://nodemcu.readthedocs.io/en/release/ REFERENCE NodeMCU esp32 Document - https://nodemcu.readthedocs.io/en/dev-esp32/ NodeMCU custom builds - https://nodemcu-build.com/ esplorer - https://esp8266.ru/esplorer/ ","permalink":"https://neosolaris.github.io/posts/esp32/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e기본 정보\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEspressif Systems 제조, 2016년 출시\u003c/li\u003e\n\u003cli\u003eWi-Fi와 블루투스 무선 통신 기능을 탑재한 저전력 마이크로컨트롤러\u003c/li\u003e\n\u003cli\u003e강력한 퍼포먼스, 고성능 어플리케이션 처리\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../esp8266\"\u003eesp8266\u003c/a\u003e의 업그레이드 버전\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e스펙\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCPU - Xtensa® single-/dual-core 32-bit LX6 microprocessor(s)\u003c/li\u003e\n\u003cli\u003e동작전압 - 2.7V~3.6V\u003c/li\u003e\n\u003cli\u003eWIFI - 802.11b/g/n (2.4 GHz)\u003c/li\u003e\n\u003cli\u003e블루투스 - v4.2 BR/EDR 및 Bluetooth LE\u003c/li\u003e\n\u003cli\u003eIO(pinout) - 34\u003c/li\u003e\n\u003cli\u003eRAM - 448KB\u003c/li\u003e\n\u003cli\u003eSRAM - 520KB\u003c/li\u003e\n\u003cli\u003e외장플래쉬 - 512KB(최소사양),OTA(on the air)최소사양(1MB)~16MB까지 지원\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e개발을 위한 준비물\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eesp32 개발 컨트롤러 (인터넷에서 구매)\u003c/li\u003e\n\u003cli\u003enodemcu firmware - 직접 build하거나 배포된 이미지를 다운 받는다.\u003c/li\u003e\n\u003cli\u003efirmware upload tool - esptool, NodeMCU-PyFlasher\u003c/li\u003e\n\u003cli\u003eEsplorer - Java로 만든 GUI 개발 툴 (오픈소스, 여러 OS에 독립 실행)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e개발방법은 아두이노IDE를 통한 개발(C언어)과 nodemcu + Esplorer를 통한 개발(Lua언어)이 있다.\u003c/p\u003e","title":"esp32"},{"content":"Intro 기본 정보 Espressif Systems 제조, 2014 출시 Wi-Fi 무선 통신 기능을 탑재한 저전력 마이크로컨트롤러 저렴한 가격, IoT구현을 위한 최적의 컨트롤러 스펙 CPU - Tensilica Xtensa® L106(Diamond Standard 106Micro) @80/160MHz (32-bit RISC) 동작전압 - 2.7V~3.6V WIFI - 802.11 b/g/n(HT20) 프로토콜 IO(pinout) - 17 RAM - 160KB(iRAM64KB,dRAM96KB) SRAM - 1KB 외장플래쉬 - 512KB(최소사양),OTA(on the air)최소사양(1MB)~16MB까지 지원 개발을 위한 준비물 esp8266 개발 컨트롤러 (인터넷에서 구매) nodemcu firmware - 직접 build하거나 만들어진 이미지를 다운 받는다. firmware upload tool - esptool, NodeMCU-PyFlasher Esplorer - Java로 만든 GUI 개발 툴 (오픈소스, 여러 OS에 독립 실행) esp8266 개발보드 비교 - https://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/ 개발방법은 아두이노IDE를 통한 개발(C언어)과 nodemcu + Esplorer를 통한 개발(Lua언어)이 있다. 전자는 인터넷에 많은 자료와 예제가 있으므로 이를 참조한다. 여기에서는 nodemcu(Lua base Firmware) + Esplorer(GUI Dev Tool)에 집중한다. STEP01. 하드웨어 준비: nodemcu esp8266 dev kit usb serial driver install - CP210x_Universal_Windows_Driver https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers 장치 연결 확인 Windows - 장치관리자 \u0026gt; usb com serial port 확인 Linux - lsusb STEP02. NodeMCU 펌웨어 직접 빌드하는 것은 여러가지 문제가 있어 추후에 기술 여기에서는 직접 다운로드 받는 방법으로 빠르게 시작하도록 한다. nodemcu firmware download https://nodemcu-build.com/ 방문 자신의 email 주소를 입력 모듈을 추가: 꼭 필요한 것만 선택 ex - ADC, GPIO, HTTP, I2C, File, Net, Node, 1-wire, SPI, Timer, UART, WiFi Start Your Build 버튼 클릭 자신의 이메일 확인 - 보내준 메일 내용 중 해당 링크를 눌러 다운로드 float.bin은 부동소수점 지원, integer.bin은 정수형만 지원 펌웨어를 esp8266에 업로드(Flash) NodeMCU-PyFlasher.exe를 다운로드(독립형 프로그램으로 설치 불필요) esp장치의 Com 포트번호 확인 esp장치 펌웨어 업로드 세팅 - FLASH버튼 누른 상태에서 RST버튼 짧게 누름 실행 후 펌웨어 이미지 업로드 Serial Port - COM3 (자신의 COM포트 확인) NodeMCU firmware - 다운받은 펌웨어 지정 Baud Rate - 460800 Flash Mode - Dual I/O(Dio) Erase Flash - no, yes wipes all data (이전 flash 제거 여부) Flash NodeMCU 버튼 실행 STEP03. Esplorer 자바 설치가 필요 - https://www.java.com/en/download/\n다운로드 - https://github.com/AndiDittrich/NodeMCU-Tool\n따로 설치가 필요없고 압축을 풀고 esplorer.bat(Windows) 또는 esplorer.sh(Linux)를 실행\n우측에 COM 포트 정해주고 연결(Open버튼), 속도는 (115200)\nIDE 좌측화면은 로컬 코딩 영역, 우측은 원격 장치 대화 영역\nlua 코드를 좌측화면에서 코딩 후 Upload또는 상단 Save시 init.lua로 저장\nesp 장치에 RST버튼을 눌러 reset해서 적용을 확인한다.\nExample Code - Built-in LED Test\nlocal switch_light = true local mytimer = tmr.create() local INT_TIME = 1000 gpio.mode(0, gpio.OUTPUT) gpio.mode(4, gpio.OUTPUT) mytimer:register(INT_TIME, tmr.ALARM_AUTO, function(mytimer) if (switch_light) then gpio.write(0, gpio.LOW) gpio.write(4, gpio.HIGH) switch_light = false; else gpio.write(0, gpio.HIGH) gpio.write(4, gpio.LOW) switch_light = true; end end) mytimer:interval(INT_TIME) mytimer:start() Esplorer 사용법 동영상 REFERENCE NodeMCU Document - https://nodemcu.readthedocs.io/en/release/ NodeMCU custom builds - https://nodemcu-build.com/ esplorer - https://esp8266.ru/esplorer/ ","permalink":"https://neosolaris.github.io/posts/esp8266/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e기본 정보\n\u003cul\u003e\n\u003cli\u003eEspressif Systems 제조, 2014 출시\u003c/li\u003e\n\u003cli\u003eWi-Fi 무선 통신 기능을 탑재한 저전력 마이크로컨트롤러\u003c/li\u003e\n\u003cli\u003e저렴한 가격, IoT구현을 위한 최적의 컨트롤러\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e스펙\n\u003cul\u003e\n\u003cli\u003eCPU - Tensilica Xtensa® L106(Diamond Standard 106Micro) @80/160MHz (32-bit RISC)\u003c/li\u003e\n\u003cli\u003e동작전압 - 2.7V~3.6V\u003c/li\u003e\n\u003cli\u003eWIFI - 802.11 b/g/n(HT20) 프로토콜\u003c/li\u003e\n\u003cli\u003eIO(pinout) - 17\u003c/li\u003e\n\u003cli\u003eRAM - 160KB(iRAM64KB,dRAM96KB)\u003c/li\u003e\n\u003cli\u003eSRAM - 1KB\u003c/li\u003e\n\u003cli\u003e외장플래쉬 - 512KB(최소사양),OTA(on the air)최소사양(1MB)~16MB까지 지원\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e개발을 위한 준비물\n\u003cul\u003e\n\u003cli\u003eesp8266 개발 컨트롤러 (인터넷에서 구매)\u003c/li\u003e\n\u003cli\u003enodemcu firmware - 직접 build하거나 만들어진 이미지를 다운 받는다.\u003c/li\u003e\n\u003cli\u003efirmware upload tool - esptool, NodeMCU-PyFlasher\u003c/li\u003e\n\u003cli\u003eEsplorer - Java로 만든 GUI 개발 툴 (오픈소스, 여러 OS에 독립 실행)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eesp8266 개발보드 비교 - \u003ca href=\"https://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/\"\u003ehttps://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e개발방법은 아두이노IDE를 통한 개발(C언어)과 nodemcu + Esplorer를 통한 개발(Lua언어)이 있다.\u003c/li\u003e\n\u003cli\u003e전자는 인터넷에 많은 자료와 예제가 있으므로 이를 참조한다.\u003c/li\u003e\n\u003cli\u003e여기에서는 nodemcu(Lua base Firmware) + Esplorer(GUI Dev Tool)에 집중한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"step01-하드웨어-준비-nodemcu-esp8266-dev-kit\"\u003eSTEP01. 하드웨어 준비: nodemcu esp8266 dev kit\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eusb serial driver install - CP210x_Universal_Windows_Driver\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers\"\u003ehttps://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e장치 연결 확인\n\u003cul\u003e\n\u003cli\u003eWindows - 장치관리자 \u0026gt; usb com serial port 확인\u003c/li\u003e\n\u003cli\u003eLinux - \u003ccode\u003elsusb\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg alt=\"ESP8266\" loading=\"lazy\" src=\"../https://makeradvisor.com/wp-content/uploads/2020/05/ESP8266-NodeMCU-kit-12-E-pinout-gpio-pin.png\"\u003e\u003c/p\u003e","title":"esp8266"},{"content":"Intro a low-cost open source IoT platform arduino와 달리 와이파이 및 블루투스 모듈 탑재 사물인터넷(IoT)용 MCU 장치를 개발하는데 적합 종류 esp8266 esp32 esp8266-vs-esp32 - 비교 개발환경 아두이노 IDE (Linux, Windows, Mac) Esplorer (Linux, Windows, Mac - Java) TOOLS esptool - esp firmware upload, read tool ETC fritzing을 이용하여 프로젝트를 설계하고 회로도를 그릴 수 있다. REFERENCE 주의 - www.nodemcu.com의 example은 오래되었으므로 아래 docs를 참고한다. esp칩 제조사 - https://www.espressif.com/ nodemcu home - http://www.nodemcu.com docs esp8266 - https://nodemcu.readthedocs.io/en docs esp32 - https://nodemcu.readthedocs.io/en/dev-esp32/ faqs - https://nodemcu.readthedocs.io/en/dev-esp32/lua-developer-faq/ ","permalink":"https://neosolaris.github.io/posts/nodemcu/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ea low-cost open source IoT platform\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../arduino\"\u003earduino\u003c/a\u003e와 달리 와이파이 및 블루투스 모듈 탑재\u003c/li\u003e\n\u003cli\u003e사물인터넷(IoT)용 MCU 장치를 개발하는데 적합\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"종류\"\u003e종류\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../esp8266\"\u003eesp8266\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../esp32\"\u003eesp32\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../esp8266-vs-esp32\"\u003eesp8266-vs-esp32\u003c/a\u003e - 비교\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"개발환경\"\u003e개발환경\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아두이노 IDE (Linux, Windows, Mac)\u003c/li\u003e\n\u003cli\u003eEsplorer (Linux, Windows, Mac - Java)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tools\"\u003eTOOLS\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../esptool\"\u003eesptool\u003c/a\u003e - esp firmware upload, read tool\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"etc\"\u003eETC\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../fritzing\"\u003efritzing\u003c/a\u003e을 이용하여 프로젝트를 설계하고 회로도를 그릴 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e주의 - \u003ca href=\"https://www.nodemcu.com\"\u003ewww.nodemcu.com\u003c/a\u003e의 example은 오래되었으므로 아래 docs를 참고한다.\u003c/li\u003e\n\u003cli\u003eesp칩 제조사 - \u003ca href=\"https://www.espressif.com/\"\u003ehttps://www.espressif.com/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003enodemcu home - \u003ca href=\"http://www.nodemcu.com\"\u003ehttp://www.nodemcu.com\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003edocs esp8266 - \u003ca href=\"https://nodemcu.readthedocs.io/en\"\u003ehttps://nodemcu.readthedocs.io/en\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003edocs esp32 - \u003ca href=\"https://nodemcu.readthedocs.io/en/dev-esp32/\"\u003ehttps://nodemcu.readthedocs.io/en/dev-esp32/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003efaqs - \u003ca href=\"https://nodemcu.readthedocs.io/en/dev-esp32/lua-developer-faq/\"\u003ehttps://nodemcu.readthedocs.io/en/dev-esp32/lua-developer-faq/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"NodeMCU"},{"content":"Intro 사용하기 쉬운 하드웨어와 소프트웨어를 기반으로 한 오픈소스 전자 플랫폼 이탈리아 마시모 반지(Massimo Banzi,대학교수)가 개발 및 공개 비전공자를 위한 개발 보드 하드웨어 종류 $ arduino-cli board listall Board Name FQBN Adafruit Circuit Playground arduino:avr:circuitplay32u4cat Arduino BT arduino:avr:bt Arduino Duemilanove or Diecimila arduino:avr:diecimila Arduino Esplora arduino:avr:esplora Arduino Ethernet arduino:avr:ethernet Arduino Fio arduino:avr:fio Arduino Gemma arduino:avr:gemma Arduino Industrial 101 arduino:avr:chiwawa Arduino Leonardo arduino:avr:leonardo Arduino Leonardo ETH arduino:avr:leonardoeth Arduino Mega ADK arduino:avr:megaADK Arduino Mega or Mega 2560 arduino:avr:mega Arduino Micro arduino:avr:micro Arduino Mini arduino:avr:mini Arduino NG or older arduino:avr:atmegang Arduino Nano arduino:avr:nano Arduino Pro or Pro Mini arduino:avr:pro Arduino Robot Control arduino:avr:robotControl Arduino Robot Motor arduino:avr:robotMotor Arduino Uno arduino:avr:uno Arduino Uno Mini arduino:avr:unomini Arduino Uno WiFi arduino:avr:unowifi Arduino Yún arduino:avr:yun Arduino Yún Mini arduino:avr:yunmini LilyPad Arduino arduino:avr:lilypad LilyPad Arduino USB arduino:avr:LilyPadUSB Linino One arduino:avr:one 소프트웨어 설치 arduino-ide - 아두이노 홈페이지에 OS별로 다운로드 및 설치 가능 arduino cli - Command Line Interface (Linux, Win용) REFERENCE 아두이노 - https://www.arduino.cc ","permalink":"https://neosolaris.github.io/posts/arduino/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e사용하기 쉬운 하드웨어와 소프트웨어를 기반으로 한 오픈소스 전자 플랫폼\u003c/li\u003e\n\u003cli\u003e이탈리아 마시모 반지(Massimo Banzi,대학교수)가 개발 및 공개\u003c/li\u003e\n\u003cli\u003e비전공자를 위한 개발 보드\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"하드웨어-종류\"\u003e하드웨어 종류\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ arduino-cli board listall\n\nBoard Name                       FQBN\nAdafruit Circuit Playground      arduino:avr:circuitplay32u4cat\nArduino BT                       arduino:avr:bt\nArduino Duemilanove or Diecimila arduino:avr:diecimila\nArduino Esplora                  arduino:avr:esplora\nArduino Ethernet                 arduino:avr:ethernet\nArduino Fio                      arduino:avr:fio\nArduino Gemma                    arduino:avr:gemma\nArduino Industrial 101           arduino:avr:chiwawa\nArduino Leonardo                 arduino:avr:leonardo\nArduino Leonardo ETH             arduino:avr:leonardoeth\nArduino Mega ADK                 arduino:avr:megaADK\nArduino Mega or Mega 2560        arduino:avr:mega\nArduino Micro                    arduino:avr:micro\nArduino Mini                     arduino:avr:mini\nArduino NG or older              arduino:avr:atmegang\nArduino Nano                     arduino:avr:nano\nArduino Pro or Pro Mini          arduino:avr:pro\nArduino Robot Control            arduino:avr:robotControl\nArduino Robot Motor              arduino:avr:robotMotor\nArduino Uno                      arduino:avr:uno\nArduino Uno Mini                 arduino:avr:unomini\nArduino Uno WiFi                 arduino:avr:unowifi\nArduino Yún                      arduino:avr:yun\nArduino Yún Mini                 arduino:avr:yunmini\nLilyPad Arduino                  arduino:avr:lilypad\nLilyPad Arduino USB              arduino:avr:LilyPadUSB\nLinino One                       arduino:avr:one\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"소프트웨어-설치\"\u003e소프트웨어 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003earduino-ide - 아두이노 홈페이지에 OS별로 다운로드 및 설치 가능\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../arduino-cli\"\u003earduino cli\u003c/a\u003e - Command Line Interface (Linux, Win용)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아두이노 - \u003ca href=\"https://www.arduino.cc\"\u003ehttps://www.arduino.cc\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Arduino - 아두이노"},{"content":"Intro arduino-cli는 아두이노 IDE의 명령라인 툴이다. (소프트웨어 툴) Shell Script로 여러 번거로운 작업을 자동화 할 수 있다. nvim 이나 vim에서 개발할 수 있는 환경에 적용할 수 있다. nvim을 중심으로 코드 작성, 컴파일, 디버깅을 모두 처리할 수 있다. 설치 및 사용환경: windows, windows-wsl2-alpine, linux-ubuntu Intall: Windows reference: https://dumblebots.com/2020/08/02/arduino-cli-getting-started-windows/ 윈도우즈용 arduino-cli.exe를 다운받아 설치, dos-shell 또는 powershell에서 경로 추가하고 사용 이를 윈도우즈 wsl2 기반의 리눅스에서 사용할 경우 /mnt/c/\u0026lt;이하경로\u0026gt;로 접근 가능하다. PATH에 추가. Install: Linux 일반사용자의 경우 ~/bin에 설치: PATH에 추가 curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh Install: windows-wsl2-alpine reference: https://github.com/dorssel/usbipd-win/wiki/WSL-support 아두이노 장치를 USB에 연결한다. wsl2-alpine - gcompat, usbip, hwdata 설치 gcompat은 ardunino-cli로 컴파일할 때 ld-linux-x86-64.so.2 사용하는데 alpine은 musl 기반이므로 호환 지원 패키지를 설치해야 한다. usbip는 usbipd의 클라이언트 패키지 hwdata는 USB등의 장치파일 ardunino-cli 사용자 설치시에 USB장치 소유권 문제가 있다. 장치 소유권을 해당 사용자로 변경한다. windows - usbipd-win 설치 및 설정 usbipd는 윈도우즈에서 wsl2 등에 USB 장치를 공유해주는 데몬 프로그램 반드시 관리자 권한으로 실행해 주어야한다. 아두이노 장치를 wsl2에 붙여 주었을 경우 윈도우에서는 사용할 수 없다. 이 데몬은 usbip 클라이언트의 요청을 통해 USB장치(여기에서는 아두이노)를 공유 # WSL2-Alpine Linux: Pre-Package Install doas apk update doas apk add gcompat linux-tools-usbip hwdata # Windows-Powershell # 관리자권한으로 실행, 윈도우즈 재부팅시 다시 설정해주어야 한다. # 연결시 자동 attach 방법을 모색할 필요가 있다. # usbipd를 설치하고 wsl list를 통해 아두이노의 busid를 확인하고 이를 연결하고 확인. winget usbipd usbipd wsl list usbipd wsl attach --busid=2-2 usbipd wsl list # WSL2-Alpine Linux: arduino-cli Install # usb 지원여부 확인 # ardunino-cli 설치 및 패스 설정 # 장치 소유권 현 사용자로 변경 lsusb curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh export PATH=$PATH:$HOME/bin arduino-cli board list doas chown -R \u0026lt;user_id\u0026gt;:\u0026lt;user_id\u0026gt; /dev/ttyACM0 arduino-cli --help Install: debian, ubuntu lsusb curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh export PATH=$PATH:$HOME/bin arduino-cli board list sudo chown -R \u0026lt;user_id\u0026gt;:\u0026lt;user_id\u0026gt; /dev/ttyACM0 arduino-cli --help 시작하기 reference: https://arduino.github.io/arduino-cli/0.35/getting-started/ 아래는 Ardunino UNO의 경우 # 도움말 arduino-cli help arduino-cli help core # 설정 파일 초기화 (~/.arduino15/arduino-cli.yaml) arduino-cli config init # 장치와 연결하기 (Arduino UNO) arduino-cli board list arduino-cli core update-index arduino-cli core install arduino:avr arduino-cli board listall mkr # list의 보드가 Unknown으로 나올 경우 arduino-cli board list # 소스 작성 (동일한 스케치 이름의 폴더와 파일이 필요) # 다른 방법: arduino-cli sketch new myfirst \u0026amp;\u0026amp; vim myfirst/myfirst.ino mkdir myfirst cat\u0026lt;\u0026lt;EOF \u0026gt; myfirst/myfirst.ino void setup() { pinMode(LED_BUILTIN, OUTPUT); } void loop() { digitalWrite(LED_BUILTIN, HIGH); delay(1000); digitalWrite(LED_BUILTIN, LOW); delay(1000); } # 컴파일과 업로드하기 (upload시 자동 컴파일) # 장치명 확인: ardunino-cli board list # 컴파일(-b) arduino-cli compile --fqbn arduino:avr:uno myfirst # 업로드 (-u) arduino-cli upload -p /dev/ttyACM0 --fqbn arduino:avr:uno myfirst # 컴파일(-b) \u0026amp; 업로드(-u) arduino-cli compile -p /dev/ttyACM0 -u arduino:avr:uno myfirst REFERENCE ardunino-cli 설치 및 시작 - https://arduino.github.io/arduino-cli/0.35/getting-started/ 윈도우즈 설치 및 안내 - https://dumblebots.com/2020/08/02/arduino-cli-getting-started-windows/ wsl2에서 usb장치 연결 - https://github.com/dorssel/usbipd-win ardunino-cli linux install - https://m.blog.naver.com/roboholic84/221815428642 ","permalink":"https://neosolaris.github.io/posts/arduino-cli/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003earduino-cli는 아두이노 IDE의 명령라인 툴이다. (소프트웨어 툴)\u003c/li\u003e\n\u003cli\u003eShell Script로 여러 번거로운 작업을 자동화 할 수 있다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../nvim\"\u003envim\u003c/a\u003e 이나 vim에서 개발할 수 있는 환경에 적용할 수 있다.\u003c/li\u003e\n\u003cli\u003envim을 중심으로 코드 작성, 컴파일, 디버깅을 모두 처리할 수 있다.\u003c/li\u003e\n\u003cli\u003e설치 및 사용환경: windows, windows-wsl2-alpine, linux-ubuntu\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"intall-windows\"\u003eIntall: Windows\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ereference: \u003ca href=\"https://dumblebots.com/2020/08/02/arduino-cli-getting-started-windows/\"\u003ehttps://dumblebots.com/2020/08/02/arduino-cli-getting-started-windows/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e윈도우즈용 arduino-cli.exe를 다운받아 설치, dos-shell 또는 powershell에서 경로 추가하고 사용\u003c/li\u003e\n\u003cli\u003e이를 윈도우즈 wsl2 기반의 리눅스에서 사용할 경우 \u003ccode\u003e/mnt/c/\u0026lt;이하경로\u0026gt;\u003c/code\u003e로 접근 가능하다. PATH에 추가.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install-linux\"\u003eInstall: Linux\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e일반사용자의 경우 \u003ccode\u003e~/bin\u003c/code\u003e에 설치: PATH에 추가\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecurl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"install-windows-wsl2-alpine\"\u003eInstall: windows-wsl2-alpine\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ereference: \u003ca href=\"https://github.com/dorssel/usbipd-win/wiki/WSL-support\"\u003ehttps://github.com/dorssel/usbipd-win/wiki/WSL-support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e아두이노 장치를 USB에 연결한다.\u003c/li\u003e\n\u003cli\u003ewsl2-alpine - gcompat, usbip, hwdata 설치\n\u003cul\u003e\n\u003cli\u003egcompat은 ardunino-cli로 컴파일할 때 ld-linux-x86-64.so.2 사용하는데 alpine은 musl 기반이므로 호환 지원 패키지를 설치해야 한다.\u003c/li\u003e\n\u003cli\u003eusbip는 usbipd의 클라이언트 패키지\u003c/li\u003e\n\u003cli\u003ehwdata는 USB등의 장치파일\u003c/li\u003e\n\u003cli\u003eardunino-cli 사용자 설치시에 USB장치 소유권 문제가 있다. 장치 소유권을 해당 사용자로 변경한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003ewindows - usbipd-win 설치 및 설정\n\u003cul\u003e\n\u003cli\u003eusbipd는 윈도우즈에서 wsl2 등에 USB 장치를 공유해주는 데몬 프로그램\u003c/li\u003e\n\u003cli\u003e반드시 관리자 권한으로 실행해 주어야한다.\u003c/li\u003e\n\u003cli\u003e아두이노 장치를 wsl2에 붙여 주었을 경우 윈도우에서는 사용할 수 없다.\u003c/li\u003e\n\u003cli\u003e이 데몬은 usbip 클라이언트의 요청을 통해 USB장치(여기에서는 아두이노)를 공유\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# WSL2-Alpine Linux: Pre-Package Install\ndoas apk update\ndoas apk add gcompat linux-tools-usbip hwdata\n\n# Windows-Powershell \n# 관리자권한으로 실행, 윈도우즈 재부팅시 다시 설정해주어야 한다. \n# 연결시 자동 attach 방법을 모색할 필요가 있다.\n# usbipd를 설치하고 wsl list를 통해 아두이노의 busid를 확인하고 이를 연결하고 확인.\nwinget usbipd\nusbipd wsl list\nusbipd wsl attach --busid=2-2\nusbipd wsl list\n\n# WSL2-Alpine Linux: arduino-cli Install\n# usb 지원여부 확인\n# ardunino-cli 설치 및 패스 설정\n# 장치 소유권 현 사용자로 변경\nlsusb\ncurl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh\nexport PATH=$PATH:$HOME/bin\narduino-cli board list\ndoas chown -R \u0026lt;user_id\u0026gt;:\u0026lt;user_id\u0026gt; /dev/ttyACM0\narduino-cli --help\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"install-debian-ubuntu\"\u003eInstall: debian, ubuntu\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003elsusb\ncurl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh\nexport PATH=$PATH:$HOME/bin\narduino-cli board list\nsudo chown -R \u0026lt;user_id\u0026gt;:\u0026lt;user_id\u0026gt; /dev/ttyACM0\narduino-cli --help\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"시작하기\"\u003e시작하기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ereference: \u003ca href=\"https://arduino.github.io/arduino-cli/0.35/getting-started/\"\u003ehttps://arduino.github.io/arduino-cli/0.35/getting-started/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e아래는 Ardunino UNO의 경우\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# 도움말\narduino-cli help\narduino-cli help core\n\n# 설정 파일 초기화 (~/.arduino15/arduino-cli.yaml)\narduino-cli config init\n\n# 장치와 연결하기 (Arduino UNO)\narduino-cli board list\narduino-cli core update-index\narduino-cli core install arduino:avr\narduino-cli board listall mkr  # list의 보드가 Unknown으로 나올 경우\narduino-cli board list\n\n# 소스 작성 (동일한 스케치 이름의 폴더와 파일이 필요)\n# 다른 방법: arduino-cli sketch new myfirst \u0026amp;\u0026amp; vim myfirst/myfirst.ino\nmkdir myfirst\ncat\u0026lt;\u0026lt;EOF \u0026gt; myfirst/myfirst.ino\nvoid setup() {\n    pinMode(LED_BUILTIN, OUTPUT);\n}\n\nvoid loop() {\n    digitalWrite(LED_BUILTIN, HIGH);\n    delay(1000);\n    digitalWrite(LED_BUILTIN, LOW);\n    delay(1000);\n}\n\n# 컴파일과 업로드하기 (upload시 자동 컴파일)\n# 장치명 확인: ardunino-cli board list\n# 컴파일(-b)\narduino-cli compile --fqbn arduino:avr:uno myfirst \n# 업로드 (-u)\narduino-cli upload  -p /dev/ttyACM0 --fqbn arduino:avr:uno myfirst\n# 컴파일(-b) \u0026amp; 업로드(-u)\narduino-cli compile -p /dev/ttyACM0 -u arduino:avr:uno myfirst\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eardunino-cli 설치 및 시작 - \u003ca href=\"https://arduino.github.io/arduino-cli/0.35/getting-started/\"\u003ehttps://arduino.github.io/arduino-cli/0.35/getting-started/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e윈도우즈 설치 및 안내 - \u003ca href=\"https://dumblebots.com/2020/08/02/arduino-cli-getting-started-windows/\"\u003ehttps://dumblebots.com/2020/08/02/arduino-cli-getting-started-windows/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ewsl2에서 usb장치 연결 - \u003ca href=\"https://github.com/dorssel/usbipd-win\"\u003ehttps://github.com/dorssel/usbipd-win\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eardunino-cli linux install - \u003ca href=\"https://m.blog.naver.com/roboholic84/221815428642\"\u003ehttps://m.blog.naver.com/roboholic84/221815428642\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Arduino-cli - 아두이노 명령라인 사용"},{"content":"Dockerfile 에서 RUN, CMD, ENTRYPOINT 차이 RUN - 도커이미지 생성시 동작 CMD - 도커이미지 실행시 동작 (대체 가능) ENTRYPOINT - CMD와 같으나 실행시 반드시 동작 Dockerfile - RUN # create log script vi log-event.sh ... #!/bin/sh echo `date` $@ \u0026gt;\u0026gt; log.txt cat log.txt ... chmod u+x log-event.sh # create Docker Image vi Dockerfile ... FROM alpine ADD log-event.sh / RUN [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;image created\u0026#34;] # 생성시 동작 CMD [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;container started\u0026#34;] # 실행시 동작 ... docker build -t myimage . # Run Docker Image - RUN은 이미지 생성시에 동작했음을 알 수 있다. docker run myimage Wed Sep 27 07:10:26 UTC 2023 image created Wed Sep 27 07:36:10 UTC 2023 container started docker run myimage Wed Sep 27 07:10:26 UTC 2023 image created Wed Sep 27 07:36:21 UTC 2023 container started Dockerfile - CMD, ENTRYPOINT 여러개의 CMD # Create Docker Image vi Dockerfile ... FROM alpine ADD log-event.sh / RUN [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;image created\u0026#34;] # 생성시 동작 CMD [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;container started\u0026#34;] # 실행시 동작 (무시됨) CMD [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;container running\u0026#34;] # 실행시 동작 (마지막CMD처리) ... docker build -t myimage . # Run Docker Image docker run myimage Wed Sep 27 07:10:26 UTC 2023 image created Wed Sep 27 07:23:09 UTC 2023 container running CMD와 ENTRYPOINT # Create Docker Image vi Dockerfile ... FROM alpine ADD log-event.sh / RUN [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;image created\u0026#34;] # 생성시 동작 ENTRYPOINT [\u0026#34;/log-event.sh\u0026#34;] # 실행시 동작 CMD [\u0026#34;container started\u0026#34;] # 실행시 동작 ... docker build -t myimage . # Run Docker Image docker run myimage Wed Sep 27 07:10:26 UTC 2023 image created Wed Sep 27 07:23:09 UTC 2023 container started # Run Docker Image with argument docker run myimage custom event Wed Sep 27 07:10:26 UTC 2023 image created Wed Sep 27 07:24:31 UTC 2023 custom event REFERENCE Difference Between run, cmd and entrypoint in a Dockerfile - https://www.baeldung.com/ops/dockerfile-run-cmd-entrypoint Entrypoint vs cmd - https://bluese05.tistory.com/77 ","permalink":"https://neosolaris.github.io/posts/docker-run-cmd-entrypoint/","summary":"\u003ch2 id=\"dockerfile-에서-run-cmd-entrypoint--차이\"\u003eDockerfile 에서 RUN, CMD, ENTRYPOINT  차이\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRUN - 도커이미지 생성시 동작\u003c/li\u003e\n\u003cli\u003eCMD - 도커이미지 실행시 동작 (대체 가능)\u003c/li\u003e\n\u003cli\u003eENTRYPOINT - CMD와 같으나 실행시 반드시 동작\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"dockerfile---run\"\u003eDockerfile - RUN\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# create log script\nvi log-event.sh\n...\n#!/bin/sh\necho `date` $@ \u0026gt;\u0026gt; log.txt\ncat log.txt\n...\nchmod u+x log-event.sh\n\n# create Docker Image\nvi Dockerfile\n...\nFROM alpine\nADD log-event.sh /\nRUN [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;image created\u0026#34;] # 생성시 동작\nCMD [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;container started\u0026#34;] # 실행시 동작\n...\ndocker build -t myimage .\n\n# Run Docker Image - RUN은 이미지 생성시에 동작했음을 알 수 있다.\ndocker run myimage\nWed Sep 27 07:10:26 UTC 2023 image created\nWed Sep 27 07:36:10 UTC 2023 container started\n\ndocker run myimage\nWed Sep 27 07:10:26 UTC 2023 image created\nWed Sep 27 07:36:21 UTC 2023 container started\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"dockerfile---cmd-entrypoint\"\u003eDockerfile - CMD, ENTRYPOINT\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e여러개의 CMD\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# Create Docker Image\nvi Dockerfile\n...\nFROM alpine\nADD log-event.sh /\nRUN [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;image created\u0026#34;] # 생성시 동작\nCMD [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;container started\u0026#34;] # 실행시 동작 (무시됨)\nCMD [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;container running\u0026#34;] # 실행시 동작 (마지막CMD처리)\n...\ndocker build -t myimage .\n\n# Run Docker Image\ndocker run myimage\nWed Sep 27 07:10:26 UTC 2023 image created\nWed Sep 27 07:23:09 UTC 2023 container running\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eCMD와 ENTRYPOINT\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# Create Docker Image\nvi Dockerfile\n...\nFROM alpine\nADD log-event.sh /\nRUN [\u0026#34;/log-event.sh\u0026#34;,\u0026#34;image created\u0026#34;] # 생성시 동작\nENTRYPOINT [\u0026#34;/log-event.sh\u0026#34;] # 실행시 동작\nCMD [\u0026#34;container started\u0026#34;]    # 실행시 동작\n...\ndocker build -t myimage .\n\n# Run Docker Image\ndocker run myimage\nWed Sep 27 07:10:26 UTC 2023 image created\nWed Sep 27 07:23:09 UTC 2023 container started\n\n# Run Docker Image with argument\ndocker run myimage custom event\nWed Sep 27 07:10:26 UTC 2023 image created\nWed Sep 27 07:24:31 UTC 2023 custom event\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDifference Between run, cmd and entrypoint in a Dockerfile - \u003ca href=\"https://www.baeldung.com/ops/dockerfile-run-cmd-entrypoint\"\u003ehttps://www.baeldung.com/ops/dockerfile-run-cmd-entrypoint\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eEntrypoint vs cmd - \u003ca href=\"https://bluese05.tistory.com/77\"\u003ehttps://bluese05.tistory.com/77\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Dockerfile - run, cmd, entrypoint 차이"},{"content":"Nvidia Quadro 5000 최신 드라이버 설치: windows 10, 11 dp 연결: 그래픽 출력의 최적은 현재로서는 dp이다. dp선을 연결 다른 선이 있을 경우 제거하면 디폴트로 화면 출력이 된다. ","permalink":"https://neosolaris.github.io/posts/graphic-card/","summary":"\u003ch2 id=\"nvidia-quadro-5000\"\u003eNvidia Quadro 5000\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e최신 드라이버 설치: windows 10, 11\u003c/li\u003e\n\u003cli\u003edp 연결: 그래픽 출력의 최적은 현재로서는 dp이다.\n\u003cul\u003e\n\u003cli\u003edp선을 연결\u003c/li\u003e\n\u003cli\u003e다른 선이 있을 경우 제거하면 디폴트로 화면 출력이 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Graphic Card - 그래픽카드"},{"content":"INTRO openresty는 nginx와 lua 기반의 웹개발 플랫폼이다. lua는 luajit 을 사용하고 엔진이 포함되어 있다. 서버에서 동작한다. 대부분의 리눅스 배포판은 패키지를 지원한다. 여기에서는 docker 이미지로 설치하고 사용하는 방법을 정리한다. System Info: RaspberryPi 3 Model B Rev 1.2 OS: Raspbian (Debian 11, Bullseye) Docker: version 24.0.5 Getting Started Hello World # Install Docker and Relogin after exit curl -sSL https://get.docker.com | sh sudo usermod -aG docker $usermod exit ... docker run hello-world # Docker Image get docker pull openresty/openresty:alpine # Setup mkdir ~/www cd ~/www mkdir conf html vi conf/nginx.conf ... worker_processes 1; error_log error.log; events { worker_connections 1024; } http { server { listen 8000; location / { default_type text/html; content_by_lua \u0026#39; ngx.say(\u0026#34;\u0026lt;p\u0026gt;hello world!\u0026lt;/p\u0026gt;\u0026#34;) \u0026#39;; } } } ... # Run openresty docker image docker run --name mresty --rm --volume `pwd`/conf/:/usr/local/openresty/nginx/conf/ \\ -p 127.0.0.1:8000:8000 openresty/openresty:alpine # docker process check docker ps # openresty web server test curl localhost:8000 \u0026lt;p\u0026gt;hello world!\u0026lt;/p\u0026gt; Openresty Comandline Utility # version check resty -v # Hello World resty -e \u0026#39;print(\u0026#34;Hello World\u0026#34;)\u0026#39; echo \u0026#39;print(\u0026#34;Hello World\u0026#34;)\u0026#39; \u0026gt; hello.lua resty hello.lua # resty ngx module test time resty -e \u0026#39;gnx.sleep(1) ngx.say(\u0026#34;done\u0026#34;)\u0026#39; resty -e \u0026#39;local sock = ngx.socket.tcp() print(socke:connect(\u0026#34;openresty.com\u0026#34;,443))\u0026#39; resty -e \u0026#39;ngx.thread.wait(ngx.thread.spawn(function () print(\u0026#34;in thread!\u0026#34;) end))\u0026#39; mkdir lua/ vim lua/test.lua ... local _M = {} function _M.hello() print(\u0026#34;Hello\u0026#34;) end return _M ... resty -e \u0026#39;require \u0026#34;test\u0026#34;.hello()\u0026#39; # Error resty -I lua/ -e \u0026#39;require \u0026#34;test\u0026#34;.hello()\u0026#39; # Hello resty -e \u0026#39;local ok, stdout = require \u0026#34;resty.shell\u0026#34;.run([[echo ok]]) print(stdout)\u0026#39; # ok resty --shdict \u0026#39;dogs 10m\u0026#39; -e \u0026#39;print(ngx.shared.dogs:set(\u0026#34;age\u0026#34;,11))\u0026#39; # truenilfalse resty --shdict \u0026#39;dogs 7m\u0026#39; --shdict \u0026#39;cats 5m\u0026#39; -e \u0026#39;print(ngx.shared.dogs, \u0026#34; \u0026#34;, ngx.shared.cats)\u0026#39; resty --http-conf \u0026#39;lua_regex_match_limit 102400;\u0026#39; -e \u0026#39;print \u0026#34;ok\u0026#34;\u0026#39; # Bench Test echo \u0026#39;local a = 0 for 1, 1e8 do a = a+1 end print(a)\u0026#39; \u0026gt; bench.lua time resty -joff bench.lua # without Jit Compiler time resty bench.lua # with Jit Compiler (Fast) resty -jv bench.lua resty -jdump bench.lua | less # Help resty -h | less # See Help restydoc resty-cli # See Document Structure and Lua Module Create Project Folder and Modules mkdir test-module cd test-module mkdir logs conf lua vim lua/hello.lua ... local _M = {} function _M.greet(name) ngx.say(\u0026#34;Greetings from \u0026#34;, name) end return _M ... Setup nginx.conf vim conf/nginx.conf ... worker_processes 1; events { worker_connections 1024; } http { # Lua module Preload for performance and Cache init_by_lua_block { require \u0026#34;hello\u0026#34; } # add module path to lua package path: $prefix means nginx -p option value lua_package_path \u0026#34;$prefix/lua/?.lua;;\u0026#34; # Server Setup: port, lua block... server { listen 8080 reuseport; location / { content_by_lua_block { local hello = require \u0026#34;hello\u0026#34; hello.greet(\u0026#34;a Lua module\u0026#34;) } } } } ... Server start and Test # server configuration test nginx -p $PWD/ -t # server start nginx -p $PWD/ # Chech Error Log tail logs/error.log # client request test : Browser also available curl \u0026#39;http://127.0.0.1:8080\u0026#39; Greetins from a Lua module Server Admin # check server process ps aux | grep nginx | grep -v /tmp/ pgrep -l nginx # Edit nginx.conf vim conf/nginx.conf # Server Restart (After editting of nginx.conf) kill -HUP `cat logs/nginx.pid` # client request again curl \u0026#39;http://127.0.0.1:8080\u0026#39; Build Develop Environment Makefile을 만들고 도커이미지를 제어하고 로그 등을 확인할 수 있는 환경을 만든다. Makefile conf/nginx.conf Test REFERENCE awesome-resty - https://github.com/bungle/awesome-resty\nDocker\nRaspberryPi Docker - https://pimylifeup.com/raspberry-pi-docker/ Openresty\nOpenresty - https://openresty.org Openresty Getting Started - https://openresty.org/en/getting-started.html Openresty Linux Package List - https://openresty.org/en/linux-packages.html Openresty FAQs - https://openresty.org/en/faq.html Openresty Resources - https://openresty.org/en/resources.html Openresty Directives - https://openresty-reference.readthedocs.io/en/latest/Directives/ Openresty API - https://openresty-reference.readthedocs.io/en/latest/Lua_Nginx_API/ An-Introduction-To-OpenResty-Nginx-Lua - https://www.openmymind.net/An-Introduction-To-OpenResty-Nginx-Lua/ ","permalink":"https://neosolaris.github.io/posts/openresty/","summary":"\u003ch2 id=\"intro\"\u003eINTRO\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eopenresty는 nginx와 lua 기반의 웹개발 플랫폼이다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../lua\"\u003elua\u003c/a\u003e는 \u003ca href=\"../luajit\"\u003eluajit\u003c/a\u003e 을 사용하고 엔진이 포함되어 있다.\u003c/li\u003e\n\u003cli\u003e서버에서 동작한다.\u003c/li\u003e\n\u003cli\u003e대부분의 리눅스 배포판은 패키지를 지원한다.\u003c/li\u003e\n\u003cli\u003e여기에서는 \u003ca href=\"../docker\"\u003edocker\u003c/a\u003e 이미지로 설치하고 사용하는 방법을 정리한다.\u003c/li\u003e\n\u003cli\u003eSystem Info: RaspberryPi 3 Model B Rev 1.2\u003c/li\u003e\n\u003cli\u003eOS: Raspbian (Debian 11, Bullseye)\u003c/li\u003e\n\u003cli\u003eDocker: version 24.0.5\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"getting-started\"\u003eGetting Started\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHello World\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# Install Docker and Relogin after exit\n\ncurl -sSL https://get.docker.com | sh\nsudo usermod -aG docker $usermod\nexit\n...\ndocker run hello-world\n\n# Docker Image get\ndocker pull openresty/openresty:alpine\n\n# Setup\nmkdir ~/www\ncd ~/www\nmkdir conf html\nvi conf/nginx.conf\n...\nworker_processes 1;\nerror_log error.log;\nevents {\n    worker_connections 1024;\n}\nhttp {\n    server {\n        listen 8000;\n        location / {\n            default_type text/html;\n            content_by_lua \u0026#39;\n                ngx.say(\u0026#34;\u0026lt;p\u0026gt;hello world!\u0026lt;/p\u0026gt;\u0026#34;)\n            \u0026#39;;\n        }\n    }\n}\n...\n\n# Run openresty docker image\ndocker run --name mresty --rm --volume `pwd`/conf/:/usr/local/openresty/nginx/conf/ \\\n    -p 127.0.0.1:8000:8000 openresty/openresty:alpine\n\n# docker process check\ndocker ps\n\n# openresty web server test\ncurl localhost:8000\n\u0026lt;p\u0026gt;hello world!\u0026lt;/p\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"openresty-comandline-utility\"\u003eOpenresty Comandline Utility\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# version check\nresty -v\n\n# Hello World\nresty -e \u0026#39;print(\u0026#34;Hello World\u0026#34;)\u0026#39;\necho \u0026#39;print(\u0026#34;Hello World\u0026#34;)\u0026#39; \u0026gt; hello.lua\nresty hello.lua\n\n# resty ngx module test\ntime resty -e \u0026#39;gnx.sleep(1) ngx.say(\u0026#34;done\u0026#34;)\u0026#39;\nresty -e \u0026#39;local sock = ngx.socket.tcp() print(socke:connect(\u0026#34;openresty.com\u0026#34;,443))\u0026#39;\nresty -e \u0026#39;ngx.thread.wait(ngx.thread.spawn(function () print(\u0026#34;in thread!\u0026#34;) end))\u0026#39;\n\nmkdir lua/\nvim lua/test.lua\n...\nlocal _M = {}\nfunction _M.hello() print(\u0026#34;Hello\u0026#34;) end\nreturn _M\n...\nresty -e \u0026#39;require \u0026#34;test\u0026#34;.hello()\u0026#39;  # Error\nresty -I lua/ -e \u0026#39;require \u0026#34;test\u0026#34;.hello()\u0026#39;  # Hello\n\nresty -e \u0026#39;local ok, stdout = require \u0026#34;resty.shell\u0026#34;.run([[echo ok]]) print(stdout)\u0026#39; # ok\nresty --shdict \u0026#39;dogs 10m\u0026#39; -e \u0026#39;print(ngx.shared.dogs:set(\u0026#34;age\u0026#34;,11))\u0026#39; # truenilfalse\nresty --shdict \u0026#39;dogs 7m\u0026#39; --shdict \u0026#39;cats 5m\u0026#39; -e \u0026#39;print(ngx.shared.dogs, \u0026#34; \u0026#34;, ngx.shared.cats)\u0026#39; \n\nresty --http-conf \u0026#39;lua_regex_match_limit 102400;\u0026#39; -e \u0026#39;print \u0026#34;ok\u0026#34;\u0026#39;\n\n# Bench Test\necho \u0026#39;local a = 0 for 1, 1e8 do a = a+1 end print(a)\u0026#39; \u0026gt; bench.lua\ntime resty -joff bench.lua  # without Jit Compiler\ntime resty bench.lua        # with Jit Compiler (Fast)\nresty -jv bench.lua\nresty -jdump bench.lua | less\n\n# Help\nresty -h | less  # See Help\nrestydoc resty-cli  # See Document\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"structure-and-lua-module\"\u003eStructure and Lua Module\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCreate Project Folder and Modules\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emkdir test-module\ncd test-module\nmkdir logs conf lua\n\nvim lua/hello.lua\n...\nlocal _M = {}\nfunction _M.greet(name)\n    ngx.say(\u0026#34;Greetings from \u0026#34;, name)\nend\nreturn _M\n...\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eSetup nginx.conf\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003evim conf/nginx.conf\n...\nworker_processes 1;\nevents {\n    worker_connections 1024;\n}\nhttp {\n    # Lua module Preload for performance and Cache\n    init_by_lua_block {\n        require \u0026#34;hello\u0026#34;\n    }\n    # add module path to lua package path: $prefix means nginx -p option value\n    lua_package_path \u0026#34;$prefix/lua/?.lua;;\u0026#34;\n    # Server Setup: port, lua block...\n    server {\n        listen 8080 reuseport;\n        location / {\n        content_by_lua_block {\n            local hello = require \u0026#34;hello\u0026#34;\n            hello.greet(\u0026#34;a Lua module\u0026#34;)\n            }\n        }\n    }\n}\n...\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eServer start and Test\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# server configuration test\nnginx -p $PWD/ -t \n\n# server start\nnginx -p $PWD/\n\n# Chech Error Log\ntail logs/error.log \n\n# client request test : Browser also available\ncurl \u0026#39;http://127.0.0.1:8080\u0026#39;\nGreetins from a Lua module\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eServer Admin\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# check server process\nps aux | grep nginx | grep -v /tmp/\npgrep -l nginx\n\n# Edit nginx.conf\nvim conf/nginx.conf\n\n# Server Restart (After editting of nginx.conf)\nkill -HUP `cat logs/nginx.pid`\n\n# client request again\ncurl \u0026#39;http://127.0.0.1:8080\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"build-develop-environment\"\u003eBuild Develop Environment\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eMakefile을 만들고 도커이미지를 제어하고 로그 등을 확인할 수 있는 환경을 만든다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eMakefile\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econf/nginx.conf\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eTest\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eawesome-resty - \u003ca href=\"https://github.com/bungle/awesome-resty\"\u003ehttps://github.com/bungle/awesome-resty\u003c/a\u003e\u003c/p\u003e","title":"Openresty - Scalable Web Platform NGINX with Lua"},{"content":" 원격지에서 vi(m)을 사용할 때 간단한 편집은 괜찮으나 코드를 수정하거나 할 때에는 불편하다. 하지만 플러그인과 많은 설정을 할 경우 번거롭기도 하고 무거워지기도 한다. 한가지 방법은 로컬의 환경에서 scp를 이용해 편집하는 방법이다. nvim scp 참조. 또 다른 방법은 아주 불편하지 않는 선에서 환경을 설정하고 사용하는 방법이다. 이 경우 플러그인 사용을 하지 않고, 최소한의 설정만 하는 것이다. 장점은 가볍고 빠르면서 환경설정도 최소한으로 할 수 있어 편리하다. 특히 원격지가 저사양 컴퓨터이거나 라즈베리파이 등일 때 적당하다. Setup how to setup # Install vim or nvim sudo apt install vim # Setup for (v)vim vi ~/.vimrc # Use vi ~/myproject/myfile.c .vimrc \u0026#34; \u0026#34; minimal vimrc with no (extra) plugins \u0026#34; \u0026#34;load system defaults if filereadable(expand(\u0026#39;$VIMRUNTIME/defaults.vim\u0026#39;)) unlet! g:skip_defaults_vim source $VIMRUNTIME/defaults.vim endif \u0026#34;regular settings \u0026#34;---------------- \u0026#34; ui set number set ruler set wildmenu set showcmd set showmatch \u0026#34; encoding/format set encoding=utf-8 set fileformats=unix,dos,mac \u0026#34; searching set hlsearch set incsearch set ignorecase set smartcase \u0026#34; indent set shiftwidth=4 set tabstop=4 set softtabstop=4 set autoindent \u0026#34; key timeout values set esckeys set ttimeoutlen=20 set timeoutlen=1000 \u0026#34; allow syntax and filetype plugins syntax enable filetype plugin indent on runtime macros/matchit.vim \u0026#34; autocmds \u0026#34;--------- augroup general autocmd! \u0026#34;keep equal proportions when windows resized autocmd VimResized * wincmd = \u0026#34;save cursor position in a file autocmd BufReadPost * if line(\u0026#34;\u0026#39;\\\u0026#34;\u0026#34;) \u0026gt; 1 \u0026amp;\u0026amp; line(\u0026#34;\u0026#39;\\\u0026#34;\u0026#34;) \\ \u0026lt;= line(\u0026#34;$\u0026#34;) | exe \u0026#34;normal! g\u0026#39;\\\u0026#34;\u0026#34; | endif augroup END augroup languages autocmd! autocmd BufNewFile,BufRead *.bash set syntax=sh autocmd FileType python xnoremap \u0026lt;leader\u0026gt;r \u0026lt;esc\u0026gt;:\u0026#39;\u0026lt;,\u0026#39;\u0026gt;:w !python3\u0026lt;CR\u0026gt; autocmd FileType go set noexpandtab autocmd FileType html :syntax sync fromstart autocmd FileType html,javascript,css,json,yaml,sh \\ setlocal ts=2 sts=2 sw=2 expandtab augroup END REFERENCE A minimal Vimrc - https://madjam.dev/posts/a-minimal-vimrc/ ","permalink":"https://neosolaris.github.io/posts/vim-minimal/","summary":"\u003cul\u003e\n\u003cli\u003e원격지에서 vi(m)을 사용할 때 간단한 편집은 괜찮으나 코드를 수정하거나 할 때에는 불편하다.\u003c/li\u003e\n\u003cli\u003e하지만 플러그인과 많은 설정을 할 경우 번거롭기도 하고 무거워지기도 한다.\u003c/li\u003e\n\u003cli\u003e한가지 방법은 로컬의 환경에서 scp를 이용해 편집하는 방법이다. \u003ca href=\"../nvim-scp\"\u003envim scp\u003c/a\u003e 참조.\u003c/li\u003e\n\u003cli\u003e또 다른 방법은 아주 불편하지 않는 선에서 환경을 설정하고 사용하는 방법이다.\u003c/li\u003e\n\u003cli\u003e이 경우 플러그인 사용을 하지 않고, 최소한의 설정만 하는 것이다.\u003c/li\u003e\n\u003cli\u003e장점은 가볍고 빠르면서 환경설정도 최소한으로 할 수 있어 편리하다.\u003c/li\u003e\n\u003cli\u003e특히 원격지가 저사양 컴퓨터이거나 라즈베리파이 등일 때 적당하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"setup\"\u003eSetup\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ehow to setup\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# Install vim or nvim\nsudo apt install vim\n\n# Setup for (v)vim\nvi ~/.vimrc\n\n# Use\nvi ~/myproject/myfile.c\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e.vimrc\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026#34;\n\u0026#34; minimal vimrc with no (extra) plugins\n\u0026#34;\n\n\u0026#34;load system defaults\nif filereadable(expand(\u0026#39;$VIMRUNTIME/defaults.vim\u0026#39;))\n\tunlet! g:skip_defaults_vim\n\tsource $VIMRUNTIME/defaults.vim\nendif\n\n\u0026#34;regular settings\n\u0026#34;----------------\n\u0026#34; ui\nset number\nset ruler\nset wildmenu\nset showcmd\nset showmatch\n\n\u0026#34; encoding/format\nset encoding=utf-8\nset fileformats=unix,dos,mac\n\n\u0026#34; searching\nset hlsearch\nset incsearch\nset ignorecase\nset smartcase\n\n\u0026#34; indent\nset shiftwidth=4\nset tabstop=4\nset softtabstop=4\nset autoindent\n\n\u0026#34; key timeout values\nset esckeys\nset ttimeoutlen=20\nset timeoutlen=1000\n\n\u0026#34; allow syntax and filetype plugins\nsyntax enable\nfiletype plugin indent on\nruntime macros/matchit.vim\n\n\u0026#34; autocmds\n\u0026#34;---------\naugroup general\n    autocmd!\n    \u0026#34;keep equal proportions when windows resized\n    autocmd VimResized * wincmd =\n    \u0026#34;save cursor position in a file\n    autocmd BufReadPost * if line(\u0026#34;\u0026#39;\\\u0026#34;\u0026#34;) \u0026gt; 1 \u0026amp;\u0026amp; line(\u0026#34;\u0026#39;\\\u0026#34;\u0026#34;)\n                \\ \u0026lt;= line(\u0026#34;$\u0026#34;) | exe \u0026#34;normal! g\u0026#39;\\\u0026#34;\u0026#34; | endif\naugroup END\n\naugroup languages\n    autocmd!\n    autocmd BufNewFile,BufRead *.bash set syntax=sh\n    autocmd FileType python xnoremap \u0026lt;leader\u0026gt;r \u0026lt;esc\u0026gt;:\u0026#39;\u0026lt;,\u0026#39;\u0026gt;:w !python3\u0026lt;CR\u0026gt;\n    autocmd FileType go set noexpandtab\n    autocmd FileType html :syntax sync fromstart\n    autocmd FileType html,javascript,css,json,yaml,sh\n                \\ setlocal ts=2 sts=2 sw=2 expandtab\naugroup END\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eA minimal Vimrc - \u003ca href=\"https://madjam.dev/posts/a-minimal-vimrc/\"\u003ehttps://madjam.dev/posts/a-minimal-vimrc/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"플러그인 없이 vim을 최소 설정으로 사용하기"},{"content":" 키보드는 사람이 컴퓨터에게 지시하는 유일한 통로이다. 물론 마우스 등이 있지만 키보드가 가장 먼저이면서 오래되었고 또한 상세하게 명령을 전달할 수 있는 도구이다. 사람이 직접적으로 활동하는 매체가 키보드이기 때문에 좀 더 특별하기도 하다. 또한 접촉하는 매체로서 건강과 느낌이 많이 작용하는 것이 키보드이기도 하다. 글 싣는 순서 한글키보드 입력방식. 영문키보드 입력방식. 손에 무리를 주지 않으면서 효율적인 키보드 입력 방식은 무엇인가. 아두이노를 활용한 분리형 키보드 만들기. 키보드 연습 타이핑웍스 - 한,영 지원, 깔끔한 환경과 디자인, 웹: https://typing.works/ monkeytype - 한글,영문 및 다국어 지원, 통계: https://monkeytype.com/ keybr.com - 영문 연습, 한글 미지원, 통계, qwerty,dvorak,workman,colmak: https://www.keybr.com typeracer.com - 게임식 타자 연습 (자동차 경주) colemak club - colemak, colemak-dh 연습: https://gnusenpai.net/colemakclub/ 한글 자판 배열 두벌식 세벌식: https://세벌식.kr/ 타자 연습 프로그램 한컴 타자연습 (웹, 윈도우즈) : https://www.hancomtaja.com/ 날개셋 타자연습 (윈도우즈) 열린타자 (윈도우즈) Taza (macOS) 속기타자: 세벌식 (cas, sorijava) - 두 개 모두 자판 배열이 다르다. 영문 자판 배열 qwerty - 타자기의 원형, 사실상의 표준 dvorak - 또 다른 표준 colmak - 가장 효율적이면서 qwerty와 유사해서 적응도 빠르다. colemak home: https://colemak.com/ Learn : https://colemak.com/Learn (우측 하단 keyboard Mapping: on으로) workman 키보드 배열 Staggered: 행마다 절반씩 엇갈려 배치 Ortholinear: 행마다 똑같이 배치 HARDWARE Key caps\nChoc Keycaps : 로우프로파일 스위치용 키캡 Stenography Keyboard 속기 키보드\nOpen Steno Project - http://www.openstenoproject.org/\nPlover: the open source stenography software - https://github.com/openstenoproject/plover\nLearn the Steno Keyboard - https://joshuagrams.github.io/steno-jig/learn-keyboard.html\nDrop + OLKB PLANCK Mechnical keyboard kit v6 https://joshuagrams.github.io/steno-jig/learn-keyboard.html\nStenokeybords.com - https://stenokeyboards.com/\nMultisteno - https://nolltronics.com/product/multisteno/\n","permalink":"https://neosolaris.github.io/posts/keyboard/","summary":"\u003cul\u003e\n\u003cli\u003e키보드는 사람이 컴퓨터에게 지시하는 유일한 통로이다.\u003c/li\u003e\n\u003cli\u003e물론 마우스 등이 있지만 키보드가 가장 먼저이면서 오래되었고 또한 상세하게 명령을 전달할 수 있는 도구이다.\u003c/li\u003e\n\u003cli\u003e사람이 직접적으로 활동하는 매체가 키보드이기 때문에 좀 더 특별하기도 하다.\u003c/li\u003e\n\u003cli\u003e또한 접촉하는 매체로서 건강과 느낌이 많이 작용하는 것이 키보드이기도 하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"글-싣는-순서\"\u003e글 싣는 순서\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e한글키보드 입력방식.\u003c/li\u003e\n\u003cli\u003e영문키보드 입력방식.\u003c/li\u003e\n\u003cli\u003e손에 무리를 주지 않으면서 효율적인 키보드 입력 방식은 무엇인가.\u003c/li\u003e\n\u003cli\u003e아두이노를 활용한 분리형 키보드 만들기.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"키보드-연습\"\u003e키보드 연습\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e타이핑웍스 - 한,영 지원, 깔끔한 환경과 디자인, 웹: \u003ca href=\"https://typing.works/\"\u003ehttps://typing.works/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003emonkeytype - 한글,영문 및 다국어 지원, 통계: \u003ca href=\"https://monkeytype.com/\"\u003ehttps://monkeytype.com/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ekeybr.com - 영문 연습, 한글 미지원, 통계, qwerty,dvorak,workman,colmak: \u003ca href=\"https://www.keybr.com\"\u003ehttps://www.keybr.com\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003etyperacer.com - 게임식 타자 연습 (자동차 경주)\u003c/li\u003e\n\u003cli\u003ecolemak club - colemak, colemak-dh 연습: \u003ca href=\"https://gnusenpai.net/colemakclub/\"\u003ehttps://gnusenpai.net/colemakclub/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"한글-자판-배열\"\u003e한글 자판 배열\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e두벌식\u003c/li\u003e\n\u003cli\u003e세벌식: https://세벌식.kr/\n\u003cul\u003e\n\u003cli\u003e타자 연습 프로그램\n\u003cul\u003e\n\u003cli\u003e한컴 타자연습 (웹, 윈도우즈) : \u003ca href=\"https://www.hancomtaja.com/\"\u003ehttps://www.hancomtaja.com/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e날개셋 타자연습 (윈도우즈)\u003c/li\u003e\n\u003cli\u003e열린타자 (윈도우즈)\u003c/li\u003e\n\u003cli\u003eTaza (macOS)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e속기타자: 세벌식 (cas, sorijava) - 두 개 모두 자판 배열이 다르다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"영문-자판-배열\"\u003e영문 자판 배열\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eqwerty - 타자기의 원형, 사실상의 표준\u003c/li\u003e\n\u003cli\u003edvorak - 또 다른 표준\u003c/li\u003e\n\u003cli\u003ecolmak - 가장 효율적이면서 qwerty와 유사해서 적응도 빠르다.\n\u003cul\u003e\n\u003cli\u003ecolemak home: \u003ca href=\"https://colemak.com/\"\u003ehttps://colemak.com/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eLearn : \u003ca href=\"https://colemak.com/Learn\"\u003ehttps://colemak.com/Learn\u003c/a\u003e (우측 하단 keyboard Mapping: on으로)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eworkman\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"키보드-배열\"\u003e키보드 배열\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eStaggered: 행마다 절반씩 엇갈려 배치\u003c/li\u003e\n\u003cli\u003eOrtholinear: 행마다 똑같이 배치\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"hardware\"\u003eHARDWARE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eKey caps\u003c/p\u003e","title":"keyboard - 키보드"},{"content":" 키보드와 자판 배열에 관심을 갖게된 이유: 손목 터널 증후군, 오십견, 능률 앞으로 한글과 영문에 대해 조금씩 조사하고 연구할 생각이다. Intro 좀 더 편안하고 자연스러운 자판 입력 방법을 찾아 보았다. 과거 10여년 전에 시도를 한 적이 있으나 몇 번 해보고 흐지브지 되어 버렸다. 세벌식이 좋은 이유: 빠르다, 편안하다. 오타가 덜 난다. 종류는 대표적으로 세벌식 390, 세벌식 최종의 두 가지가 있다. 다른 것으로는 아래 REFERENCE를 참고한다. 코딩을 하는 사용자라면 특수문자와 배열이 거의 일치하는 390을 선택하는 것이 좋겠다. 시작하기 아래한글 사용자는 한컴타자연습 프로그램을 이용한다. 설정에서 한글/세벌식390 으로 설정하면 별도의 설정이나 프로그램 없이 세벌식 연습이 가능하다. 날개셋 타자연습 프로그램은 다음을 참고한다. http://moogi.new21.org/prg5.html 하루에 매일 시간을 정해 놓고 연습을 하고 그 경과를 기록해 보기로 한다. 세벌식 한글입력기 윈도우즈\n세벌식으로 키보드 종류 변경, 재부팅 날개셋 한글 입력기: http://moogi.new21.org/prg4.html 새나루 입력기: http://kldp.net/saenaru/ 나빌 입력기: https://github.com/navilera/NavilIME 리눅스\nibus-hangul, fcitx-hangul, uim-byeoru, nabi, nimf 웹\nhttp://ohi.pat.im/ https://3beol.gitlab.io/ REFERENCE 세벌식-나무위키: https://namu.wiki/w/%EC%84%B8%EB%B2%8C%EC%8B%9D 세벌식 사용자모임 : https://세벌식.kr/ 세벌식 자판의 종류 : https://ko.wikipedia.org/wiki/%EC%84%B8%EB%B2%8C%EC%8B%9D_%EC%9E%90%ED%8C%90%EC%9D%98_%EC%A2%85%EB%A5%98 ","permalink":"https://neosolaris.github.io/posts/%EC%84%B8%EB%B2%8C%EC%8B%9D/","summary":"\u003cul\u003e\n\u003cli\u003e키보드와 자판 배열에 관심을 갖게된 이유: 손목 터널 증후군, 오십견, 능률\u003c/li\u003e\n\u003cli\u003e앞으로 한글과 영문에 대해 조금씩 조사하고 연구할 생각이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e좀 더 편안하고 자연스러운 자판 입력 방법을 찾아 보았다.\u003c/li\u003e\n\u003cli\u003e과거 10여년 전에 시도를 한 적이 있으나 몇 번 해보고 흐지브지 되어 버렸다.\u003c/li\u003e\n\u003cli\u003e세벌식이 좋은 이유: 빠르다, 편안하다. 오타가 덜 난다.\u003c/li\u003e\n\u003cli\u003e종류는 대표적으로 \u003ccode\u003e세벌식 390\u003c/code\u003e, \u003ccode\u003e세벌식 최종\u003c/code\u003e의 두 가지가 있다.\u003c/li\u003e\n\u003cli\u003e다른 것으로는 아래 REFERENCE를 참고한다.\u003c/li\u003e\n\u003cli\u003e코딩을 하는 사용자라면 특수문자와 배열이 거의 일치하는 390을 선택하는 것이 좋겠다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"시작하기\"\u003e시작하기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래한글 사용자는 한컴타자연습 프로그램을 이용한다.\u003c/li\u003e\n\u003cli\u003e설정에서 한글/세벌식390 으로 설정하면 별도의 설정이나 프로그램 없이 세벌식 연습이 가능하다.\u003c/li\u003e\n\u003cli\u003e날개셋 타자연습 프로그램은 다음을 참고한다.  \u003ca href=\"http://moogi.new21.org/prg5.html\"\u003ehttp://moogi.new21.org/prg5.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e하루에 매일 시간을 정해 놓고 연습을 하고 그 경과를 기록해 보기로 한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"세벌식-한글입력기\"\u003e세벌식 한글입력기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e윈도우즈\u003c/p\u003e","title":"세벌식"},{"content":"Intro GNU Privacy Guard, is a public key cryptography implementation. Install Alpine $ doas apk add gpg gpg-agent Ubuntu/Debian $ sudo apt-get install gnupg Setup gpg 키생성: default로 진행: Real name과 Email 입력: 비밀번호 입력 암호화방식: 최신의 ECC(ed25519) 방식 사용 $ gpg --full-gen-key Create a Revocation Certificate 무효화 인증키 생성 (보안키분실시 사용, 따로 잘 보관) 파일모드가 600인지 확인 $ gpg --output ~/revocation.crt --gen-revoke your_email@address.com How To Import Other Users’ Public Keys $ gpg --import name_of_pub_key_file How To Verify and Sign Keys $ gpg --fingerprint your_email@address.com $ gpg --list-keys # 키리스트 확인 $ gpg --armor --export # public key 확인 -----BEGIN PGP PUBLIC KEY BLOCK----- mDMEZPwe2hYJwKYBBAHaRw8BAQdATXg1HK+wZW/sZlDXfs7KEJeEyX6YRKx9a60c P5pj4mwtAPwP2wq1ACEdj+V6VOH/1ZE5KlH7L8UkYlJ8lK+ZdZBK+wEAlknNS5O7 ... -----END PGP PUBLIC KEY BLOCK----- Encrypt and Decrypt Messages with GPG Encrypt Messages $ gpg --encrypt --sing --armor -r \u0026lt;your_email@address.com\u0026gt; \u0026lt;name_of_file\u0026gt; $ ls $ \u0026lt;name_of_file\u0026gt;.asc Decrypt Messages $ gpg \u0026lt;name_of_file\u0026gt;.asc Key Maintenance $ gpg --list-keys # list available GPG keys $ gpg --refresh-keys # update the key information $ gpg --keyserver \u0026lt;key_server\u0026gt; --refresh-keys # pull information from a specific key server Bakcup \u0026amp; Restore backup (사용중인 PC) # tree로 ~/.gnupg 확인 tree ~/.gnupg # 현재 사용중인 키 확인 gpg --list-secret-keys --keyid-format LONG # 백업 mkdir ~/gpg-backup gpg --export --export-options backup --output ~/gpg-backup/public-key.gpg gpg --export-secret-keys --export-options backup --output ~/gpg-backup/private-key.gpg gpg --export-ownertrust \u0026gt; ~/gpg-backup/trust_key.gpg tar cvf \u0026lt;USB-mount-path\u0026gt;/gpg-backup.tar gpg-backup restore (다른 PC) # USB mount tar xvf \u0026lt;USB-mount-path\u0026gt;/gpg-backup.tar cd gpg-backup/ # 키 복원 gpg --import public-key.gpg gpg --import private-key.gpg gpg --import-ownertrust trust-key.gpg # 키 확인 gpg --list-secret-keys --keyid-format LONG PASS(The Standard Unix Password Manager) with gpg pass는 유닉스에서 개인의 패스워드를 관리하는 표준 툴이다.\nGPG와 연동하여 동작한다.\n설치 및 사용 전에 gpg --full-generate-key로 먼저 자신의 GPG KEY가 준비되어 있어야 한다.\nUsage:\n# package install (Alpine) apk add pass # Init: ~/.password-store (Check Key ID \u0026amp; Init) gpg --list-secret-keys --keyid-format LONG pass init CD177C430FA96E23 # Create New Password (single, multiline insert) pass insert www/example pass insert --multiline www/example2 # Password list pass [list] # Password Show pass www/example Github Backup Restore # backup pass git init pass git remote add origin git@github.com:\u0026lt;user-name\u0026gt;/pass-store.git pass git push -u --all # update pass insert www/example3 pass git push -u --all # restore (OS 재설치 또는 다른 컴퓨터) pass git init pass git remote add origin git@github.com:\u0026lt;user-name\u0026gt;/pass-store.git pass git pull Github에 GPG key 등록 후 사용하기 REFERENCE How to use gpg : https://www.digitalocean.com/community/tutorials/how-to-use-gpg-to-encrypt-and-sign-messages ","permalink":"https://neosolaris.github.io/posts/gpg/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGNU Privacy Guard, is a public key cryptography implementation.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAlpine\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ doas apk add gpg gpg-agent\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eUbuntu/Debian\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt-get install gnupg\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"setup\"\u003eSetup\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003egpg 키생성: default로 진행: Real name과 Email 입력: 비밀번호 입력\u003c/li\u003e\n\u003cli\u003e암호화방식: 최신의 ECC(ed25519) 방식 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ gpg --full-gen-key\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"create-a-revocation-certificate\"\u003eCreate a Revocation Certificate\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e무효화 인증키 생성 (보안키분실시 사용, 따로 잘 보관)\u003c/li\u003e\n\u003cli\u003e파일모드가 600인지 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ gpg --output ~/revocation.crt --gen-revoke your_email@address.com\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"how-to-import-other-users-public-keys\"\u003eHow To Import Other Users’ Public Keys\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ gpg --import name_of_pub_key_file\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"how-to-verify-and-sign-keys\"\u003eHow To Verify and Sign Keys\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ gpg --fingerprint your_email@address.com \n$ gpg --list-keys       # 키리스트 확인\n$ gpg --armor --export  # public key 확인\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmDMEZPwe2hYJwKYBBAHaRw8BAQdATXg1HK+wZW/sZlDXfs7KEJeEyX6YRKx9a60c\nP5pj4mwtAPwP2wq1ACEdj+V6VOH/1ZE5KlH7L8UkYlJ8lK+ZdZBK+wEAlknNS5O7\n...\n-----END PGP PUBLIC KEY BLOCK-----\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"encrypt-and-decrypt-messages-with-gpg\"\u003eEncrypt and Decrypt Messages with GPG\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eEncrypt Messages\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ gpg --encrypt --sing --armor -r \u0026lt;your_email@address.com\u0026gt; \u0026lt;name_of_file\u0026gt;\n$ ls\n$ \u0026lt;name_of_file\u0026gt;.asc\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eDecrypt Messages\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ gpg \u0026lt;name_of_file\u0026gt;.asc\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"key-maintenance\"\u003eKey Maintenance\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ gpg --list-keys    # list available GPG keys\n$ gpg --refresh-keys # update the key information\n$ gpg --keyserver \u0026lt;key_server\u0026gt; --refresh-keys  # pull information from a specific key server\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"bakcup--restore\"\u003eBakcup \u0026amp; Restore\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ebackup (사용중인 PC)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# tree로 ~/.gnupg 확인\ntree ~/.gnupg\n\n# 현재 사용중인 키 확인\ngpg --list-secret-keys --keyid-format LONG\n\n# 백업\nmkdir ~/gpg-backup\ngpg --export --export-options backup --output ~/gpg-backup/public-key.gpg\ngpg --export-secret-keys --export-options backup --output ~/gpg-backup/private-key.gpg\ngpg --export-ownertrust \u0026gt; ~/gpg-backup/trust_key.gpg\ntar cvf \u0026lt;USB-mount-path\u0026gt;/gpg-backup.tar gpg-backup\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003erestore (다른 PC)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# USB mount\ntar xvf \u0026lt;USB-mount-path\u0026gt;/gpg-backup.tar\ncd gpg-backup/\n\n# 키 복원\ngpg --import public-key.gpg\ngpg --import private-key.gpg\ngpg --import-ownertrust trust-key.gpg\n\n# 키 확인\ngpg --list-secret-keys --keyid-format LONG\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"passthe-standard-unix-password-manager-with-gpg\"\u003ePASS(The Standard Unix Password Manager) with gpg\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003epass는 유닉스에서 개인의 패스워드를 관리하는 표준 툴이다.\u003c/p\u003e","title":"GPG - GNU Privacy Guard"},{"content":" 이것을 사용하는 이유는 어쩔 수 없이 관공서나 금융권 때문이다. 한국의 후진적인 공인인증서제도와 윈도우즈 중심 사용으로 인한 폐해가 아닐까 한다. 다크모드 Dark mode 변경 모양변경: 설정 \u0026gt; 브라우저 디스플레이\u0026gt; 모양 사용자 지정 \u0026gt; 어둡게 웹페이지변경: 브라우저 창에 다음과 같이 입력 후 재실행 edge://flags/#enable-force-dark ","permalink":"https://neosolaris.github.io/posts/edge/","summary":"\u003cul\u003e\n\u003cli\u003e이것을 사용하는 이유는 어쩔 수 없이 관공서나 금융권 때문이다.\u003c/li\u003e\n\u003cli\u003e한국의 후진적인 공인인증서제도와 윈도우즈 중심 사용으로 인한 폐해가 아닐까 한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"다크모드-dark-mode-변경\"\u003e다크모드 Dark mode 변경\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e모양변경: 설정 \u0026gt; 브라우저 디스플레이\u0026gt; 모양 사용자 지정 \u0026gt; 어둡게\u003c/li\u003e\n\u003cli\u003e웹페이지변경: 브라우저 창에 다음과 같이 입력 후 재실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eedge://flags/#enable-force-dark\n\u003c/code\u003e\u003c/pre\u003e","title":"Edge - 윈도우즈 브라우저"},{"content":"Intro 원격지에 직접 로그인해서 편집할 경우 그 곳의 vim 또는 nvim 을 설치, 설정을 해주어야 편하게 쓸 수 있다. 간단히 수정하는 정도면 기본적인 vi 정도가 있으므로 그것으로 해결하면 된다. 그러나 좀 더 자세한 수정 또는 코딩을 하는 경우에는 불편하다. 로컬에서 자신이 설정해 놓은 (n)vim으로 원격지 파일을 수정하는 간단하고 쉬운 방법이다. 조사한 결과 여러가지 방법이 많은데 scp를 이용하여 복잡하지 않고 간단하게 쓰기 좋다. 그 밖의 방법으로 nvim server/client mode를 이용하는 방법, rsync, tmux, distant.nvim 등이 있다. Howto 먼저 로컬에 ssh, scp 등이 설치되어 있어야 한다. 당연히 로컬에 자신의 환경에 맞게 설치 설정된 (n)vim도 있어야 한다. 원격지에 ssh로 접속할 수 있는 환경도 필요하다. ssh원격로그인을 키인증으로 해 놓으면 더욱 편리하다. (ssh-keygen으로 생성, local:id_rsa.pub -\u0026gt; remmote:authorized_keys 추가) $ vim scp://user@server-name[:port]//path-to-file.txt 또는 (n)vim에서 다음과 같이 할 수도 있다.\n:e scp://user@server-name[:port]//path-to-file.txt sshfs ssh 프로토콜을 이용하여 원격지를 마운트하여 로컬의 파일처럼 접근할 수 있다. Docker 이미지로는 vieux/sshfs 가 있다. $ sudo apt-get install sshfs $ sudo adduser \u0026lt;username\u0026gt; fuse $ mkdir ~/remoteserv $ sshfs -o idmap=user \u0026lt;username\u0026gt;@\u0026lt;ipaddress\u0026gt;:/remotepath ~/remoteserv REFERENCE 스텍오버플로우 질답: https://unix.stackexchange.com/questions/202918/how-do-i-remotely-edit-files-via-ssh\n","permalink":"https://neosolaris.github.io/posts/nvim-scp/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e원격지에 직접 로그인해서 편집할 경우 그 곳의 vim 또는 nvim 을 설치, 설정을 해주어야 편하게 쓸 수 있다.\u003c/li\u003e\n\u003cli\u003e간단히 수정하는 정도면 기본적인 vi 정도가 있으므로 그것으로 해결하면 된다.\u003c/li\u003e\n\u003cli\u003e그러나 좀 더 자세한 수정 또는 코딩을 하는 경우에는 불편하다.\u003c/li\u003e\n\u003cli\u003e로컬에서 자신이 설정해 놓은 (n)vim으로 원격지 파일을 수정하는 간단하고 쉬운 방법이다.\u003c/li\u003e\n\u003cli\u003e조사한 결과 여러가지 방법이 많은데 scp를 이용하여 복잡하지 않고 간단하게 쓰기 좋다.\u003c/li\u003e\n\u003cli\u003e그 밖의 방법으로 nvim server/client mode를 이용하는 방법, rsync, tmux, distant.nvim 등이 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"howto\"\u003eHowto\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e먼저 로컬에 ssh, scp 등이 설치되어 있어야 한다.\u003c/li\u003e\n\u003cli\u003e당연히 로컬에 자신의 환경에 맞게 설치 설정된 (n)vim도 있어야 한다.\u003c/li\u003e\n\u003cli\u003e원격지에 ssh로 접속할 수 있는 환경도 필요하다.\u003c/li\u003e\n\u003cli\u003essh원격로그인을 키인증으로 해 놓으면 더욱 편리하다. (ssh-keygen으로 생성, local:id_rsa.pub -\u0026gt; remmote:authorized_keys 추가)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim scp://user@server-name\u003cspan class=\"o\"\u003e[\u003c/span\u003e:port\u003cspan class=\"o\"\u003e]\u003c/span\u003e//path-to-file.txt\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e또는 (n)vim에서 다음과 같이 할 수도 있다.\u003c/p\u003e","title":"nvim-scp - nvim으로 원격 파일 편집"},{"content":"Intro Github에 소스코드를 올릴 때 암호화 할 수 있는 툴 올릴 때에는 암호화해서 올리고 다운로드 시에는 복호화 해준다. 보안키나 패스워드, 중요 설정 정보 등이 공개용 뿐만 아니라 비공개용 저장소에 올릴 때에도 유용하다. 아울러 vimwiki나 지극히 개인적인 문서를 저장할 때 github를 이용할 경우에도 매우 유용하다. Github 자체가 해킹되는 경우도 있고, github의 자료는 모두 깃허브의 재산이므로 내 자료를 보호할 필요가 있다. 아무리 비공개용이라 할지라도 꺼림직하기는 마찬가지다. 이렇게 해 두면 좋은 점은 PC가 바뀌어도 작업 장소가 바뀌어도 모두 안전하게 개인자료를 동기화할 수 있다. 물론 개인자료를 에버노트나 구글계정에 저장해도 되겠지만 이곳도 근본적으로 보안상태는 마찬가지이다. 또한 개발자, 작가 등은 손쉽게 github를 통해 저장소를 두고 작업을 하는 것이 편리하다. 그렇기에 작고 가볍고 의존성도 없는 git-crypt를 활용하게 된 것이다. 아래 상술하겠으나 저장소를 여러 개 쓸 경우 그 만큼 관리할 키가 늘어나고 따로 보관해야 하는 문제가 생긴다. 암호화가 필요한 파일은 가급적 한 저장소에 모으고 하나의 키만 따로 USB나 기타 장소에 보관해 두는 것이 좋겠다. 만약 git-crypt에 의해 생긴 키도 깃허브에 저장한다면 자기 모순에 빠지므로 별도로 백업 보관해야 한다. Install $ sudo apt install git-crypt # Ubuntu, Debian $ doas apk add git-crypt # Alpine Using git-crypt 주의사항: git-crypt를 적용하기 전의 데이터는 암호화 할 수 없다. 따라서 github에서 새로운 저장소를 만들고 아래 절차를 진행해야 한다. 아래 your_secret_file 과 your_secret_directory는 저장소 내의 암호화할 파일 또는 폴더. $ git clone git@github.com:\u0026lt;github_user\u0026gt;/\u0026lt;your_progject_name\u0026gt; $ cd \u0026lt;your_project_name\u0026gt; $ git-crypt init $ cat \u0026lt;\u0026lt;EOF \u0026gt; .gitattributes your_secret_file_name filter=git-crypt diff=git-crypt *.key filter=git-crypt diff=git-crypt your_secret_dir/** filter=git-crypt diff=git-crypt EOF $ echo \u0026#34;hello world\u0026#34; \u0026gt; your_secret_file $ echo \u0026#34;hello world\u0026#34; \u0026gt; your_secret_dir/file1 $ git add . \u0026amp;\u0026amp; git commit \u0026#34;update files\u0026#34; \u0026amp;\u0026amp; git push 자신의 깃허브 저정소에 가서 올린 파일이 암호와 되었는지 로그인해서 확인한다. 보통의 경우 위 설정이 잘 되었으면 평상시 대로 git을 사용하면 저장소 관리가 된다. 생성된 암호키 관리 위의 git-crypt init 명령을 수행하면 .git/git-crypt/keys로 초기화되고 키가 생성, 보관된다. Symmetric Mode: 생성된 키는 로컬에만 존재하므로 이 키를 USB 등에 저장해 두었다가 다른 곳에서 깃허브 저장소를 다운 받은 후 이를 사용하면 된다. GPG Mode: 또한 다른 사용자의 키를 추가시켜 그 사용자가 저장소에 접근할 수 있도록 할 수 있다. (자신 포함) GPG Mode - 자신 또는 다른 사용자의 키를 추가하는 경우 $ git-crypt add-gpg-user \u0026lt;USER_ID\u0026gt; # 주 사용자모드: USER_ID is Public GPG key ID ... $ git clone git@github.com:\u0026lt;github_user\u0026gt;/\u0026lt;your_progject_name\u0026gt; # 허락받은 사용자모드 $ cd \u0026lt;your_project_name\u0026gt; $ git-crypt unlock Symmetric Mode - 키를 가지고 있는 사용자(보통 자기자신)이 저장소를 사용할 수 있는 방법 $ git-crypt export-key \u0026lt;path_to_your_keyfile\u0026gt; # 주 사용자가 키를 백업하기 ... $ git clone git@github.com:\u0026lt;github_user\u0026gt;/\u0026lt;your_progject_name\u0026gt; # 다른 곳에서 복호화 하기 $ cd \u0026lt;your_project_name\u0026gt; $ git-crypt unlock \u0026lt;path_to_your_keyfile\u0026gt; # 백업해둔 키파일을 이용해 복호화하기 참고사항 .gitattributes 파일 자신은 암호화되서는 안된다고 메뉴얼에 나와 있다. .gitattributes 파일에 dir/**에서 **이 두 개인 이유는 이하 서브 디렉토리에서도 적용시킬 수 있기 때문이다. 상당히 많은 파일이나 폴더에 적용하는 것은 좋지 않다. 소스파일이나 텍스트 파일을 암호화 하는 데 적합하고 이진파일이나 데이터 파일에는 그리 적합하지 않다. 파일이름이나 파일에 대한 메타정보는 암호화하지 못한다. 즉 파일의 내용을 암호화 한다. REFERENCE Git-Crypt Home - https://www.agwa.name/projects/git-crypt/ git-crypt github - https://github.com/AGWA/git-crypt managing secrets with git crypt - https://dzone.com/articles/managing-secrets-with-git-crypt ","permalink":"https://neosolaris.github.io/posts/git-crypt/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGithub에 소스코드를 올릴 때 암호화 할 수 있는 툴\u003c/li\u003e\n\u003cli\u003e올릴 때에는 암호화해서 올리고 다운로드 시에는 복호화 해준다.\u003c/li\u003e\n\u003cli\u003e보안키나 패스워드, 중요 설정 정보 등이 공개용 뿐만 아니라  비공개용 저장소에 올릴 때에도 유용하다.\u003c/li\u003e\n\u003cli\u003e아울러 vimwiki나 지극히 개인적인 문서를 저장할 때 github를 이용할 경우에도 매우 유용하다.\u003c/li\u003e\n\u003cli\u003eGithub 자체가 해킹되는 경우도 있고, github의 자료는 모두 깃허브의 재산이므로 내 자료를 보호할 필요가 있다.\u003c/li\u003e\n\u003cli\u003e아무리 비공개용이라 할지라도 꺼림직하기는 마찬가지다.\u003c/li\u003e\n\u003cli\u003e이렇게 해 두면 좋은 점은 PC가 바뀌어도 작업 장소가 바뀌어도 모두 안전하게 개인자료를 동기화할 수 있다.\u003c/li\u003e\n\u003cli\u003e물론 개인자료를 에버노트나 구글계정에 저장해도 되겠지만 이곳도 근본적으로 보안상태는 마찬가지이다.\u003c/li\u003e\n\u003cli\u003e또한 개발자, 작가 등은 손쉽게 github를 통해 저장소를 두고 작업을 하는 것이 편리하다.\u003c/li\u003e\n\u003cli\u003e그렇기에 작고 가볍고 의존성도 없는 git-crypt를 활용하게 된 것이다.\u003c/li\u003e\n\u003cli\u003e아래 상술하겠으나 저장소를 여러 개 쓸 경우 그 만큼 관리할 키가 늘어나고 따로 보관해야 하는 문제가 생긴다.\u003c/li\u003e\n\u003cli\u003e암호화가 필요한 파일은 가급적 한 저장소에 모으고 하나의 키만 따로 USB나 기타 장소에 보관해 두는 것이 좋겠다.\u003c/li\u003e\n\u003cli\u003e만약 git-crypt에 의해 생긴 키도 깃허브에 저장한다면 자기 모순에 빠지므로 별도로 백업 보관해야 한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt install git-crypt  # Ubuntu, Debian\n$ doas apk add git-crypt      # Alpine\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"using-git-crypt\"\u003eUsing git-crypt\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e주의사항: git-crypt를 적용하기 전의 데이터는 암호화 할 수 없다.\u003c/li\u003e\n\u003cli\u003e따라서 github에서 새로운 저장소를 만들고 아래 절차를 진행해야 한다.\u003c/li\u003e\n\u003cli\u003e아래 your_secret_file 과 your_secret_directory는 저장소 내의 암호화할 파일 또는 폴더.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ git clone git@github.com:\u0026lt;github_user\u0026gt;/\u0026lt;your_progject_name\u0026gt;\n$ cd \u0026lt;your_project_name\u0026gt;\n$ git-crypt init\n\n$ cat \u0026lt;\u0026lt;EOF  \u0026gt; .gitattributes\nyour_secret_file_name filter=git-crypt diff=git-crypt\n*.key filter=git-crypt diff=git-crypt\nyour_secret_dir/** filter=git-crypt diff=git-crypt\nEOF\n\n$ echo \u0026#34;hello world\u0026#34; \u0026gt; your_secret_file\n$ echo \u0026#34;hello world\u0026#34; \u0026gt; your_secret_dir/file1\n\n$ git add . \u0026amp;\u0026amp; git commit \u0026#34;update files\u0026#34; \u0026amp;\u0026amp; git push\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e자신의 깃허브 저정소에 가서 올린 파일이 암호와 되었는지 로그인해서 확인한다.\u003c/li\u003e\n\u003cli\u003e보통의 경우 위 설정이 잘 되었으면 평상시 대로 git을 사용하면 저장소 관리가 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"생성된-암호키-관리\"\u003e생성된 암호키 관리\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e위의 \u003ccode\u003egit-crypt init\u003c/code\u003e 명령을 수행하면 \u003ccode\u003e.git/git-crypt/keys\u003c/code\u003e로 초기화되고 키가 생성, 보관된다.\u003c/li\u003e\n\u003cli\u003eSymmetric Mode: 생성된 키는 로컬에만 존재하므로 이 키를 USB 등에 저장해 두었다가 다른 곳에서 깃허브 저장소를 다운 받은 후 이를 사용하면 된다.\u003c/li\u003e\n\u003cli\u003eGPG Mode: 또한 다른 사용자의 키를 추가시켜 그 사용자가 저장소에 접근할 수 있도록 할 수 있다. (자신 포함)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eGPG Mode -  자신 또는 다른 사용자의 키를 추가하는 경우\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ git-crypt add-gpg-user \u0026lt;USER_ID\u0026gt;  # 주 사용자모드: USER_ID is Public GPG key ID\n...\n$ git clone git@github.com:\u0026lt;github_user\u0026gt;/\u0026lt;your_progject_name\u0026gt;  # 허락받은 사용자모드\n$ cd \u0026lt;your_project_name\u0026gt;\n$ git-crypt unlock\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eSymmetric Mode - 키를 가지고 있는 사용자(보통 자기자신)이 저장소를 사용할 수 있는 방법\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ git-crypt export-key \u0026lt;path_to_your_keyfile\u0026gt;  # 주 사용자가 키를 백업하기\n...\n$ git clone git@github.com:\u0026lt;github_user\u0026gt;/\u0026lt;your_progject_name\u0026gt;  # 다른 곳에서 복호화 하기\n$ cd \u0026lt;your_project_name\u0026gt;\n$ git-crypt unlock \u0026lt;path_to_your_keyfile\u0026gt;   # 백업해둔 키파일을 이용해 복호화하기\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"참고사항\"\u003e참고사항\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e.gitattributes\u003c/code\u003e 파일 자신은 암호화되서는 안된다고 메뉴얼에 나와 있다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.gitattributes\u003c/code\u003e 파일에 \u003ccode\u003edir/**\u003c/code\u003e에서 \u003ccode\u003e**\u003c/code\u003e이 두 개인 이유는 이하 서브 디렉토리에서도 적용시킬 수 있기 때문이다.\u003c/li\u003e\n\u003cli\u003e상당히 많은 파일이나 폴더에 적용하는 것은 좋지 않다.\u003c/li\u003e\n\u003cli\u003e소스파일이나 텍스트 파일을 암호화 하는 데 적합하고 이진파일이나 데이터 파일에는 그리 적합하지 않다.\u003c/li\u003e\n\u003cli\u003e파일이름이나 파일에 대한 메타정보는 암호화하지 못한다. 즉 파일의 내용을 암호화 한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGit-Crypt Home - \u003ca href=\"https://www.agwa.name/projects/git-crypt/\"\u003ehttps://www.agwa.name/projects/git-crypt/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003egit-crypt github - \u003ca href=\"https://github.com/AGWA/git-crypt\"\u003ehttps://github.com/AGWA/git-crypt\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003emanaging secrets with git crypt - \u003ca href=\"https://dzone.com/articles/managing-secrets-with-git-crypt\"\u003ehttps://dzone.com/articles/managing-secrets-with-git-crypt\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Git-Crypt - github에 동기화할 때 자동 암호화"},{"content":"설치 파이어폭스의 확장기능 검색 : vimium-c 플러그인 설치 사용법 ? : 도움말 보이기/숨기기\nNavigating the current Page:\n? show the help dialog for a list of all available keys h scroll left j scroll down k scroll up l scroll right gg scroll to top of the page G scroll to bottom of the page d scroll down half a page u scroll up half a page f open a link in the current tab F open a link in a new tab r reload gs view source i enter insert mode -- all commands will be ignored until you hit Esc to exit yy copy the current url to the clipboard yf copy a link url to the clipboard gf cycle forward to the next frame gF focus the main/top frame Navigating to new pages: o Open URL, bookmark, or history entry, on an English letter \u0026#34;o\u0026#34; O Open URL, bookmark, history entry in a new tab, on an English letter \u0026#34;O\u0026#34; b Open bookmark B Open bookmark in a new tab Nvigating your history: H go back in history L go forward in history Manipulating tabs: J, gT go one tab left K, gt go one tab right g0 go to the first tab. Use `ng0` to go to n-th tab, on `g` and a number character of `0` g$ go to the last tab ^ visit the previously-visited tab t create tab yt duplicate current tab x close current tab X restore closed tab (i.e. unwind the `x` command) T search through your open tabs W move current tab to new window \u0026lt;a-p\u0026gt; pin/unpin current tab Using marks: ma, mA set local mark \u0026#34;a\u0026#34; (global mark \u0026#34;A\u0026#34;) `a, `A jump to local mark \u0026#34;a\u0026#34; (global mark \u0026#34;A\u0026#34;) `` jump back to the position before the previous jump -- that is, before the previous gg, G, n, N, / or `a Additional advanced browsing commands: ]], [[ Follow the link labeled \u0026#34;next or \u0026#34;\u0026gt;\u0026#34; (\u0026#34;previous\u0026#34; or \u0026#34;\u0026lt;\u0026#34;\u0026gt;) - helpful for browsing paginated sites \u0026lt;a-f\u0026gt; open multiple links in a new tab gi focus the first (or n-th) text input box on the page. Use \u0026lt;tab\u0026gt; to cycle through options. gu go up one level in the URL hierarchy gU go up to root of the URL hierarchy ge edit the current URL gE edit the current URL and open in a new tab zH scroll all the way left zL scroll all the way right v enter visual mode; use p/P to paste-and-go, use y to yank V enter visual line mode REFERENCE vimium - https://github.com/gdh1995/vimium ","permalink":"https://neosolaris.github.io/posts/vimium-c/","summary":"\u003ch2 id=\"설치\"\u003e설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e파이어폭스의 확장기능 검색 : vimium-c\u003c/li\u003e\n\u003cli\u003e플러그인 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"사용법\"\u003e사용법\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003e?\u003c/code\u003e : 도움말 보이기/숨기기\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNavigating the current Page:\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e?       show the help dialog for a list of all available keys\nh       scroll left\nj       scroll down\nk       scroll up\nl       scroll right\ngg      scroll to top of the page\nG       scroll to bottom of the page\nd       scroll down half a page\nu       scroll up half a page\nf       open a link in the current tab\nF       open a link in a new tab\nr       reload\ngs      view source\ni       enter insert mode -- all commands will be ignored until you hit Esc to exit\nyy      copy the current url to the clipboard\nyf      copy a link url to the clipboard\ngf      cycle forward to the next frame\ngF      focus the main/top frame\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eNavigating to new pages:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eo       Open URL, bookmark, or history entry, on an English letter \u0026#34;o\u0026#34;\nO       Open URL, bookmark, history entry in a new tab, on an English letter \u0026#34;O\u0026#34;\nb       Open bookmark\nB       Open bookmark in a new tab\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eNvigating your history:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eH       go back in history\nL       go forward in history\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eManipulating tabs:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eJ, gT   go one tab left\nK, gt   go one tab right\ng0      go to the first tab. Use `ng0` to go to n-th tab, on `g` and a number character of `0`\ng$      go to the last tab\n^       visit the previously-visited tab\nt       create tab\nyt      duplicate current tab\nx       close current tab\nX       restore closed tab (i.e. unwind the `x` command)\nT       search through your open tabs\nW       move current tab to new window\n\u0026lt;a-p\u0026gt;   pin/unpin current tab\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eUsing marks:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ema, mA  set local mark \u0026#34;a\u0026#34; (global mark \u0026#34;A\u0026#34;)\n`a, `A  jump to local mark \u0026#34;a\u0026#34; (global mark \u0026#34;A\u0026#34;)\n``      jump back to the position before the previous jump\n          -- that is, before the previous gg, G, n, N, / or `a\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eAdditional advanced browsing commands:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e]], [[  Follow the link labeled \u0026#34;next or \u0026#34;\u0026gt;\u0026#34; (\u0026#34;previous\u0026#34; or \u0026#34;\u0026lt;\u0026#34;\u0026gt;)\n          - helpful for browsing paginated sites\n\u0026lt;a-f\u0026gt;   open multiple links in a new tab\ngi      focus the first (or n-th) text input box on the page. Use \u0026lt;tab\u0026gt; to cycle through options.\ngu      go up one level in the URL hierarchy\ngU      go up to root of the URL hierarchy\nge      edit the current URL\ngE      edit the current URL and open in a new tab\nzH      scroll all the way left\nzL      scroll all the way right\nv       enter visual mode; use p/P to paste-and-go, use y to yank\nV       enter visual line mode\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003evimium - \u003ca href=\"https://github.com/gdh1995/vimium\"\u003ehttps://github.com/gdh1995/vimium\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"vimium-c - Vim like Using firefox"},{"content":" 오랫동안 사용했던 음악플레이(mpd) 전용 raspbian을 재설치하지 않고 업그레이드 하는 방법이다. 물론 잘 동작하지 않을 수도 있다. 중요 설정파일을 먼저 백업해두고 시작하는 것이 좋겠다. 그간의 설정과 환경 구성을 변경하지 않고, 재설치 하지 않고 이를 해결할 수 있다. mpc나 기타 클라이언트 프로그램이 최신 mpd (최소 0.21 Version)를 요구하는 것을 계기로 이 문서를 정리하게 되었다. 현재의 stretch를 buster로 변경한다. 중간 중간에 물어보는 것이 많으니 지켜보고 확인해주어야한다. 시간은 30여분 정도 소요된다. 언젠가 새로 설치할 때는 최신 raspios를 설치하고 설정한 후에 문서로 정리할 예정이다. Howto 아래 두 파일을 stretch -\u0026gt; buster로 변경 $ sudo vi /etc/apt/sources.list $ sudo vi /etc/apt/sources.list.d/raspi.list $ sudo apt update $ sudo apt dist-upgrade $ sudo reboot ... $ cat /etc/os-release Reference Update Raspberry Pi - https://phoenixnap.com/kb/update-raspberry-pi ","permalink":"https://neosolaris.github.io/posts/raspbian-update/","summary":"\u003cul\u003e\n\u003cli\u003e오랫동안 사용했던 음악플레이(mpd) 전용 raspbian을 재설치하지 않고 업그레이드 하는 방법이다.\u003c/li\u003e\n\u003cli\u003e물론 잘 동작하지 않을 수도 있다. 중요 설정파일을 먼저 백업해두고 시작하는 것이 좋겠다.\u003c/li\u003e\n\u003cli\u003e그간의 설정과 환경 구성을 변경하지 않고, 재설치 하지 않고 이를 해결할 수 있다.\u003c/li\u003e\n\u003cli\u003empc나 기타 클라이언트 프로그램이 최신 mpd (최소 0.21 Version)를 요구하는 것을 계기로 이 문서를 정리하게 되었다.\u003c/li\u003e\n\u003cli\u003e현재의 stretch를 buster로 변경한다.\u003c/li\u003e\n\u003cli\u003e중간 중간에 물어보는 것이 많으니 지켜보고 확인해주어야한다. 시간은 30여분 정도 소요된다.\u003c/li\u003e\n\u003cli\u003e언젠가 새로 설치할 때는 최신 raspios를 설치하고 설정한 후에 문서로 정리할 예정이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"howto\"\u003eHowto\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래 두 파일을 stretch -\u0026gt; buster로 변경\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo vi /etc/apt/sources.list\n$ sudo vi /etc/apt/sources.list.d/raspi.list\n$ sudo apt update\n$ sudo apt dist-upgrade\n$ sudo reboot\n...\n$ cat /etc/os-release\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eUpdate Raspberry Pi - \u003ca href=\"https://phoenixnap.com/kb/update-raspberry-pi\"\u003ehttps://phoenixnap.com/kb/update-raspberry-pi\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Update Raspbian from an Older Version to Buster - 라즈비안 업그레이드"},{"content":"Intro 프로그래밍 환경에서 각 언어별 주석처리를 쉽게 추가 제거 할 수 있는 플러그인 관련 플러그인 중에 가장 인기가 많고 사용이 편리하다. Features Supports treesitter. Supports commentstring. Read :h comment.commentstring Supports line (//) and block (/* */) comments Dot (.) repeat support for gcc, gbc and friends Count support for [count]gcc and [count]gbc Left-right (gcw gc$) and Up-Down (gc2j gc4k) motions Use with text-objects (gci{ gbat) Supports pre and post hooks Ignore certain lines, powered by Lua regex Install With packer.nvim use { \u0026#39;numToStr/Comment.nvim\u0026#39;, config = function() require(\u0026#39;Comment\u0026#39;).setup() end } Manual Install $ cd ~/.local/share/nvim/site $ git clone https://github.com/numToStr/Comment.nvim $ cp Comment.nvim/plugin/Comment.lua plugin/ $ cp -r Comment.nvim/lua/Comment lua/ $ vi ~/.config/nvim/init.lua ... lua require(\u0026#39;Comment\u0026#39;).setup() :so % REFERNCE Comment.nvim Github: https://github.com/numToStr/Comment.nvim ","permalink":"https://neosolaris.github.io/posts/comment.nvim/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e프로그래밍 환경에서 각 언어별 주석처리를 쉽게 추가 제거 할 수 있는 플러그인\u003c/li\u003e\n\u003cli\u003e관련 플러그인 중에 가장 인기가 많고 사용이 편리하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"features\"\u003eFeatures\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSupports treesitter.\u003c/li\u003e\n\u003cli\u003eSupports commentstring. Read :h comment.commentstring\u003c/li\u003e\n\u003cli\u003eSupports line (\u003ccode\u003e//\u003c/code\u003e) and block (\u003ccode\u003e/* */\u003c/code\u003e) comments\u003c/li\u003e\n\u003cli\u003eDot (\u003ccode\u003e.\u003c/code\u003e) repeat support for \u003ccode\u003egcc\u003c/code\u003e, \u003ccode\u003egbc\u003c/code\u003e and friends\u003c/li\u003e\n\u003cli\u003eCount support for [count]gcc and [count]gbc\u003c/li\u003e\n\u003cli\u003eLeft-right (\u003ccode\u003egcw\u003c/code\u003e \u003ccode\u003egc$\u003c/code\u003e) and Up-Down (\u003ccode\u003egc2j\u003c/code\u003e \u003ccode\u003egc4k\u003c/code\u003e) motions\u003c/li\u003e\n\u003cli\u003eUse with text-objects (\u003ccode\u003egci{\u003c/code\u003e \u003ccode\u003egbat\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003eSupports pre and post hooks\u003c/li\u003e\n\u003cli\u003eIgnore certain lines, powered by Lua regex\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWith packer.nvim\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003euse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s1\"\u003e\u0026#39;numToStr/Comment.nvim\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003econfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kr\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Comment\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003esetup\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kr\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eManual Install\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ~/.local/share/nvim/site\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/numToStr/Comment.nvim\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cp Comment.nvim/plugin/Comment.lua plugin/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cp -r Comment.nvim/lua/Comment lua/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vi ~/.config/nvim/init.lua\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003elua require(\u0026#39;Comment\u0026#39;).setup()\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e:so %\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"refernce\"\u003eREFERNCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eComment.nvim Github: \u003ca href=\"https://github.com/numToStr/Comment.nvim\"\u003ehttps://github.com/numToStr/Comment.nvim\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Comment.nvim - nvim 주석처리 프로그램"},{"content":"Intro Bash에서 Color를 표현하는 방법을 알아본다. bash로 작성한 프로그램의 출력이나 프롬프트를 예쁘게 표현해 보자. 그러나 지나친 시간 투자 보다는 색깔이 주는 주목성과 구분력, 편한함, 간결함에 집중하자. Map the colors # Color mapping grey=\u0026#39;\\[\\033[1;30m\\]\u0026#39; red=\u0026#39;\\[\\033[0;31m\\]\u0026#39; RED=\u0026#39;\\[\\033[1;31m\\]\u0026#39; green=\u0026#39;\\[\\033[0;32m\\]\u0026#39; GREEN=\u0026#39;\\[\\033[1;32m\\]\u0026#39; yellow=\u0026#39;\\[\\033[0;33m\\]\u0026#39; YELLOW=\u0026#39;\\[\\033[1;33m\\]\u0026#39; purple=\u0026#39;\\[\\033[0;35m\\]\u0026#39; PURPLE=\u0026#39;\\[\\033[1;35m\\]\u0026#39; white=\u0026#39;\\[\\033[0;37m\\]\u0026#39; WHITE=\u0026#39;\\[\\033[1;37m\\]\u0026#39; blue=\u0026#39;\\[\\033[0;34m\\]\u0026#39; BLUE=\u0026#39;\\[\\033[1;34m\\]\u0026#39; cyan=\u0026#39;\\[\\033[0;36m\\]\u0026#39; CYAN=\u0026#39;\\[\\033[1;36m\\]\u0026#39; NC=\u0026#39;\\[\\033[0m\\]\u0026#39; Bash Prompt ~/.bash_profile이나 ~/.bashrc에 다음과 같이 작성하고 다시 로그인 case $HOSTNAME in plato*) PSC=\u0026#34;\\e[1;33m\u0026#34; ;; *) PSC=\u0026#34;\\e[36m\u0026#34; ;; esac PS1=\u0026#34;[\\j]\\[${PSC}\\]\\u@\\h(\\l) \\[\\e[37m\\][ \\w ]\\[\\e[00m\\]\\n\\[\\e[1m\\]\\#\\[\\e[0m\\] \\$ \u0026#34; REFERENCE Bash Prompt Generator : https://robotmoon.com/bash-prompt-generator/ Customizing Bash Prompt : https://linuxopsys.com/topics/customizing-bash-prompt-in-linux-changing-colors ","permalink":"https://neosolaris.github.io/posts/bash-color/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBash에서 Color를 표현하는 방법을 알아본다.\u003c/li\u003e\n\u003cli\u003ebash로 작성한 프로그램의 출력이나  프롬프트를 예쁘게 표현해 보자.\u003c/li\u003e\n\u003cli\u003e그러나 지나친 시간 투자 보다는 색깔이 주는 주목성과 구분력, 편한함, 간결함에 집중하자.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"map-the-colors\"\u003eMap the colors\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e Color mapping\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003egrey=\u0026#39;\\[\\033[1;30m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ered=\u0026#39;\\[\\033[0;31m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eRED=\u0026#39;\\[\\033[1;31m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003egreen=\u0026#39;\\[\\033[0;32m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eGREEN=\u0026#39;\\[\\033[1;32m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eyellow=\u0026#39;\\[\\033[0;33m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eYELLOW=\u0026#39;\\[\\033[1;33m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003epurple=\u0026#39;\\[\\033[0;35m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ePURPLE=\u0026#39;\\[\\033[1;35m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewhite=\u0026#39;\\[\\033[0;37m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eWHITE=\u0026#39;\\[\\033[1;37m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eblue=\u0026#39;\\[\\033[0;34m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eBLUE=\u0026#39;\\[\\033[1;34m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ecyan=\u0026#39;\\[\\033[0;36m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eCYAN=\u0026#39;\\[\\033[1;36m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eNC=\u0026#39;\\[\\033[0m\\]\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"bash-prompt\"\u003eBash Prompt\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e~/.bash_profile\u003c/code\u003e이나 \u003ccode\u003e~/.bashrc\u003c/code\u003e에 다음과 같이 작성하고 다시 로그인\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"nv\"\u003e$HOSTNAME\u003c/span\u003e in\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    plato*\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003ePSC\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\\e[1;33m\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    *\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003ePSC\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\\e[36m\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eesac\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003ePS1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;[\\j]\\[\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePSC\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\\]\\u@\\h(\\l) \\[\\e[37m\\][ \\w ]\\[\\e[00m\\]\\n\\[\\e[1m\\]\\#\\[\\e[0m\\] \\$ \u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBash Prompt Generator : \u003ca href=\"https://robotmoon.com/bash-prompt-generator/\"\u003ehttps://robotmoon.com/bash-prompt-generator/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCustomizing Bash Prompt : \u003ca href=\"https://linuxopsys.com/topics/customizing-bash-prompt-in-linux-changing-colors\"\u003ehttps://linuxopsys.com/topics/customizing-bash-prompt-in-linux-changing-colors\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Bash Color"},{"content":"last updated: {{ \u0026ldquo;1718885075\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\nIntro Docker에서 많이 사용되어 유명해졌다. 다음은 알파인 리눅스의 세가지 특징이자 철학이다. Small: musl libc + busybox (container: 8MB, Minimal Disk Install: 130MB) Simple: package manager apk, Init System OpenRC and Fast Secure: Position Independent Executables(PIE) INSTALL alpine_install - 설치 alpine_upgrade - 업그레이드 alpine_devel - 개발환경 alpine_wsl2 - 윈도우즈 WSL2에서 alpine 설치 REFERENCE docker-busybox Alpine FAQ: https://wiki.alpinelinux.org/wiki/Alpine_Linux:FAQ Alpine Tutorial and Howtos: https://wiki.alpinelinux.org/wiki/Tutorials_and_Howtos ","permalink":"https://neosolaris.github.io/posts/alpine/","summary":"\u003cp\u003elast updated: {{ \u0026ldquo;1718885075\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\u003c/p\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDocker에서 많이 사용되어 유명해졌다.\u003c/li\u003e\n\u003cli\u003e다음은 알파인 리눅스의 세가지 특징이자 철학이다.\n\u003cul\u003e\n\u003cli\u003eSmall: musl libc + busybox (container: 8MB, Minimal Disk Install: 130MB)\u003c/li\u003e\n\u003cli\u003eSimple: package manager \u003ccode\u003eapk\u003c/code\u003e, Init System \u003ccode\u003eOpenRC\u003c/code\u003e and Fast\u003c/li\u003e\n\u003cli\u003eSecure: Position Independent Executables(PIE)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eINSTALL\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../alpine_install\"\u003ealpine_install\u003c/a\u003e - 설치\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../alpine_upgrade\"\u003ealpine_upgrade\u003c/a\u003e - 업그레이드\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../alpine_devel\"\u003ealpine_devel\u003c/a\u003e - 개발환경\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../alpine_wsl2\"\u003ealpine_wsl2\u003c/a\u003e - 윈도우즈 WSL2에서 alpine 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../docker-busybox\"\u003edocker-busybox\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAlpine FAQ: \u003ca href=\"https://wiki.alpinelinux.org/wiki/Alpine_Linux:FAQ\"\u003ehttps://wiki.alpinelinux.org/wiki/Alpine_Linux:FAQ\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAlpine Tutorial and Howtos: \u003ca href=\"https://wiki.alpinelinux.org/wiki/Tutorials_and_Howtos\"\u003ehttps://wiki.alpinelinux.org/wiki/Tutorials_and_Howtos\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Alpine Linux"},{"content":"개요 윈도우즈에서 도커를 사용하는 방법을 설명한다. 이것으로써 윈도우, 리눅스의 모든 환경에서 도커의 범용성과 안정성이 확보된다. 즉, 개발환경, 테스트환경, 실행환경의 일관성을 갖게 된다. 첫째는 WSL2 + Git Bash + Docker Desktop를 결합하여 사용하는 방법이다. 둘째는 WSL2 + Alpine를 설치하고 알파인 리눅스에서 git + docker의 형태로 사용하는 방법이다. 두번째 방법이 조금 복잡해 보이긴 하나 훨씬 처리가 간결하고 적은 리소스와 빠른 실행 속도가 돋보인다. 또한 리눅스 기반이므로 파일시스템 문제, 퍼미션 문제, 경로 처리 문제 등에서 훨씬 쉽고 편한 환경이므로 두번째 방법에 대해서 상술한다. Windows WSL2 공통 기반 설정 설치환경: Windows 11 Bios 설정: 바이오스에서 가상머신 지원(Virtual Machine Support) 여부를 선택한다. WSL2를 확인하고 필요하면 업데이트한다. (PowerShell:관리자권한으로) \u0026gt; wsl -l -v # Version Check \u0026gt; wsl --update # wsl2 upgrade or update Nerd Font 설치 터미널에서 아이콘 등 nerd font가 표시되고 코딩시 가독성을 높이기 위해서 설치 MeslsLGS NF Install https://github.com/fontmgr/MesloLGSNF D2Coding (코딩용 영문 한글 지원: 하지만 이것은 Nerd Font가 아니다.) https://github.com/naver/d2codingfon WSL2 + Git Bash + Docker Desktop Docker Desktop\n기본 설치: 설치 후 계정이 없으면 가입하고 로그인한다. 준비 완료 Git Bash\n기본 설치: 단, 아래 설정으로 CRLF 처리를 자동 변환하지 못하도록 한다.(깃허브 다운 및 도커 사용시 문제 발생) Configuring the line ending conversions -\u0026gt; Checkout \u0026lt;as-is, commit as-is\u0026gt; 실행하기\nDocker Desktop 실행 Git Bash 실행 $ docker --version # version check $ docker run hello-world # run test $ docker ps -a # process check 사용시 주의 사항 Git Bash 실행 터미널 설정: 자신에게 맞게, 위의 Nerd Font 설정 경로 설정시 에러 및 해결 방법 $ docker run --rm -it -v $(pwd):/data docker_image_name # Path Name Error $ docker run --rm -it -v /$(pwd):/data docker_image_name # Fixed, //c/User/user_name... $ MSYS_NO_PATHCONV=1 docker run --rm -it -v $(pwd):/data docker_image_name # Set Msys Env First WSL2 + Alpine + Git + Docker minimum 수동 설치 방법이 있으나 데몬 서비스, docker 설치 등에 어려움이 있다. 윈도우즈 앱 \u0026gt; alpine 검색 \u0026gt; 설치 \u0026gt; 실행 처음 실행시 user 및 password 입력: root는 설정해준 일반유저와 동일. ex) $su - 특이사항: default shell: ash (필요하면 bash를 추가 설치: apk add bash bash-completion) grep: busybox grep (고성능의 grep이 필요하다면 추가 설치: apk add grep) sudo: doas (필요하면 추가 설치: apk add doas) openssh: openssh (필요하면 설치: apk add openssh) curl: wget은 기본 설치 (필요하면 추가설치: apk add curl) Alpine Init \u0026amp; Setup 설치 후 PowerShell에서 Default로 설정 wsl -s Alpine # --set-default: wsl default set Alpine WSL2 실행후 기본 정보 확인 $ passwd # Password 설정 $ cat /etc/os-release # Os Version Check $ uname -a # Os Info Check $ df -Th / # Disck Usage Check 기본 최소 패키지 설치 $ su - # Change to Root # cat \u0026gt; /etc/apk/repositories \u0026lt;\u0026lt; EOF; $(echo) https://dl-cdn.alpinelinux.org/alpine/v$(cut -d\u0026#39;.\u0026#39; -f1,2 /etc/alpine-release)/main/ https://dl-cdn.alpinelinux.org/alpine/v$(cut -d\u0026#39;.\u0026#39; -f1,2 /etc/alpine-release)/community/ https://dl-cdn.alpinelinux.org/alpine/edge/testing/ EOF # apk update # Update # apk add neofetch libstdc++ curl grep bash bash-completion openssh nvim # libs, Utils # apk add openrc git docker # Daemon Service, Git, Docker Install doas (like sudo) 설정 # vi /etc/doas.d/doas.conf # user01 is username, root permition allowed, password once and cached #permit persist user01 as root # user01 is username, root permition allowed, no password permit nopass user01 as root ... Docker Setup 다음 수행 후 alpine 종료 및 재실행\nalpine에서 docker는 community repository에 있다. 추가한다.\n서비스에 등록하고 실행하기 위해 openrc를 설치하고 설정해 준다.\n서비스 등록은 한 번만 해주면 된다.\nDocker Group Setting \u0026amp; Add Openrc Service (root)\n# rc-update add docker default # add service docker # rc-update # check docker is added the default run level # addgroup borisu docker # Add group user borisu to docker # exit Alpine Docker Test 아래 openrc default 명령은 윈도우즈 부팅 후 한 번만 수행해 준다. (docker 서비스 실행)\n이후 사용 중 여러개의 터미널을 띄울 수 있다.\nDocker Run (user)\n$ doas openrc default # service running default with docker $ doas rc-status # Check Service status $ docker --version # docker version check $ docker run hello-world # run test $ docker ps -a # docker container process check $ exit # exit openrc default 명령 중 network error 발생 시 다음과 같이 수행. $ doas touch /etc/network/interfaces $ doas openrc default Git Setup ssh-keygen으로 키를 만든다. 자신의 깃허브 계정 홈에 ~/.ssh/id_ed25519.pub 내용을 등록해준다. $ ssh-keygen -t ed25519 -C \u0026#34;yourmail@mail.com\u0026#34; # KEY GENERATE $ cat ~/.ssh/id_ed25519.pub # COPY PUB KEY, ADD to GITHUB $ git config --global user.name \u0026lt;user_name\u0026gt; # User name set $ git config --global user.email \u0026lt;user_email\u0026gt; # User email set $ git clone git@github.com:user_name/user_project # Clone my project form GITHUB $ ls user_project Alpine WSL2 사용 팁 실행아이콘(터미널실행)\n일반적으로는 실행 아이콘을 누르면 탭이 지원되는 파워쉘 환경에서 동작한다. 터미널의 설정에서 이미 설치한 Nerd Font 및 기타 설정을 한다. PowerShell에서 실행\nc:\\\u0026gt; wsl -d Alpine [-u username] # 실행 c:\\\u0026gt; wsl -t Alpine # 종료(terminate) Visual Studio Code with WSL2 vim이 아닌 vscode 사용자는 플러그인을 사용하여 연동할 수 있다. 플러그인 remote-wsl을 설치 이를 통애 wsl과 연동 및 terminal 사용가능 콘솔 또는 터미널에 자동으로 code 명령이 잡힌다. $ cd ~/my_project; code . 이렇게 사용이 가능하다. REFERENCE Automated Alpine Linux Setup in WSL2\nhttps://www.numbersandreality.com/computers/linux/alpine-wsl/\nEnable Community Repository\nhttps://wiki.alpinelinux.org/w/index.php?title=Enable_Community_Repository\u0026amp;redirect=no\nRemoting SSH support for Alpine Linux\nhttps://github.com/microsoft/vscode-remote-release/issues/6347\nAlpine Docker Install\nhttps://wiki.alpinelinux.org/wiki/Docker\nHow to enable services on Alpine Linux\nhttps://www.cyberciti.biz/faq/how-to-enable-and-start-services-on-alpine-linux/\nOpenrc Howto on Alpine\nhttps://wiki.alpinelinux.org/wiki/OpenRC\n","permalink":"https://neosolaris.github.io/posts/docker-windows/","summary":"\u003ch2 id=\"개요\"\u003e개요\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e윈도우즈에서 도커를 사용하는 방법을 설명한다.\u003c/li\u003e\n\u003cli\u003e이것으로써 윈도우, 리눅스의 모든 환경에서 도커의 범용성과 안정성이 확보된다.\u003c/li\u003e\n\u003cli\u003e즉, 개발환경, 테스트환경, 실행환경의 일관성을 갖게 된다.\u003c/li\u003e\n\u003cli\u003e첫째는 \u003ccode\u003eWSL2 + Git Bash + Docker Desktop\u003c/code\u003e를 결합하여 사용하는 방법이다.\u003c/li\u003e\n\u003cli\u003e둘째는 \u003ccode\u003eWSL2 + Alpine\u003c/code\u003e를 설치하고 알파인 리눅스에서 \u003ccode\u003egit + docker\u003c/code\u003e의 형태로 사용하는 방법이다.\u003c/li\u003e\n\u003cli\u003e두번째 방법이 조금 복잡해 보이긴 하나 훨씬 처리가 간결하고 적은 리소스와 빠른 실행 속도가 돋보인다.\u003c/li\u003e\n\u003cli\u003e또한 리눅스 기반이므로 파일시스템 문제, 퍼미션 문제, 경로 처리 문제 등에서 훨씬 쉽고 편한 환경이므로 두번째 방법에 대해서 상술한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"windows-wsl2-공통-기반-설정\"\u003eWindows WSL2 공통 기반 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e설치환경: Windows 11\u003c/li\u003e\n\u003cli\u003eBios 설정: 바이오스에서 가상머신 지원(Virtual Machine Support) 여부를 선택한다.\u003c/li\u003e\n\u003cli\u003eWSL2를 확인하고 필요하면 업데이트한다. (PowerShell:관리자권한으로)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e wsl -l -v    \u003cspan class=\"c1\"\u003e# Version Check\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e wsl --update \u003cspan class=\"c1\"\u003e# wsl2 upgrade or update\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"nerd-font-설치\"\u003eNerd Font 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e터미널에서 아이콘 등 nerd font가 표시되고 코딩시 가독성을 높이기 위해서 설치\u003c/li\u003e\n\u003cli\u003eMeslsLGS NF Install\n\u003ca href=\"https://github.com/fontmgr/MesloLGSNF\"\u003ehttps://github.com/fontmgr/MesloLGSNF\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eD2Coding (코딩용 영문 한글 지원: 하지만 이것은 Nerd Font가 아니다.)\n\u003ca href=\"https://github.com/naver/d2codingfon\"\u003ehttps://github.com/naver/d2codingfon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"wsl2--git-bash--docker-desktop\"\u003eWSL2 + Git Bash + Docker Desktop\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eDocker Desktop\u003c/p\u003e","title":"Docker on Windows - 윈도우즈에서 도커 설치 및 사용"},{"content":"신들은 처음부터 모든 것을 계시해 주지 않았다. 그러나 인간은 탐구를 해 나가고, 그래서 조만간 더 많은 것을 알게 된다. 여기 이것들이 마치 진리인 듯 생각하자. 그러나 신에 대한 진리와 내가 말하고 있는 내용을 아무도 알지 못하고 또 앞으로도 아는 자가 없으리라. 만일 어떤 자가 스스로 완전한 진리를 말하는 경우가 있다고 해도 그 자신은 그 사실을 알지 못하며 모든 것에는 겉모습이 덧씌워져 있어 본모습을 가리고 있기 때문이다. - 크세노파네스 저자 모리스 클라인(MORRIS KLINE, 1908∼1992년) 모리스 클라인은 브루클린과 자메이카, 퀸스에서 자랐다. 브루클린의 보이스 고등학교를 졸업하고 뉴욕 대학교에서 수학을 공부했다. 같은 대학교에서 1930년에 학사 학위를 받았고 석사 학위(1930년), 박사 학위(1936년)를 받았다. 1938년부터 1975년까지 뉴욕 대학교 쿠란트 수리 과학 연구소에서 교수로 재직하며 학생들을 가르쳤다. 은퇴 후에도 쿠란트 수리 과학 연구소의 명예 교수로 일하며 수학과 수학 교육에 관한 다양한 저술을 남겼다. 순수 수학만이 아니라 응용 수학의 의미와 가치를 대중적으로 인식시키는 데 크게 공헌했다.\n저서로는 「수학 입문(Introduction to Mathematics)」(1937년), 「수학, 문명을 지배하다(Mathematics in Western Culture)」(1953년), 「수학과 물리 세계(Mathematics and the Physical World)」(1959년), 「왜 교수는 못 가르치는가 : 수학과 대학 교육의 딜레마(Why the professor can\u0026rsquo;t teach: Mathematics and the dilemma of university education)」(1977년), 「비수학자를 위한 수학(Mathematics for the Nonmathematician)」(1985), 「지식의 추구와 수학(Mathematics and the Search for Knowledge)」(1986년)\n옮긴이 심재관 건국대학교 영문학과와 고려대학교 수학과를 졸업하고 미국 일리노이 주립 대학교에서 박사학위를 취득했다. 경북 대학교 위상 기하 연구소 연구원, 서울 대학교 BK21 연구원으로 있었으며 2006년 현재 고려 대학교 강사로 재직 중이다. 옮긴 책으로는 「그림 없는 그림책」, 「존재하는 무」, 「케플러의 추측」, 「열정을 기억하라」 등이 있다.\n책소개 뉴욕 대학교 쿠란트 수리 과학 연구소의 교수로 재직했으며 다양한 수학 대중서로 천문학 분야의 칼 세이건에 맞먹는 명성을 누린 응용 수학자 모리스 클라인의 대표작으로, 피타고라스와 유클리드에서 시작된 서양 수학의 역사를 훑으면서 모든 지식 체계의 전범이자 다른 모든 학문의 확실성을 보장해 주는 학문의 여왕으로 군림했던 수학이 어떻게 자신의 확실성조차 명확하게 주장하지 못하고 다른 학문과의 연결 고리를 잃어버리게 되었는지 수학의 흥망성쇠를 보여 준다.\n유클리드가 『기하학 원론』을 지으면서 가졌던 꿈, 즉 몇 가지 확실한 공리에서 수많은 정리와 수학적 사실을 유도해 낼 수 있는 거대한 연역적 지식 체계를 구축하고자 하는 아이디어가 어떤 사회적, 문화적, 지적 배경 속에서 형성되었으며, 그 아이디어가 역사의 발전과 인간 지식 체계의 변화 속에서 어떻게 좌절을 맛봤는지 생생하게 보여 주고 있다.\n수학은 진리를 대변하는 그런 학문이 아니다. 완벽하지도 않다. 이를 신성시 하는 것은 잘못된 풍조라 할 수 있겠다. 하지만 그렇다고해서 우리가 버려야할 것도 아니다. 수학은 인간 이성의 최고 산물이며 한계는 있지만 진리를 탐구하는 도구이다. 수학의 한계와 문제점을 파악하고 인간 문화와 함께 현실과 함께 발을 딛고 문제를 해결하는 것이 수학을 하는 참된 의미가 아닐까 정리해 본다.\n20세기 수학 기초론의 발전 과정은 다음과 같은 비유로 적절하게 요약될 수 있을 듯싶다. 라인 강둑에 수백 년 된 아름다운 성이 서 있다. 성 지하에 사는 부지런한 거미들이 거미줄로 거미집을 정교하게 지어 놓았다. 어느 날 세찬 바람이 불어 거미집이 부서졌다. 거미들은 미친 듯이 실을 뽑아 거미집을 고쳤다. 그것은 거미들이 성이 무너져 내리지 않게 지탱해 주는 것은 자기들이 지은 거미집이라고 생각했기 때문이다. p.482\n1장 수학의 창세기 진리 탐구라는 측면과 관련해 특기할 만한 점이 하나 있으니, 그것은 에우독소스와 마찬가지로 프톨레마이오스도 그의 이론이 관측내용과 합치되는 편리한 수학적 기술일 뿐, 자연의 실제 모습과는 반드시 일치하지 않는다는 사실을 충분히 인식하고 있었다는 점이다. p52\n수학의 연역적 방식과 자연법칙을 수학으로 표현하려는 생각이 알렉산드리아 시대를 여전히 지배하기는 했지만 고대 그리스 인들과 달리 알렉산드리아 인들은 실험과 관찰로부터 진리를 발견하려는 노력도 기울였다. p57\n수학적 연구 성과 및 수많은 과학 탐구 결과와 더불어 그리스인들은 우주가 수학적으로 짜여 있다는 믿을 만한 증거를 남겨 주었다. 수학은 자연 곳곳에 내재되어 있다. 수학은 자연의 구조에 관한 진리이며 플라톤이 생각했듯이 물질 세계의 본질을 드러내는 실체이다. 우주에는 법칙과 질서가 있으며 수학은 바로 그러한 질서를 밝혀내는 열쇠이다. 더욱이 인간 이성에는 이러한 우주의 계획을 꿰뚫어 그 수학적 구조를 밝혀낼 수 있는 능력이 있다. 자연을 파악하는 데 논리적이고 수학적인 방식을 채택하자는 생각이 생겨난 것은 주로 유클리드의 기하학 원론에 그 공을 돌려야 할 것이다. 이 저작으로 인해 수학을 바탕으로 모든 물리적 지식을 논리적으로 조직하려는 생각이 지식계에 생겨났다. 따라서 수학과 자연 탐구 양자를 하나로 묶는 일은 그리스 인들에 의해 시작되었다. 19세기 후반까지도 자연의 수학적 구조를 밝히는 것이 곧 진리 탐구였다. 수학 법칙이 자연에 관한 진리라는 믿음은 가장 심오하고 가장 위대한 사상가들을 수학 연구로 이끌었다. p58\n2장 수학적 진리의 개화 외부 세계를 탐구하는 주된 목적은 하느님이 세워 놓고 수학의 언어로 우리에게 계시한 합리적 질서와 조화를 발견해 내는 것이다. - 요하네스 케플러\n니콜라우스 코페르니쿠스와 요하네스 케플러는 자연이 수학적으로 짜여 있다는 그리스 사상과 하느님이 우주를 창조하고 설계했다는 카톨릭의 가르침을 아무런 의심 없이 모두 받아들였다. p79\n세계는 수학적으로 표현할 수 있는 운동의 총합이며 우주는 수학적으로 조화롭게 설계된 위대한 기계이다. 과학뿐만 아니라 질서와 수량을 다루는 모든 학문은 수학에 의지해야 한다. 과학은 질서와 수량을 다루고 있으며, 그에 따라 수학과는 불가분의 관계를 갖는다. 수이든 형태이든 또는 항성이든 소리이든 다루는 대상이 무엇인가 하는 문제는 그다지 중요하지 않다. 그렇기 때문에 구체적 대상과는 독립된, 질서와 수량에 대한 일반 과학이 존재해야 한다. 실제로 그러한 일반 과학이 존재하고 있으니, 그것이 바로 수학이라는 학문이다. 수학은 유용성과 중요성에서 다른 모든 과학을 능가하는데, 수학이 다른 모든 과학에서 다루어지는 대상들을 포괄한다는 점에서 그 사실을 분명하게 알 수 있다. - 데카르트 p83\n갈릴레오는 낙하하는 물체에 가속도가 생기는 원인이 연구의 필수적 부분은 아니라고 밝혔다. 그는 단지 운동의 성질만을 기술하겠다고 못을 박았다. 과학적 탐구는 궁극적 원인을 찾는 형이상학과 분리되어야 하며, 물리적 원인에 대한 사변은 포기해야 한다고 생각했다. 즉 과학자의 임무는 원인을 캐는 것이 아니라 현상을 수량화하는 것이라고 생각했다. p88\n이 전통적 학자들은 이미 상정해 놓은 원리와 세계가 어떤 식으로 합치되는지 살펴보면 된다고 여겼다. 갈릴레오는 물리학에서는 수학과는 달리 경험과 실험에서 제1원리를 이끌어 내야 한다고 믿었다. 올바른 기본 원리를 얻는 방법은 마음이 선호하는 바를 따르는 것이 아니라 자연이 이야기하는 소리에 귀를 기울이는 것이라고 여겼다. 그는 이미 상정해 놓은 생각에 합치되는 자연 법칙을 받아들이는 과학자와 철학자를 공개적으로 비판했다. 자연이 먼저 인간의 두뇌를 만들고 그 다음으로 인간의 지능을 통해 쉽게 파악할 수 있게끔 자연 스스로는 구성해 내지는 않았다고 갈릴레오는 말했다. p91\n여하튼 물리적 원리는 경험과 관찰에서 얻어 내야 한다는 그의 주장은 혁명적이었으며 또 동시에 중대한 의미를 지니고 있었다. 갈릴레오 자신은 하느님이 우주를 창조할 때 사용한 여러 원리 가운데 일부는 정신을 통해 파악해 낼 수 있다는 사실을 의심하지 않았다. 하지만 실험의 역할을 인정하자 회의가 스며들 여지가 생기게 되었다. 만일 과학의 기본 원리가 실험에서만 나와야 한다면, 왜 수학의 공리는 그렇지 않은가? 사람들은 1800년까지는 이 질문에 구해을 받지 않았다. 수학은 여전히 특권적 지위를 누리고 있었다. p91\n3장 자연은 수학으로 씌어진 책이다. 어떤 이론이든 간에 그 이론이 얼마나 엄밀한 과학인가 하는 문제는 전적으로 그 안에 담긴 수학의 양에 따라 결정된다. - 이마누엘 칸트\n천체 운동에서 뉴턴이 이룬 최대의 업적은 케플러가 오랜 기간 관측과 시행착오를 거쳐 얻어 낸 케플러의 행성 운동 법칙이 중력 법칙과 세 가지 운동 법칙에서 수학적으로 연역되어 나온다는 사실을 입증한 것이다. p100\n[자연철학의 수학적원리] 서문 중에서 - 뉴턴 p101\n고대인들이 자연 현상의 탐구에서 역학이 지니는 중요성을 강조했고 또 현대인들이 본질적 형상과 신비주의적 속성을 거부하고 그 대신에 자연현상을 수학적 법칙에 종속시키려 노력해 왔던 바, 본 저자는 이 책에서 자연철학과 관계를 맺고 있는 범위 내에서 수학을 가능한 범위까지 연구하고 발전시켰다. \u0026hellip; 따라서 저자는 자연철학의 수학적 원리를 탐구하는 작업으로 이 책을 내놓았다. 운동 현상에서 자연의 힘을 연구하고 다시 이 힘들로부터 다른 현상을 설명해 내는 것이 바로 자연철학의 임무이다.\n하지만 뉴턴의 놀랄만한 업적이 가능했던 것은 물리학적 설명이 불가능한 경우라도 수학적 기술을 채택했기 때문이었다. 물리학적 설명 대신에 뉴턴은 중력이 어떻게 작용하는지 수량적으로 기술했고, 이는 매우 중요하면서 또 유용한 업적이었다. 그래서 자연철학의 수학적 원리 서두에 \u0026ldquo;이러한 힘들의 수학적 개념만을 다룰 뿐 그 물리학적 원인과 의의는 다루지 않는다.\u0026ldquo;라고 말했던 것이다. \u0026ldquo;우리는 이 힘의 본직이나 속성을 어떤 가설로도 이해할 수 없다고 보기 때문에 온전히 수학적 방식(뉴턴의 원전에 이탤릭체로 강조되어 있다.)으로 이 책을 전개할 따름이다. p103\n리처드 벤틀리에게 보낸 편지 - 뉴턴 p103\n중력은 물체에 내재적이고 본래적이며 또 본질적인 것이라서, 한 물체가 아무런 매채체 없이 진공을 뚫고 다른 물체에 작용한다는 생각은 너무도 어불성설이라 여겨지기 때문에 철학적 사고 능력을 가진 사람이라면 절대로 받아들이지 않으리라 믿습니다. 인력은 어떤 법칙에 따라 끊임없이 작용하는 매개자로 인해 일어날 수밖에 없습니다. 하지만 이 매개자가 물질인지 아니면 비물질인지는 독자가 생각해야 할 몫으로 남겨 두었습니다.\n뉴턴의 성공적 성과에도 불구하고 물리학적 설명이 없다는 점 때문에 과학자들은 불만을 느꼈다. 하지만 물리학적 설명을 더하려는 노력은 성공하지 못했다. p104\n뉴턴 역학과 그 이전 역학 사이의 근본적인 차이점은 물체의 운동을 기술하기 위해 수학을 도입했다는 점이 아니다. 수학은 편리하고 간결하고 더욱 분명하며 더욱 포괄적인 언어로서의 장점을 가지고 물리학에 도우미 역할을 했지만 단순히 그것으로 그치지는 않았다. 그보다 더욱 중요한 점은 수학이 근본적인 개념을 제공해 주었다는 사실이다. 인력이란 이름은 단지 수학적 기호를 대체하고 있을 뿐이다. 뉴턴의 운동 제2법칙( $F = ma$ 즉 함은 질량에 가속도를 곱한 것과 같다.)에서 볼 수 있듯이 힘은 질량에 가속도를 일으키는 모든 것을 가리킨다. 힘의 본질 자체는 물리적으로 이해하기 불가능할지도 모른다. 따라서 뉴턴은 구심력이나 원심력의 원리를 몰랐으면서도 그 개념을 사용했던 것이다. p106\n뉴턴의 이론은 자연이 수학적으로 설계되었으며 자연의 참된 법칙은 수학적이라는 신념을 심어 놓는 결정적인 역할을 했다. \u0026hellip; 제임스 진스가 신비한 우주(1930)에서 \u0026ldquo;우주의 위대한 건축가는 순수 수학자로서 자신의 모습을 드러낸다.\u0026ldquo;라고 말했을 때 이미 그는 최소한 200년이나 지난 시점에서 진부한 이야기를 하고 있었던 셈이다. p107\n뉴턴의 종교적 관심이 그의 수학 연구와 과학 연구를 이끌어 낸 진정한 힘이었다. 하느님은 자연에 존재하는 모든 힘의 기원이며 존재하는 사물과 발생하는 모든 것의 근원이었다. 젊은 시절부터 뉴턴은 종교 저작을 연구하고 해석했으며, 말년에는 신학 공부에 전적으로 매달렸다. 그의 신학 관련 논문 수백 편의 논문이 지금까지 전해지고 있다. 신비적 힘이나 초자연적 힘을 배제하기는 했지만 당시 과학학은 하느님을 향한 일종의 예배 행위였다. p110\n사실, 라플라스는 천문학 연구에 전 인생을 바쳤고 그의 수학 연구는 순전히 천문학 응용을 위한 것이었다. 이 사실은 그가 수학적 세부 내용에는 신경 쓰기를 꺼렸고 그 응용에만 관심을 갖고 있었음을 말해 준다. 수학 분야에서 이룩한 그의 업적은 자연철학 연구 성과의 부산물일 따름이었고, 그것도 다른 사람들을 통해 수학적 엄밀성을 갖추게 되었다. p114\n만일 18세기 사람들에게 세상은 수학적으로 만들어져 있고 또 가장 효과적으로 설계되었으며 하느님이 자연의 설계자라는 증거가 추가로 필요하다면, 그들은 또 다른 수학적 발견에서 그런 증거를 구했다. 헤론은 빛이 점 P에서 점 Q로 반사를 통해 옮겨 갈 때 최단 거리를 택한다는 사실을 증명했다. 빌은 일정한 속도로 움직이기 때문에 이 최단 거리는 또 최단 시간을 의미한다. 17세기의 위대한 수학자인 페르마는 증거가 제한적이기는 했지만 최소 시간의 원리를 천명했다. 최소 기간의 원리란, 빛이 한 점에서 다른 점으로 옮겨 갈 때 항상 최소 시간이 소요되는 경로를 따른다는 원리이다. 하느님은 빛이 수학적 법칙을 따르도록 했을 뿐만 아니라 가장 효율적으로 이동하게끔 만들어 놓은 것이다. 페르마는 스넬과 데카르트가 앞서 발견한 빛의 굴절 법칙에서 최소 기간의 원리를 연역해 내면서 이 원리의 올바름을 더욱 확신하게 되었다. 18세기 사람들은 완벽한 우주는 낭비를 용인하지 않기 때문에 자연은 최소한의 노력만을 기울여 원하는 목적을 달성한다고 굳게 믿었고 그에 따라 일반 원리를 찾고자 했다. 그러한 원리를 처음으로 내놓은 사람은 모페르튀였다. 그는 상이한 자연 법칙의 조화라는 논문에서 그 유명한 최소 작용의 원리를 제시했다. 페르마의 원리에서 출발해 연구를 진행했지만 빛의 속도가 예컨대 공기보다 물에서 더 빠르다는 주장과 더 느리다는 주장 사이에 논란이 끊이지 않자 모페르튀는 작용이란 질량과 속도와 움직인 거리를 곱하고 이를 적분한 것이라고 말했다. 그리고 자연 현상은 이 작용이 최소가 되는 방향으로 작동한다고 주장했다. 물리 법칙은 하느님이 창조한 세계에 걸맞은 완벽성을 반드시 지녀야 하는데 최소 작용의 원리는 자연이 효율적이라는 사실을 보여주고 있기 때문에 이러한 요건을 만족시킨다고 여겼던 것이다. 모페르튀는 자신의 원리가 보편적 자연 법칙이며 하느님의 존재와 지혜를 보여 주는 최초의 과학적 증거라고 주장했다. p119\n오일러는 \u0026ldquo;우주의 구조는 완벽하고 또 가장 현명한 창조자의 작품이기 때문에 최대화난 최소화가 일어나지 않는 사례는 단 하나도 없다.\u0026rdquo; 오일러는 거기에 그치지 않고 모든 자연 현상은 특정 함수가 최대화되거나 최소화되는 방향으로 작동하며 따라서 모든 물리학적 기본원리에는 최대화되거나 최소화되는 함수가 있게 마련이라는 믿음을 갖게 되었다. 하느님은 16세기와 17세기 사람들이 생각했던 것보다 더욱 현명한 수학자가 된 것이다. 오일러의 종교적 신념은 인간에게 자신의 능력을 활용하여 하느님이 세워 놓은 법칙을 이해해야 할 임무가 주어졌다는 확신을 심어 주기에 이르렀다. 자연이라는 책은 우리 눈앞에 활짝 펼쳐져 있지만 그 책에 씌어진 언어는 곧바로 이해하지 못한다. 하지만 끈기와 사랑과 노력을 기울이면 그 언어를 배울 수 있다. 그 언어란 수학이다. 이 세상은 가능한 것 가운데 최선의 세상이기 때문에 자연 법칙은 아름다울 수밖에 없다. 최소 작용의 원리는 라그랑주에 의해 명확하게 정리되었고, 또 더욱 포괄적인 원리로 일반화되었다. 작용은 본질적으로 에너지를 의미하게 되었으며, 이 일반화도니 원리에서 여러 역학 문제의 해답을 이끌어 낼 수 있었다. 최소작용의 원리는 영국의 제2의 뉴턴이라고 평가받는 윌리엄 로언 해밀턴에 의해 다시 한 번 일반화되었다. 오늘날 이 원리야말로 역학을 지배하는 가장 포괄적인 원리이며, 다른 물리학 분야에서 쓰이는 이와 비슷한 원리, 즉 변분 원리의 패러다임 역할을 해 왔다. 그러나 앞으로 보겠지만 해밀턴 시대의 사람들은 하느님이 우주를 설계하면서 이 원리들을 심어 놓았다는 모페르튀와 오일러의 주장을 더 이상 받아들이지 않았다. 이러한 변화의 일단을 볼테르의 아카키아 박사의 독설에서 찾아볼 수 있다. 이 책에서 볼테르는 하느님의 존재 증명을 비웃고 있다. 하지만 18세기 사람들은 그러한 포괄적인 원리가 존재한다는 것은 세상이 하느님에 의해 설계되었다는 증거라고 여전히 굳게 믿고 있었다. p120\n라플라스가 말한 다음 구절은 더욱 유명하다.\n우주의 현재 상태를 과거의 결과로, 그리고 미래의 원인으로 파악할 수 있다. 특정 시점에 자연 안에 있는 모든 힘과 존재물의 상호 위치를 모두 알고 있는 지적 존재자가 있다면, 그리고 이 지적 존재자가 모든 자료를 분석할 수 있을 만큼 충분한 능력을 갖추고 있다면 우주 안에 있는 거대한 별에서 미세한 원자에 이르는 모든 존재물의 운동을 단 하나의 수식으로 압축해 낼 수 있다. 그러한 지적 존재자에게 불확실한 것은 아무것도 없다. 또 그에게는 미래도 과거와 마찬가지로 눈앞에 생생하게 펼쳐져 있다. p121\n4장 첫 번째 위기: 수학적 진리의 퇴색 시대마다 신화가 있게 마련인데 그 당시에는 그것을 드높은 진리라고 부른다. - 무명씨 가우스, 코시, 푸리에를 위시한 수많은 학자들의 업적은 자연의 참된 법칙들이 속속들이 발견되어 가고 있다는 움직일 수 없는 증거로 여겨졌다. 그리고 실제로 19세기 내내 위대한 수학자들은 선배 학자들이 제시한 길을 따라 연구에 매진하여 더욱 강력한 수학 이론을 만들어 냈고 이 이론들을 자연의 숨겨진 비밀을 캐내는 데 성공적으로 활용했다. 그들은 수학자들이야말로 하느님의 설계를 발견해 내는 축복받은 자들이라는 믿음에 최면이라도 걸린 듯 자연의 수학적 법칙을 찾는 일에 혼신의 노력을 기울였다. p129\n부족의 우상이 인간 속성에 내재하고 있다. 바로 인간이라는 부족이 태생적으로 지니고 있는 우상 말이다. 그것은 인간의 감각을 모든 것의 잣대로 잘못 내세우고 있기 때문이다. 하지만 그와는 달리 감가가에 의한 것이든 아니면 정신에 의한 것이든 간에, 인식은 우주가 아니라 인간과 관계를 맺고 있다. 그리고 인간 정신은 고르지 못한 거울과도 비슷해서 자신의 특성을 다른 대상물에 투사하여, 이때 그 모습이 왜곡되고 뒤틀린다. 새로운 연구 분야를 개척하면서 탁상공론으로 공리를 확정할 수 있다는 생각은 옳지 않다. 왜냐하면 토론이나 논의가 아무리 심오해도 자연의 심오함을 도저히 따라갈 수 없기 때문이다. 신기관 Novum organum(1620) - 베이컨 p130\n되돌아보면, 하느님이 자연을 수학적으로 설계했다는 믿음은 바로 수학자들의 연구로 인해 붕괴되어 가고 있었다. p134\n최소 작용의 원리는 물리학에서 가장 중요한 법칙이 되었지만, 우주의 효율성을 근거로 그 원리가 필연적으로 성립할 수밖에 없다는 주장은 배격받고 있다. 여러 이유에서 이 주장을 배격하고 있지만 특히 효율성을 지닌다고 생각했던 물리량이 실은 크게 낭비되는 경우가 많기 때문이다. \u0026hellip; 따라서 하느님이 우주를 설계하면서 이러한 물리량의 효율성을 염두에 두었다고 믿기는 어렵다. - 헤밀턴\n데이비드 흄은 인간은 정신도 알지 못하고 물질도 알지 못한다고 주장했다. 이 둘 모두가 허상이라는 것이다. 사람은 감각을 지각한다. 이미지나 기억, 생각과 같은 단순한 관념은 감각이 낳는 희미한 효과에 지나지 않는다. 그리고 복잡한 관념은 단순한 관념들의 집합체일 따름이다. 마음이란 감각들과 관념들의 집합체와 동일하다. 직접 경험으로 검증할 수 있는 것 이외에는 다른 실체의 존재를 가정해서는 안 된다. 하지만 경험은 감각만을 낳을 뿐이다. 흄은 물질에 대해서도 마찬가지로 회의적인 눈길을 보냈다. 구체적 대상물로 가득 찬 세계가 영원히 존재한다고 어느 누가 장담할 수 있는가? 우리가 오로지 알 수 있는 것은 그러한 세계를 우리가 지각하고 있다는 사실뿐이다. 의자에 대한 감각이 계속 지속된다고 해서 그 의자가 실제로 존재한다는 증거가 될 수는 없다. 마찬가지로 인과관계도 여러 관념들을 관습적으로 연관지어 놓은 것에 불과하다. 공간, 시간, 인과 관계 모두 객관적 현실이 아니다. 감각의 힘과 그 생생함에 속아 그러한 현실이 존재하는 양 생각하고 있는 것이다. 고정된 속성을 지닌 외부세계가 존재한다는 생각에 대해서는 어떤 근거도 내세울 수 없다. 우리의 감각이 어디에서 연유되는지는 설명되지 못한다. 외부 물체에 의해 생기는 것인지, 아니면 마음 자체나 하느님에 의해 생기는 것인지는 알 수 없다. 인간 자신은 지각들, 즉 감각 및 관념으로 이루어진 고립된 집합체일 따름이다. 자아는 여러 상이한 지각들의 다발이다. 자기 자신을 인지하려는 시도는 하나의 지각만을 낳을 뿐이다. 다른 모든 사람들과 실재한다고 추정하는 외부 세계는 한 사람의 지각일 뿐으로, 실제로 그런 대상물이 존재하는지는 알 수 없다. 따라서 영원하고 객관적인 물질 세계에 관한 과학 법칙이란 존재할 수 없다. 그런 법칙은 단지 감각을 편의에 따라 정리해 둔 것에 지나지 않는다. 더욱이 인과 관계라는 관념은 과학적 증명에 기반을 둔 것이 아니라 흔하게 접하는 여러 \u0026lsquo;사태들\u0026rsquo;의 순서에서 생겨나는 마음의 습관에 그 기반을 두고 있기 때문에 과거에 인지된 사건 순서가 미래에도 그러리라는 보장이 없다. 이렇게 해서 흄은 자연 법칙의 불가피성과 영속성, 그리고 불가침성을 허물어 버렸다. p 136 외부 세계가 수학 법칙을 따른다는 주장을 논파함으로써 흄은 현실을 표상하는 논리적 연역 구조의 가치를 파괴했다. 그러나 또한 수학은 수와 기하학에 관한 정리를 담고 있는데, 이런 정리는 수 및 도형에 관해 미리 설정해 놓은 진리로부터 의심할 여지 없이 연역되어 나온다. 흄은 공리를 배격하지는 않았지만 공리와 그로부터 연역되는 결과에 무게를 두지 않았다. 공리는 물질 세계에 관한 감각으로부터 나온다. 그런데 물질 세계의 존재성은 추정되고 있을 뿐이다. 또 정리는 공리의 필연적 결과이기는 하지만 공리를 좀 더 버니르르한 모습으로 반복하고 있는 것에 그친다. 정리는 연역된 것이기는 하지만 연역되는 명제는 이미 공리 안에 내포되어 있다. 다시 말해서 정리란 동어 반복이다. 따라서 공리나 정리에는 진리가 담겨 있지 않다. 그런 다음, 흄은 인간이 진리를 획득하는 방법에 대해 답한다. 인간은 결코 진리에 다다를 수 없다는 것이 그의 답이었다. 흄의 철학은 과학 및 수학의 연구와 그 결과를 평가 절하했을 뿐만 아니라 이성의 가치 자체에 의문을 제기했다. 인간의 드놓은 능력을 부정하는 흄의 철학은 18세기 사상가 대다수에게 거부 반응을 일으켰다. 수학을 비롯한 인간 이성의 현현을 쓸모없다고 주장하기에는 이로어 놓은 성과가 너무도 많았다. 흄의 철학은 18세기 지식인 대다수에게는 혐오스러운 자가당착으로 비쳤고 수학과 과학의 눈부신 성공과는 합치되지 않는 어불성설이어서 반박할 가치조차 없다고 여겼다. p136\n수학은 선험적 진리의 모임이라는 주장에 대해 수학자들로서는 별다른 이의를 제기할 이유가 없었다. 하지만 대다수는 칸트가 그런 결론에 어떻게 이르렀는지에 대해서는 그다지 관심을 기울이지 않았다. 수학의 명제는 물질 세계에 내재되어 있는 것이 아니라 인간 정신에서 나온다는 칸트의 주장을 수학자들은 좀 더 면밀하게 살펴보았어야 했다. 감각을 조직할 때 항상 동일한 결과물을 만들어 내게끔 인간 정신은 구성되어 있는가? 그리고 공간 감각의 조직화는 필연적으로 유클리드 기하학이 되는가? 과연 우리는 그것을 어떻게 아는가? 칸트와는 달리 수학자들과 물리학자들은 외부 세계는 인간 정신과는 독립되어 있는 법칙을 따른다고 여전히 믿고 있었다. 세계는 이성적으로 설계되었으며 인간은 단지 그러한 설계를 파악해 내고 이렇게 파악된 내용을 가지고 외부 세계에서 일어날 일을 예측한다는 것이다. 우주 법칙을 하느님이 세웠다는 주장에 대한 무관심이나 심지어는 그에 대한 부인, 그리고 법칙은 인간 정신의 구조 안에 내재되어 있다는 칸트의 견해는 하느님의 분노를 사기에 충분했다. 하느님은 칸트와 특히 자기 중심적이고 교만하며 자신만만한 수학자들을 벌하기로 작심했다. 그래서 하느님은 비유클리드 기하학의 출현을 촉진했다. 비유클리드 기하학은 자기 충족적이고 전능한 인간 이성의 모든 업적을 한순간에 허물어 버릴 괴물이었다. p140\n일견, 가우스는 수학에 전혀 진리가 없다는 결론을 내린 듯이 보인다. \u0026ldquo;복소함수도 모든 수학 구성물과 마찬가지로 사람이 만들어 낸 것에 지나지 않는다는 점을 잊지 말아야 한다네. 그리고 제시한 정의가 제대로 된 의미를 가지지 못한다면 그것이 무엇이냐고 묻는 대신에 그 정의가 합당한 의미를 갖기 위해서는 무엇을 가정해야 좋은지 물어야 하네.\u0026rdquo; \u0026quot; 공간에 관한 이론은 지식 체계에서 순수 수학(수를 기초로 세워진 수학)이 차지하고 있는 위치와는 전적으로 다른 위치를 차지하고 있다고 나는 굳게 믿고 있네. 순수 수학이 담보하고 있는 절대적 확실성을 기하학은 결여하고 있지. 만일 수가 순전히 인간 정신의 산물이라면 공간은 우리 정신 밖에 존재하는 실체이고 따라서 그 법칙을 완벽하게 기술하기란 불가능하다는 사실을 인정하지 않을 수 없을 것이네.\n헬름홀츠는 그의 저서 계산과 측정(1887)에서 물리 현상에 산술을 기계적으로 적용하는 것이 과연 합당한지 검토하는 것이 가장 중요한 문제라고 주장했다. 그는 산술 법칙 가운데 어떤 것이 적용 가능한지 경험을 통해서만 확인할 수 있다고 결론지었다. 특정 상황에서 산술 법칙이 적용 가능한지는 선험적으로 알 수 없다는 이야기였다. 그는 여러 가지 적절하고 타당한 사실들을 지적했다. 수의 개념은 경험에서 생겨난다. 경험의 종류에 따라 자연수, 분수, 무리수의 개면이 생겨나고 각각의 성질도 도출된다. 이러한 경험에 대해서는 익숙히 알고 있는 수를 적용한다. 우리는 실질적으로 동등한 대상물이 존재한다는 점을 인식하며, 따라서 예를 들어 두 마리의 암소란 말을 사용해도 된다는 사실을 안다. 하지만 이런 대상물들은 사라지거나 하나로 뭉쳐지거나 여러 개로 나뉘면 안 된다. p164\n주어진 상황에 보통의 산술을 적용할 수 있는지의 여부는 오직 경험에만 의존하여 판단할 수 있다. 그러므로 산술을 자연 현상에 필연적으로 적용되는 진리들의 집합체라고 말하기 어렵다. 그리고 대수학과 해석학은 산술의 확장이기 때문에 그런 분야들도 진리의 집합체로 볼 수 없다. 따라서 수학자들로서는 수학에는 진리가 없다는 결론을 내리지 않을 도리가 없다. 여기서 진리라고 함은 실제 세계의 법칙을 드러낸다는 의미이다. 산술과 기하학의 기본 구조를 구성하는 공리는 경험에 의거해 채택되므로 그 구조가 갖는 적용성은 제한적일 수밖에 없다. 어디에 적용 가능한가는 오직 경험에 의거해서만 결정된다. 자명한 진리로부터 출발한 연역적 증명만으로 수학의 참됨을 담보하려던 그리스 인들의 시도는 부질없는 것으로 밝혀졌다. p169\n차츰 수학자들은 수학의 공리와 정리가 물질 세계에 관한 필연적 진리가 아니라는 사실을 인정하게 되었다. 특정 영역의 경험은 특정한 공리들을 채택하게 한다. 그리고 그 공리들과 그 공리들의 논리적 귀결은 그 영역을 정확하게 기술하는 유용한 도구로 사용된다. 하지만 그 영역이 확대되면 적용 가능성은 소멸될 수도 있다. 물질 세계의 연구에서 수학은 이론이나 모델만을 제공할 뿐이다. 그리고 새로운 이론이 기존 이론보다 현상을 더 적합하게 기술한다는 사실이 경험이나 실험으로 입증되면 기존 이론은 새로운 이론으로 대체된다. 수학과 물질 세계의 관계를 아인슈타인은 1921년에 다음과 같이 훌륭하게 표현했다. p172\n수학 명제들이 현실을 기술하는 한에서는 그 확실성을 담보받지 못한다. 명제들이 확실성을 담보받는 한에서는 그 명제들은 현실을 기술하지 않는다. \u0026hellip; 그러나 수학, 특히 그중에서도 기하학은 실제 대상물의 속성을 알려는 우리의 욕구에서 생겨났다는 점은 확실하다.\n수학이 진리의 본당이 아니라는 깨달음은 엄청난 반행을 불러왔다. 우서 과학에 끼친 영향부터 살펴보자. 갈릴레오 시대 이후로 과학자들은 최소한 200년 동안은 자신들이 찾아낸 원리가 자연의 설계에 내재되어 있다는 믿음을 견지하기는 했지만 과학의 기본 원리는 수학과는 달리 경험에서 도출되어야 한다는 점을 인식하고 있었다. 수학도 경험에서 그 원리를 도출해 내며 또 더 이상 그 원리들이 진리라고 주장하지 못한다는 점을 인식하게 되자 과학자들은 수학의 공리와 정리를 사용하는 한 과학 이론은 그보다 더 취약할 수밖에 없다는 사실을 깨닫게 되었다. 자연 법칙은 인간이 만들어 낸 산물이다. 하느님이 아니라 인간 자신이 우주에 질서를 부여한 것이다. 자연 법칙은 인간이 내세우는 설명이지 하느님이 규정한 질서가 아니다. p173\n윌리엄 제임스가 말했듯, \u0026ldquo;인간의 지적 생활이란 거의 전적으로 경험의 근원이 되는 지각 질서를 개념 질서로 바꿔 내는 과정\u0026quot;인 것이다. 그러나 개념적 질서가 지각 질서를 온전히 담아 내지는 못한다. 진리의 상실로 인류는 지식의 중심과 기준, 사상에서의 확립된 권위를 잃고 말았다. \u0026ldquo;인간 이성에 대한 자부심\u0026quot;은 추락했고 그 추락과 함께 진리의 전당도 파괴되었다. 역사가 남긴 교훈은, 의심할 여지가 없어 보이는 확고한 진리라고 해도 그것을 교조적으로 주장해서는 안 된다는 점이다. 확고한 진리로 여겨지는 것들이 실은 가장 의심스러운 것들이다. 그것들은 인류의 탁월함을 나타내는 것이 아니라 인류의 한계와 제약을 드러낼 따름이다. p176\n5장 논리적 주제의 비논리적 발전 우리는 슬퍼하지 않으리라. 우리에게 남겨진 것에서 힘을 얻으리니. - 워즈워드 지난 2000년 동안 수학자들은 자연의 수학적 짜임새를 매우 성공적으로 밝혀내고 있다고 믿었다. 그러나 이제는 수학 법칙이 진리가 아니라는 사실을 인식해야 하는 상황이 되었다. 자연과학의 수학 법칙들은 놀라울 만큼 정확했기 때문에 수학적 논증에 대한 일부 이견이 있었지만 철저히 무시되었다. 무슨 일이 일어났기에 자신들이 사용하고 있는 추론에 본질적인 결함이 있다는 사실을 어떻게 알게 된 것일까? 19세기 초엽에 미적분학의 엄밀성에 대한 비판이 일었다. 이 비판을 제대로 반박하지 못하면서 일부 사람들은 이미 동요하기 시작했다. 하지만 진리에 대한 주장을 포기하게 한 것은 수학자 스스로 만들어 낸 창보물, 바로 비유클리드 기하학과 사원수였다. 이 창조물로 인해 수학자들은 심각한 논리상의 난점에 직면하게 된다. p181 이렇게 그리스 인들은 서로 상이한 두 가지 수학 분야를 후세에 남겨 놓았다. 한쪽에는 다소 결함이 있기는 하지만 연역적이고 조직적인 기하학이 있고, 다른 한쪽에는 경험적인 산술과 그것을 확장하여 얻은 대수학이 있었다. 고대 그리스 인들이 수학적 결과는 명백한 공리에서 연역적 방법으로 얻어 내야 한다고 여겼던 사정을 생각해볼 때, 논리적 구조를 지니지 않은 독립된 산술과 대수학의 출현은 수학 역사상 가장 큰 이변 가운데 하나일 것이다. p195 인도 및 아라비아 수학에서 가장 흥미로운 특성은 수학에 대해 갖고 있는 그들의 개념이었다. 이집트 인들과 바빌로니아 인들이 경험을 근거로 하여 산술 및 기하학 규칙을 기꺼이 받아들였다는 점은 전혀 놀랄 만한 일이 아니다. 경험이야말로 거의 모든 인간 지식의 자연스러운 근거이기 때문이다. 그러나 인도인과 아라비아 인은 그리스 인이 제시한 수학적 증명이라는 새로운 개념을 알고 있었다. 그렇지만 산술과 대수에서 그들은 연역적 증명에 전혀 주의를 기울이지 않았다. p199 인도인들과 아리비아 인들은 산술과 대수, 그리고 삼각법의 대수적 관계식을 선호했다. 이러한 경향은 상이한 의식 구조에서 연유된 것일 수도 있고 아니면 문명의 요구에 대한 응답으로 표출된 것일 수도 있다. 두 문명 모두 실용적인 경향을 지니고 있었고 알렉산드리아 시대의 그리스 인들과 관련해 실용적 필요성은 계량적 결과를 요구하는데, 바로 산술과 대수학이 이러한 계량적 결과를 제공해 준다. p200 대다수의 수학자들은 실용 목적으로 대수학을 자유로이 사용했다. 대수학은 모든 종류의 실용 문제를 다룬다는 점과 기하학적 문제를 다룰 때에도 대수학이 더 효율적이라는 점이 명백해지면서 수학자들은 대수학의 세계에 몸을 담그게 되었다. p219 어떻게 그리스의 연역 기하학에 익숙한 유렵인들이 논리적으로 불안정한 여러 유형의 수와 대수를 거리낌 없이 이용하고 적용할 수 있었을까? 첫째는 자연수와 분수의 성질을 받아들이는 근거는 분명코 경험이었다. 기하학이 사용되었어도 음수, 무리수, 복소수에 대한 논리적 기초를 제공해 주지 못했다. 분명히, 4차 방정식의 해법 같은 경우는 기하학적으로 증명해 내기 불가능했다. 두 번째로 대수학 성립 초기, 나름의 논리적 기초가 요구되는 독립된 수학 분야로 인정받지 못하고 기하학적인 문제를 분석하는 한 방법으로 여겨졌다. 그러나 데카르트의 해석기하학은 수학자들에게 대수학의 강력한 힘을 각인시킨 결정적 도구가 되었다. 마지막으로, 음수 및 무리수의 사용과 대수학의 사용으로 얻은 과학 연구 결과는 관찰 및 실험 내용과 완벽하게 일치했다. 예컨대 수학자들이 음수를 도입하면서 가지게 된 의구심은 수학적 결과가 물리적으로 타당하다고 입증되자 눈 녹듯 사라져 버렸다. 과학에의 응용이 주요 관심사였기 때문에 그 방면에서 효용성을 보이는 수단이나 도구는 거리낌 없이 채택되었다. 과학의 실용적 요구가 완벽함을 추구하는 논리적 요구를 압도했다. p221 6장 비논리적 발전: 해석학이라는 수렁 누구나 어떤 방향으로든 우선 연구를 시작해야 한다. 그리고 시작은 항상 불완전하며 또 실패로 마무리되는 일이 많다. 꼭꼭 숨겨져 있어 모든 길을 다 가 본 후에야 최선의 길을 찾아낼 수 있는 그런 진리들이 있다. 사람들에게 올바른 길을 보여 주기 위해서는 누군가가 반드시 잘못된 길로 들어설 위험을 감수해야 한다. 우리는 진리에 도달하기 위해서는 반드시 먼저 오류를 경험해야 하는 운명을 타고난 존재들이다. - 드니 디드로 논리적 기초가 결여된 산술 및 대수학, 그리고 다소 불안정한 기초를 지닌 유클리드 기하학. 수학자들은 이 두 가지 위에 해석학을 건설했다. 해석학의 핵심 내용은 미적분학이며, 미적분학은 가장 정교한 수학 이론이다. 우리는 앞에서 비교적 단순한 분야인 대수학에서 여러 결함을 목격했다. 이와 비교해 볼 때, 미적분학의 개념을 밝히고 논리적 구조를 세우는 일은 수학자들에게 만만치 않은 지적 부담감을 안겨 주었을 것이다. p227 미적분학의 논리적 기초는 여전히 모호한 상태로 남아 있었다. 뉴턴의 연구를 지지하는 사람들은 계속해서 궁극적 비를 언급했고 그 반면에 라이프니츠의 추종자들은 무한소와 무한히 작지만 0은 아닌 양을 사용했다. 이렇게 접근 방식이 서로 상이했기 때문에 적절한 논리적 기초를 세우는 일은 그만큼 더 어려워졌다. p247 혼한과 불안과 적의에도 불구하고 18세기의 위대한 수학자들은 미적분학을 크게 확장했을 뿐만 아니라 이로부터 완전히 새로운 분야를 탄생시켰다. 무한 급수, 상미분방정식과 편미분방정식, 변분법, 복소함수론 등, 오늘날 수학의 핵심을 이루는 분야가 탄생했는데 이 모든 것을 통틀어 해석학(Analysis)이라는 이름이 붙었다. p248 뉴턴, 라이프니츠, 베르누이 일가, 오일러, 달랑베르, 라그랑주, 그리고 그 밖의 18세기 학자들이 무한 급수라는 이상스러운 문제와 씨름하고 또 해석학에 수용하면서 온갖 종류의 터무니없는 실수를 저질렀고 잘못된 증명과 옳지 않은 결론을 내놓았다.p250 \u0026ldquo;종교 문제에 대해서는 그토록 까다로운 수학자들이 과연 자신들의 학문에서도 그런 엄밀함을 유지하는가? 그들 역시 권위에 굴복해 따져 보지도 않고 받아들이거나 믿을 수 없는 것을 덮어 놓고 믿고 있지는 않은가? 그들에게는 과연 미몽이 없으며 자가당착과 모순은 없는가? \u0026quot; 버클리 p264 \u0026ldquo;우리 학술원으로 다수의 논문이 접수되었으나 만족할 만한 응답을 얻어 내지 못했다고 생각한다. 하지만 \u0026lsquo;무한은 인간 정신을 삼켜 버린 심연이다\u0026rsquo; 라는 부제를 단 프랑스 어 논문의 저자가 우리 학술원의 의도에 가장 근접해 있다. 따라서 우리 학술원은 그에게 상을 수여하기로 결정했다.\u0026rdquo; 베를린 과학학술원 볼테르는 미적분학을 두고 \u0026ldquo;존재하는지 확인할 수도 없으면서도 그것을 셈하고 측정하는 기법\u0026quot;이라고 했다. p266 7장 비논리적 발전: 1800년경의 상황 오, 신이시여, 왜 둘에 둘을 더하면 넷이 되어야 합니까? - 알렌산더 포프 1800년이 되면서 수학은 매우 역설적인 상화을 맞게 되었다. 물리 현상의 설명과 예측에서는 기대 이상의 성과를 거두었다. 하지만 다른 한편으로 다수의 18세기 사람들이 지적했듯이 이 거대한 구조물은 노리적 기초를 갖추지 못하고 있었다. 따라서 수학이 올바르다고 확신할 수 없었다. 이러한 역설적 상황은 19세기 전반까지 계속되었다. 수많은 수학자들이 새로운 과학 영역에 손을 대어 더욱 위대한 성공을 거두었지만 논리적 기초에 대해서는 노ㅕㄹㄱ을 기울이지 않았다. 오히려 음수와 복소수, 대수학, 미적분학과 해석학에 대한 비판이 계속되었다. p271 피콕이 주장한 동등 수식 불변의 원리는 본질적으로 자의적이었다. 그리고 이 원리는 왜 다양한 유형의 수들이 자연수와 같은 성질을 갖느냐 하는 문제를 낳았다. 경험적으로는 옳지만 논리적으로는 확정되지 않은 사실에 의거한 원리였던 것이다. 버클리가 말했듯이, \u0026ldquo;오래되고 뿌리 깊은 편견이 원리로 통용되는 일이 적지 않다. 그리고 그 원리에 근거를 두고 있는 주장들과 명제들은 어떤 검토나 이의제기로부터 면제된다.\u0026rdquo; p281 수학자들은 이제 현실 세계에서 아이디어를 끄집어내 추상화하는 것이 아니라 개념을 창출해 내는 역할을 맡게 된 것이다. 이전에는 아이디어의 근원을 감각으로 돌렸으나 이제는 지적 능력이 그 근원이라고 주장하기 시작했다. 이러한 개념들이 응용에서 더욱더 쓰임새가 넓다는 사실이 밝혀지자, 처음에는 마지못해 받아들였으나 어느덧 그 개념들에 친숙해지면서 경멸감보다는 무비판적 태도와 자연스럽게 여기는 마음이 생겨났다. 1700년 이후로 자연이 아니라 인간정신에서 솟아난 개념들이 수학 영역으로 들어왔고, 또 별다른 거부감 없이 그 개념들이 받아들여졌다. 수학자들은 스스로 만들어 놓은 날개를 달고 단단한 대지로부터 유리된 위치에서 수학이라는 학문을 바라다보게 된 것이다. p293 그렇다면 어떻게 수학자들은 어디로 향해야 할 것인지 알았는가? 또 어떻게 감히 증명을 강조하는 전통이 있는데도 규칙을 단순 적용해 얻은 결론의 타당성을 주장할 수 있었던 것일까? 물리학 문제의 해결이 목표를 설정해 주었다는 점은 의심할 여지가 없다. 일단 물리학 문제가 수학적으로 정식화되고 나자 새로운 기법이 생겨났고 또 새로운 방법론과 결과 출현했다. 수학이 지니는 물리학적 의미가 수학의 발걸음을 인도해 주었으며 또 종종 추론 과정을 보완해 주기도 앴다. p294 물리학 문제의 정수를 수학으로 형상화하고 나자 수학자들, 그 중에서도 특히 18세기 수학자들은 수식에 매료되었다. 기호에 대한 집착은 이성을 압도하고 마비시켰다. 수학사에서 18세기는 영웅 시대라고 불리는데, 그 이유는 수학자들이 부실한 논리적 무기를 가지고 위대한 과학적 성과를 이룩했기 때문이다. p294 하지만 여전히 의문은 남아 있다. 미적분학의 개념이 모호하고 또 증명도 적절하지 못하다는 점을 잘 알면서도 수학자들, 특히 18세기 수학자들이 자신의 연구 결과가 올바르다고 확신할 수 있었던 이유는 무엇일까? 부분적인 답은 많은 결과들이 경험과 관착을 통해 그 타당성을 확인 받았다는 사실에서 찾을 수 있다. 두드러진 사례가 바로 천문 예측이었다. p295 17세기와 18세기 수학자들에게 자신의 연구 결과가 옳다는 확신을 가져다 주었다. 수학자들이, 하느님이 세상을 수학적으로 설계했으며 수학자는 그 설계를 발견하고 또 그것을 드러낸다고 확신했다는 것이 그것이다. 이 때의 수학자들이 발견한 것은 단편이었지만 그들은 그것이 진리의 일부분이라고 생각했다. 하느님이 만든 작품을 발견해 나가고 있으며 마침내 완전하고 연원한 진리의 약속된 땅에 다다르게 될 것이라는 믿음은 그들의 영혼을 지탱해 주고 용기를 북돋워 주었다. 풍성한 과학적 성과는 만나가 되어 그들의 정신에 자양분을 제공하고 생명을 유지시켜 주었다. p295 과학적 증거에 따라 지지되는 종교적 확신이 허약한 논리, 또는 아예 존재하지 않는 논리적 힘을 대체했다. 그들에게는 하느님의 진리를 확보하려는 열망이 너무도 강했기 떄문에 논리적 기초 없이 연구를 계속해 나갔다. 성공으로 인해 그들의 분별력은 약화되었다. 성공의 열매가 너무도 달콤해 이론과 엄밀성은 염두에 두지 않았다. 때때로 철학적이거나 신비주의적인 독단론이 등장하여 어려움의 실상을 가렸기 때문에 더 이상 눈에 띄지 않게 되었다. p296 사람들 가운데는 슬픔을 술로 달래는 것으로 만족하지 못하는 사람들이 있다. 마찬가지로 수학자들 가운데는 물리학적 성공에 도취되는 것으로는 수학의 비논리적 상태에 대한 우려를 달래기 어려운 사람들이 있었다. 하느님의 계획을 발견해 내고 있다는 믿음이 얼마간 위안을 주었지만 18세기 후반 들어 그러한 믿음을 포기하면서 그 위안도 소용없게 되었다. 그런 지지와 성원이 사라지자 그들은 자신들의 성과를 재검토해야 할 필요성을 느꼈다. 이렇게 해서 그들은 모호함, 증명의 부재, 기존 증명의 부적절함, 모순, 그리고 혼란을 보았다. 그들은 수학이 그동안 얻고 있던 명성과는 다르게 이성의 모범이 되지는 못한다는 사실을 깨달았다. 이성의 자리에는 직관, 기하학적 도형, 물리학적 논증, 동등 수식 불변의 원리, 형이상학에 의존한 정당화 등이 자리를 차지하고 있었다. p298 8장 비논리적 발전: 낙원의 문턱에 서다 이제 완벽한 엄밀성이 이루어졌다고 말할 수 있다. - 앙리 푸엥카레 수학에서 이른바 비판 운동을 시작한 사람들은 수학자들이 지난 2000여 년 동안 직관, 그럴싸한 주장, 귀납적 추론, 기호들의 기계적 조작 등으로 점철된 광야 속에서 방황해 왔음을 깨달았다. 그들은 수학에서 논리적 기초가 전혀 없는 곳에는 적절한 논리적 기초를 세우고, 모호한 개념과 모순을 제거하고, 유클리드 기하학처럼 논리적 기초가 이미 마련되어 있는 곳은 그 기초를 더욱 공고히 하자고 제안했다. 이러한 계획은 1810년대에 시작되었다. p303 수학이 왜 이렇듯 눈부시게 자연 연구에 응용될 수 있는지 설명할 수는 없었지만, 어느 누구도 그 뛰어난 응용력을 부정할 수 없었으며 또 그토록 강력한 도구를 감히 내버리지 못했다. 이런 힘이 논리적 난점이나 모순 때문에 약화되어서는 곤란했다. 더구나 수학자들은 논리적 타당성을 경시했다는 점에서 스스로 세워 놓은 원칙을 어겨왔지만 그렇다고 하더라도 실용성이라는 기준으로 수학을 판단하도록 놓아두고 싶지는 않았다. 그들의 위신은 크게 추락할 위기에 직면해 있었다. 그들은 자신들의 숭고한 정신 활동과 땅을 파는 기술자나 장인의 활동을 구별해 줄 근거를 마련해야 했다. p304 수학자들은 미적분학의 논리를 세우는 것부터 시작했다. 미적분학은 실수 체계와 대수학을 전제로 하여 출발하고 있는데, 이 두 가지 모두 논리적 기초를 결여하고 있었다. 따라서 이런 불합리한 모습은 다음과 같은 상황에 비유할 수 있었다. 50층짜리 사무용 빌딩이 입주자들과 가구, 그리고 갖가지 설비로 가득 차자 소유주는 빌딩의 안전에 문제가 있다고 판단해 건물을 개축하기로 했다. 그런데 그는 20층에서부터 개축하려고 한다. 이유는 다음과 같다. 사실, 유클리드 기하학은 2000년 동안이나 유용하게 활용되었기 때문에 논리가 다소 허술해도 충분히 용인되었다. 그러나 해석학의 원류인 미적분학은 분야도 광대한 데다가 엉성한 증명, 역설, 그리고 모순까지 등장했을 뿐만 아니라 모든 결과가 실용적 가치를 지녔던 것도 아니었다. p304 수 체계의 기초 확립은 대수학 기초 문제 해결이라는 부수적 결과를 낳았다. 문자들을 마치 양의 정수처럼 자유로이 조작했을 때 문자들에 실수나 복소수를 대입해도 여전히 그 결과가 성립되는 이유는 무엇일까? 그것은 바로 다른 유형의 수들도 양의 정수와 동일한 형식적 성질들을 지니고 있기 때문이다. p314 논리학이란 학문은 아리스토텔레스의 책 \u0026lt;오르가논:기원전 300년경\u0026gt;에서 시작되었다. 그는 수학자들이 사용하는 추론의 원리를 살펴서 이로부터 핵심 내용을 추상화했고, 이렇게 해서 얻은 원리들은 모든 추론에 적응할 수 있다고 말했다. 예컨대 그런 기본 원리 가운데 하나가 배중률이다. 배중률은 의미 있는 모든 진술은 참이거나 아니면 거짓이라고 선언하고 있다. 아마도 아리스토텔레스는 배중률을 \u0026ldquo;정수는 홀수이거나 짝수이다.\u0026ldquo;와 같은 수학 명제에서 추출해 냈을 것이다. 그리고 주로 삼단논법이 아리스토텔레스의 논리학을 구성하고 있다. p319 수학의 무모순성 문제는 그리스 시대ㅐ에도 이미 다루어졌다. 그런데 왜 19세기 후반에 그 문제가 전면으로 떠오른 것일까? 비유클리드 기하학의 탄생으로 사람들은 수학이 인간의 창조물이며 실제 세계에서 일어나는 일을 근사적으로만 기술한다는 사실을 깨닫지 않을 수 없었다. 자연 현상을 기술하는 데에는 괄목할 만한 성공을 거두었지만 우주의 내적 구조를 드러내지 못한다는 점에서 진리라고 할 수 없었고, 따라서 반드시 무모순이라는 보장이 없었다. 실제로 19세기 후반의 공리화 운동은 수학자들로 하여금 자신들과 실제 세계 사이에 커다란 괴리가 있음을 깨닫게 했다. 모든 공리 체계에는 무정의 술어가 있고 그 무정의 술어의 속성은 오직 공리를 통해서만 규정된다. 직관적으로는 수, 점, 직선에 대한 의미를 마음속에 지니고 있지만 이러한 술어들의 의미는 고정되어 있지 않다. 공리가 이들의 속성을 고정해 주어 우리가 직관적으로 결부시키는 속성을 갖게 해 준다. 그러나 과연 그렇게 했다고 확신할 수 있을까? 또 원하지 않은 속성이나 모순을 낳는 속성이 부여되지 않았다는 것을 확신할 수 있을까? p336 9장 실낙원: 이성의 새로운 위기 수학에서는 진정한 노란이란 없다 - 가우스 논리학이란 확신을 갖고 오류를 범하는 기술이다. - 무명씨 칸토어의 집합론은 다른 여러 수학 분야에도 널리 쓰이게 되었다. 또 수학자들은 칸토어와 데데킨트는 집합론이 자연수 이론을 세우고 곡선 및 차원의 개념을 분석하는 데 유용하게 활용될 수 있으며 심지어 모든 수학 분야의 기초로도 사용될 수 있다는 사실을 깨달았다. \u0026hellip; 그는 얼마든지 큰 초한 집합이 있고 또 거기에 대응하는 초한수(transfinite number)가 있음을 보였다. 1895년에 칸토어는 모든 집합들의 집합에 대해 생각했다. 그 집합의 원소 개수는 존재하는 수 가운데 가장 큰 수일 수밖에 없다. 하지만 칸토어는 주어진 집합의 부분 집합으로 이루어진 집합의 초한수가 본래 집합의 초한수보다 크다는 사실을 증명했다. 따라서 최대 초한수보다 더 큰 초한수가 존재할 수밖에 없다. 칸토어는 이 난점을 피하기 위해 이른바 무모순 집합과 모순 집합을 구분했다. 그리고 1899년에 데데킨트에게 보낸 편지에 그 내용을 썼다. 즉 모든 집합의 집합이나 그 원소 개수를 논의의 대상으로 삼을 수 없다는 것이었다. p354 러셀의 역설은 집합에 대한 것이다. 책들의 집합은 책이 아니며, 따라서 자기 자신에 속하지 않는다. 그러나 관념들의 집합은 그 자체가 하나의 관념이므로 자기 자신에 속한다. 또 목록들의 목록은 그 역시 목록이다. 이렇게 어떤 집합은 자기 자신에 속하고 또 어떤 집합은 자기 자신에 속하지 않는다. 러셀이 이 역설을 처음으로 발견했을 때 난점은 수학 자체가 아니라 논리학 어딘가에 있다고 생각했다. 그러나 이 역설은 바로 대상물들의 집합이라는 개념과 직접적인 관련이 있었다. 그리고 집합이라는 개념은 수학 전체에 널리 쓰이는 개념이었다. 힐베르트는 이 역설이 수학에 파국적인 영향을 가져온다고 주장했다. p360 러셀은 1918년에 이율배반을 일반인들이 이해할 수 있는 형태로 표현해 냈는데, 이는 \u0026lsquo;이발사의 역설\u0026rsquo;이라는 이름으로 알려져 있다. 어느 마을 이발사는 스스로 면도를 하는 사람에게는 면도를 해 주지 않지만 스스로 면도를 하지 않는 사람들은 빠짐없이 면도를 해 준다. 그 마을에 이발사는 오직 그뿐이다. 그런데 어느 날 그 이발사는 스스로 면도를 해야 할 것인지 의문이 생겼다. 만일 자신이 스스로 면도를 하려 한다면 스스로 면도하는 사람에게는 면도를 해 주지 않겠다고 했으므로 규칙을 깨는 게 된다. 그러나 만일 스스로 면도를 하지 않는다면 그런 사람에게 면도를 해 주겠다고 했으므로 면도를 해야 한다. 이발사는 논리적 곤경에 빠진 것이다. p360 역설과 관련된 재귀 서술 정의가 역설을 결과로 내놓지는 않는다. 하지만 수학자들은 모든 재귀 서술 정의가 꼭 모순을 낳지는 않는다는 사실 때문에 당혹감을 느꼈다. \u0026hellip; 불행히도 어떤 재귀 서술 정의가 문제를 일으키고 또 어떤 것이 그렇지 않는지 결정하는 기준은 없다. 따라서 모순을 결과로 내놓는 재귀 서술 정의가 더 많이 발견될 위험성이 있었다. p365 모순의 주요 요인은 명확해 보였지만 그런 모순들을 없애기 위해서 수학을 어떻게 건설해야 할 것인가 하는 문제와 또 새로운 모순이 생기지 않도록 하려면 어떻게 해야 하는가 하는 더욱 중요한 문제는 여전히 해결되지 않은 상태로 남아 있었다. 수학자들은 모순을 집합론의 역설로 돌렸다. 하지만 집합론에서의 연구 성과 덕분에 그들은 기존 수학에서도 모순이 있을 수 있음을 깨닫게 되었다. 견고한 수학의 기초를 확립하려는 노력에서 무모순성을 확보하는 일은 가장 해결하기 어려운 문제가 되었다. p366 플라톤주의자들은 관념을 인간과는 무관한 어떤 객관적 세계에 존재한다고 믿었다. 인간이 이러한 관념을 발견했거나, 플라톤의 표현을 빌리면, 그 관념들을 상기해 냈다고 주장했다. p374 존재 문제의 다른 측면은 존재 증명의 가치였다. 예컨대 가우스는 실수 계수나 복소수 계수를 갖는 n차 방정식은 한 개 이상의 근을 가진다고 증명했다. 하지만 이 증명은 근을 어떻게 구하는지는 보여주지 않는다. p375 훨씬 더 중요한 것은, 1800년대 말에는 분명하게 표명되지는 않았지만, 많은 수학자들이 논리학 원리를 제한 없이 적용하는 데에 대해 의구심을 느끼기 시작했다는 사실이다. 무한 집합에도 논리학 원리를 적용할 수 있는 근거는 무엇인가? 논리학 원리가 인간 경험의 산물이라면 경험에 바탕을 두고 있지 않은 심적 구성물에까지 확장할 수 있는 이유는 무엇인가 하는 문제는 논락ㄴ의 여지가 있을 수밖에 없었다. p376 여러 해가 지나고 수학자들은 모순이 발견되기 이전의 짧았지만 행복했던 시적을 되돌아보게 된다. 그때를 되돌아보며 뒤부아레몽은 당시를 \u0026ldquo;우리가 낙원에 살았던 시절\u0026rdquo; 이라고 묘사했다. p376 10장 논리주의 대 직관주의 기호논리학은 불모의 분야가 아니다. 기호 논리학은 바로 이율배반을 낳았다. - 앙리 푸앵카레 집합론에서 역설들이 발견되고, 유사한 역설이 기존 수학에서도 발견될 수 있다는 점을 인식하면서 수학자들은 무모순성 문제를 심각하게 받아들이게 되었다. 존재한다는 말이 무엇을 의미하는가 하는 문제는 특히 선택 공리 사용과 관련해 제기되었는데, 이 역시 격렬한 논쟁거리가 되었다. 기초를 다시 세우고 새로운 분야를 만들어 내는 과정에서 무한 집합의 사용이 늘어났고, 그에 따라 실제 무한 집합이 합당한 개념이냐를 두고 벌였던 해묵은 논쟁이 다시 전면에 등장했다. 19세기 공리화 운동은 이 문제들을 다루지 않았다. p379 논리학파의 기본 주장을 간단히 요약하자면 수학의 모든 것은 논리학으로부터 도출될 수 있다는 것이었다. 1900년대 초에 논리학 법칙은 대다수 수학자들에 의해 진리로 받아들여지고 있었다. 따라서 논리학자들은 수학 역시 진리라고 주장했다. 그리고 진리는 무모순이므로 수학도 무소순일 수밖에 없다고 주장했다. p380 만일 수학의 내용이 순전히 논리학으로부터 도출될 수 있다면 어떻게 새로운 개념이 수학으로 들어오고 또 수학이 물질 세계에 응용되는 일이 어떻게 가능하느냐 하는 질문에 쉽게 답할 수 없게 된다. 러셀이이나 화이트헤드도 이에 대해 답을 내놓지 않았다. 논리주의는 수학이 물질 세계와 합치되는 이유를 설명하지 못한다는 주장은 기본 물리학 원리에 수학이 적용된다는 사실을 들어 반박할 수 있다. 물리학자들은 pv = nRt나 F = ma 같은 물리학 원리에서 수학이라는 도구를 이용해 명제를 이끌어 낸다. 그런데 이렇게 이끌어 낸 결론은 여전히 물질 세계에 적용된다. 그런데 여기 문제가 하나 있다. 왜 세계는 수학적 추론을 따르는 것일까? p398 \u0026ldquo;내가 항상 수학에서 찾고자 했던 드높은 확실성은 당혹스러운 미로 속에서 행방불명되었다. 그것은 참으로 복잡하기만 한 개념의 미로이다.\u0026rdquo; - 러셀 p401 논리학이 진리의 집합체이고 따라서 논리학 위에 수학을 세우면 수학 역시 진리의 집합체가 될 것이라고 믿었다. 반면에 같은 목표를 추구한 직관주의자는 인간 마음에 호소함으로써 수학의 참됨을 확보하고자 했다. 논리학 원리로부터 유도된 명제는 직접적 직관으로 얻어 낸 명제에 비해 신뢰성이 떨어진다. 역설의 발견은 이러한 불신을 확인해 주었을 뿐만 아니라 직관주의의 형셩을 가속화했다. p402 차츰차츰 맹신과 오류를 사실로부터 제거해 내고 진리에서 망상을 없앤다. 그렇게 남겨진 것을 부여잡고 굶어죽는다.\n사무엘 호펜슈타인 (시인) 419p 제 경우, 문어든 구어든 언어는 사고 메커니즘에서 별다른 역할을 하지 않는 듯 보입니다. \u0026hellip; 사고의 구성 요소가 되는 물리적 실체는 마음껏 재생할 수 있고 결합할 수 있는 표산과 어느 정도 선명한 이미지입니다. \u0026hellip; 제 경우, 위에서 언급한 요소들은 강렬한 시각적 형태를 취합니다. 부차적인 상태에서만 통상적인 언어나 여타의 기호를 열심히 찾아야 합니다.\n아인슈타인 423p 직관주의자들은 수학에 제약을 가했고 또 그들의 철학은 많은 비판을 받고 있다. 그러나 직관주의는 수학에 긍정적인 영향을 주었다. 애초에 선택 공리와 관련해서만 심각하게 논의되던 문제가 직관주의 덕분에 시급하게 해결해야 할 화두가 되었다. 그 문제란 수학적으로 존재한다는 말은 무엇을 의미하는가 하는 것이다. 바일이 물었듯이 특정한 성질을 갖는 수가 존재한다는 사실을 알지만 실제로 그 수를 계산해 내지 못한다면 과연 소용이 있는 것일까? 배중률을 별 생각없이 자유로이 확장하여 사용하는 것은 분명 재고가 필요해졌다. 직관주의의 성과 가운데 가장 가치 있는 것은, 존재하지 않는다고 가정하면 모순이 도출된다는 점을 보임으로써 존재성을 확립한 수나 함수에 대해서 그 값을 명확히 계산해 내라고 요구한 점이다. p424 11장 형식주의와 집합론 현대 수학의 광대함에 비춰 볼 때 직관주의자들이 얻어 낸 초라한 파편, 불완전하고 고립되어 있는 결과들이 과연 무슨 의미를 지닐 것인가? - 다비트 힐베르트 20세기의 첫 10년 동안에 수학 기초론에서 논리주이 철학과 직관주의 철학이 생겨나 서로 대척점에 서서 대립했다. 하지만 치열한 싸움은 이들로만 그치지 않았다. 형식주의라는 이름의 세 번째 학파가 힐베르트에 의해 만들어졌고, 또 집합론 학파가 체르멜로에 의해 생겨났다. 1900년 세게 수학자 대회에서 행한 강연에서 힐베르트는 수학의 무모순성을 증명하는 일이 중요하다고 강조했다. p429 직관주의 철학은 힐베르트에게 놀라움을 안겨 주었다. 왜냐하면 직관주의자들은 무한 집합을 배격했을 뿐만 아니라 존재 증명에 의존하는 해석학의 상당 부분도 받아들이지 않았기 때문이다. 그는 직관주의를 격렬하게 공격했다. p430 형식주의자들에게 수학은 형식 체계들의 모임이다. 각 체계는 수학적 내용과 더불어 각자의 논리학을 세워 놓고 있으며, 각자의 개념과 각자의 공리와 각자의 연역 법칙과 각자의 정리를 지니고 있다. 이러한 연역 체계의 전개가 수학의 임무이다. 이것이 바로 수학을 구성하기 위한 힐베르트의 계획안이었다. 하지만 공리에서 연역된 결과는 역설로부터 안전한가? p435 \u0026ldquo;우리가 무엇에 대해 말하고 있는지 결코 알지 못하거나 또는 말하는 바가 옳은지 알지 못하는 분야가 바로 수학이다.\u0026rdquo; - 러셀 \u0026ldquo;수학적 엄밀성을 어디에서 찾을 수 있느냐는 물음에 두 부류가 서로 다른 답을 내놓고 있습니다. 직관주의자들은 인간 이성에서 찾을 수 있다고 답합니다. 그런데 형식주의자들은 종이 위에서 발견할 수 있다고 주장합니다.\u0026rdquo; - 브라우베르 p441 1800년, 논리적 전개에서의 결함에도 불구하고 수학은 완벽한 학문이라는 칭송을 받았다. 수학은 절대 무오류의 의심할 수 없는 추론으로 결론을 확립하는 과학이며, 또 이렇게 얻어 낸 결론은 오류가 없을 뿐만 아니라 우리가 살고 있는 우주의 진리이기도 하고 또 일부 사람들이 주장하고 있듯히 모든 가능한 우주의 진리이기도 하다는 생각은 설득력을 잃었을 뿐만 아니라 참된 추론 원리에 대한 여러 기초론 학파들의 상충되는 주장으로 손상을 입었다. 인간 이성에 대한 자부심은 크게 꺾일 위기에 놓여 있었다. p448 12장 대재앙 지금 되돌아보면, 1930년대 수학의 기초는 그런대로 괜찮은 편이었다. 알려진 역설들은 이미 해결이 되었다. 하지만 두 가지 문제가 수학자들의 마음을 괴롭혔다. 가장 중요한 문제가 수학의 무모순성을 확립하는 것이었다. 알려진 역설은 해결했지만 새로운 역설이 나올 위험성은 여전히 있었다. 두 번쨰 문제는 이른바 완비성 문제였다. 일반적으로, 한 분야가 완비성을 갖추었다는 것은 그 분야의 개념들을 다루는 의미 있는 주장에 대해 항상 참 또는 거짓을 결정할 수 있을 만큼 공리들이 잘 갖추어져 있다는 뜻이다. p453 힐베르트는 자신이 만든 메타 수학 즉 증명 이론이 모든 수학 분야의 무모순성과 완비성을 확립해 낼 것이라고 확신했다. 그러나 바로 그 이듬해에 괴델은 판도라의 상자를 여는 또 다른 논문을 출간했다. [수학원리 및 관련 체계에서 형식적으로 결정될 수 없는 명제에 관하여]라는 제목의 이 논문은 놀라운 결과 두 가지를 담고 있었다. 두 결과 가운데 수학계에 더욱 큰 충격을 안겨 준 것은, 자연수의 산술을 포함할 정도로 큰 수학 체계의 무모순성은 논리주의, 형식주의, 집합론 등 여러 학파에서 채택한 논리학 원리로 확립되지 않는다는 것이었다. 이와 못지않게 놀라운 것이 이 결과의 따름정리(corollary)이다. 이 두 번쨰 결과를 괴델의 불완비성 정리라고 부르는데, 그 내용은 다음과 같다. 만일 자연수 이론을 포함하는 형식 이론 T가 무모순이면 T는 불완비하다. 이는 의미 있는 수론 명제 S가 있을 경우 S와 S의 부정 모두 그 이론 내에서 증명될 수 없다는 뜻이다. 그런데 S가 참이거나 아니면 S의 부정이 참이다. 따라서 수론에는 증명될 수 없는 참인 명제가 존재하고, 이 명제는 결정 불가능이 된다. 그의 공리는 무모순성을 얻기 위해 지불해야 하는 대가가 불완비성이라는 것을 이야기하고 있다. 설상가상으로 결정 불가능 명제 가운데 일부는 위에서 언급한 형식 체계의 논리를 초월하는 논증, 즉 추론 법칙으로 참임을 보일 수 있다. p458 괴델의 불완비성 정리는, 괴델이 사용한 것과 같은 방식으로 산술화될 수 있는 수학 공리 체계나 논리학 공리 체계는 수학의 모든 분야는 고사하고 한 가지 체계의 진리를 모두 포괄하기에 적합하지 않다는 주장을 하고 있는 것이다. 왜냐하면 그러한 공리 체계는 불완비하기 떄문이다. 이 체계들에 속하지만 그 체계 안에서는 증명될 수 없는 유의미한 명제들이 존재한다. 그렇지만 이 명제들은 비형식 논증으로 참임을 보일 수 있다. 공리화에 한계가 있다는 이 결과는 수학이 곧 공리화된 분야들의 집합체라는 19세기 견해와 극명한 대조를 이룬다. 괴델의 결과는 포괄적 공리화에 치명타를 안겨 주었다. 공리적 방법의 부적절성은 그 자체로는 모순이 아니지만, 수학자들, 그 중에서도 형식주의자들은 모든 참인 명제는 그 공리 체계 한에서 확립될 수 있다고 생각했기 때문에 충격을 받았다. p461 괴델의 불완비성 정리가 공리 체계는 해당 수학 분야에 속하는 모든 정리를 증명하기에 충분하지 못하다고 말하는 반면에, 뢰벤하임-스콜렘 정리는 공리 체계가 의도했던 것과는 완전히 다른 모델을 허용하게 된다고 말한다. 공리들은 모델을 제한하지 않는다. 따라서 수학적 실체를 공리체계 안에 오해의 가능성이 없도록 새겨 넣기란 불가능하다. 의도하지 않은 모델이 생기는 이유는 공리 체계에 무정의 술어가 들어 있기 떄문이다. p474 불완비성이 비정언성을 함의한다. 그러나 뢰벤하임-스콜렘 정리는 훨씬 더 극단적인 방식으로 정언성을 부정한다. 새로운 공리를 추가하지 않고서도 극단적으로 상이한 모델들이 존재함을 입증했다. p475 1900년 이후의 수학 기초론의 전개 과정은 당혹스러우며 현재 수학이 처해 있는 상황은 혼란스럽고 또 개탄스럽다. 진리의 빛은 더이상 나아가야 할 길을 밝혀 주지 않는다. 그 증명에 간혹 수정이 요구되기는 했지만 이성의 정점으로 여겨졌고 또 모은 이의 찬탄을 한몸에 받던 수학의 자리에 이제는 여러 수학 연구 방식들이 들어서서 서로 다투고 있다. p479 20세기 수학 기초론의 발전 과정은 다음과 같은 비유로 적절하게 요약될 수 있을 듯싶다. 라인 강둑에 수백 년 된 아름다운 성이 서 있다. 성 지하에 사는 부지런한 거미들이 거미줄로 거미집을 정교하게 지어 놓았다. 어느 날 세찬 바람이 불어 거미집이 부서졌다. 거미들은 미친 듯이 실을 뽑아 거미집을 고쳤다. 그것은 거미들이 성이 무너져 내리지 않게 지탱해 주는 것은 자기들이 지은 거미집이라고 생각했기 때문이다. p.482 13장 수학의 고립 나는 추상기하학 연구를 포기하기로 했다. 추상기하학에서는 정신 훈련만을 목적으로 하는 문제들만이 다루어지고 있다. 추상기하학 연구를 포기하기로 한 것은 자연 현상의 설명을 목표로 하는 새로운 기하학을 연구하기 위해서이다. - 르네 데카르트 수학의 역사는 찬란하게 빛나는 업적들로 가득하지만 동시에 재앙의 역사이기도 하다. 진리의 상실은 가장 큰 비극이다. 진리는 인간의 가장 귀중한 재산이며 한 조각의 진리를 잃는 것만으로도 슬픔을 안겨 주기에 충분하다. 인간 이성의 눈부신 진열장에 완벽한 구조물이 아니라 결함투성이에, 언제 모순이 튀어나올지 모르는 그런 진열물이 놓여 있다는 꺠달음은 수학의 위상에 또 다른 타격을 주었다. 하지만 고통의 원인은 그것만은 아니었다. 불길한 예감과 수학자들 사이에 이견은 지난 100년 동안 수학이 거쳐 온 연구 경향에 그 원인을 두고 있었다. 대부분의 수학자들은 바깥 세계에 눈을 닫고 수학 안에서 생겨나는 문제에 집중했다. 그들은 과학을 내동댕이쳤다. 이런 방향 전환은 흔히 응용 수학에서 순수 수학으로 눈을 돌린 것이라고 표현되고는 한다. p485 수학은 그 특유의 추상성 떄문에 한 번에 다양한 물리 현상을 기술할 수 있다. 예컨대 물결, 음파, 전파 모두 파동 방정식이라는 편미분 방정식 하나로 기술된다. 애초에 물결 연구에서 얻은 파동 방정식 자체를 연구하여 추가로 얻어 낸 수학적 지식은, 예컨대 전파연구에서 제기된 문제를 해결하는 데 유용하게 사용될 수 있다. 실제 세계의 문제들에 자극받아 만들어진 풍성한 연구 성과는 상이한 상황에서도 동일한 수학적 구조가 있음을 꺠달을 때 더욱더 강화되고 그 의미 또한 분명해진다. p486 수학만을 위한 수학이라는 순수 수학에 대한 비판은 베이컨의 \u0026lt;학문의 진보(1620년)\u0026gt;에서도 찾아볼 수 있다. 여기에서 그는 신비주의적이고 자기 충적적인 순수 수학을 \u0026ldquo;사물과 자연철학의 자명한 진리로부터 완전히 유리되어 있으며 오직 인간 정신에 수반되는 탁상공론과 명상의 욕구만을 채워 줄 따름이다.\u0026ldquo;라며 반대했다. p496 푸리에는 물리학 문제에 수학을 응용하려는 뜻을 열정적으로 표명했다. \u0026ldquo;자연에 관한 깊이 있는 연구는 수학적 발견의 가장 풍부한 보고이다. 자연을 깊이 연구하면 명확한 목표 설정이라는 긍정적 효과뿐만 아니라 모호한 문제와 무익한 계산을 없애는 이점도 얻는다. 수학은 분석 자체를 구성해 내는 수단이며, 과학이 항상 추구해야 할 중요한 아이디어의 발견 수단이다. 기본이 되는 아이디어는 자연 현상을 그려내는 것들이다. \u0026hellip; 수학적 분석은 이러한 현상 안에 숨어 있는 법칙들을 포착해 낼 수 있게 해 준다. 수학은 이런 현상들을 분명하게 파악하게 하고 또 측정할 수 있게 한다. 수학이야말로 짧은 삶과 불완전한 감각을 보완해 주는 인간 이성의 능력이라고 생각된다. 그리고 더욱 주목할 만한 것은 모든 현상을 연구할 때 수학은 동일한 방법을 따른다는 사실이다. 수학은 마치 우주의 계획이 지니는 통일성과 간결성을 증명하려는 듯, 또 자연 만물을 다스리는 불변의 질서를 더욱 명료하게 하려는 듯, 이 현상들을 동일한 언어로 해석해 낸다. p497 푸엥카레는 \u0026lt;과학의 가치\u0026gt;에서 다음과 같이 말했다. \u0026ldquo;과학의 역사를 완전히 망각하지 않는 이상, 자연을 이해하려는 욕구가 수학 발전에 가장 중요하고 가장 축복할 만한 영향을 끼쳤다는 사실을 기억하지 않을 수 없다. \u0026hellip; 외부 세계의 존재를 잊는 순수 수학자는, 색채와 형태를 조화롭게 결합할 줄 알지만 그릴 모델을 찾지 못하는 화가와도 같다. 그런 사람의 창조적 힘은 곧 소진되고 만다.\u0026rdquo; p499 클라인은 다음과 같이 말했다. \u0026ldquo;우리 시대의 수학은 평화로운 시기에 가동되고 있는 거대한 무기 공장과 비슷해 보인다. 진열장을 가득 채운 뛰어난 솜씨의 퍼레이드가 전문가의 이목을 사로잡는다. 그러나 이런 물품을 필요로 하는 진정한 이유와 목적, 즉 전투를 해서 적을 물리치는 일은 의식의 한구석으로 물러나 아예 망각의 늪으로 사라졌다.\u0026rdquo; p500 1939년에 쿠란트는 이렇게 썼다. \u0026ldquo;수학은 정의와 공준에서 이끌어 낸 결론들의 체계에 불과하며, 공준이 무모순이어야 한다는 조건을 위배하지 않는 범위에서 수학자들이 자유롭게 만들어 낼 수 있다는 주장은 과학 자체에 심각한 위협이 되고 있다. 만일 수학이 그러하다면 지적인 사람 가운데 수학에 관심을 기울일 사람은 없을 것이다. 수학은 동기나 목표가 없이 정의, 규칙, 삼단논법 등을 가지고 유희를 벌이는 게임에 불과할 것이다. 지성이 의미 있는 공리 체계를 자유로이 만들어 낼 수 있다는 생각은 사람들을 오도할 수 있는 반쪽짜리 진리일 따름이다. 유기적인 전체를 고려하는 자세를 취할 때, 그리고 내적 필요에 부응할 때에만 자유로운 마음은 과학적 가치를 지니는 결과를 성취해 낼 수 있다. p501 수리물리학자인 존 싱은 다음과 같이 말했다. \u0026ldquo;소수 집단은 다수 집단의 성과를 폄하하려 하지는 않지만 수학 자체를 위한 수학이 곧 수학 자체를 고시키지 않을까 우려하고 있다. 수학이 미래에 끼칠 영향을 차치하더라도 수학자들의 고립으로 여타의 과학들은 든든한 후원자를 잃는 피해를 입었다. \u0026hellip; 그는 예전과 마찬가지로 열심히 일하고 있다. 하지만 이제는 자기 자신을 위해 일하고 있을 따름이다. \u0026hellip; 물리학은 수학과 더불어 시작되었고 수학이 물리학에서 사라진 후에도 (만약에 사라진다면) 오랫동안 물리학은 없어지지 않을 것이다. 100년 뒤에는 엄청난 양의 사실을 수집하고 발견하는 더욱 크고 더욱 훌륭한 실험실들이 생겨날 것이다. 그렇게 수집된 사실들이 그저 사실 차원에 머물지, 아니면 과학이 돌리는 수학의 정신과 얼마만큼 접촉되게 하느냐에 달려 있다. p504 애초에 순수 수학으로 생겨났지만 이후에 응용 가능성이 확인되었다고 여겨지던 분야들이 그 역사를 살펴보면 실제로는 물리학 문제나 물리학 문제와 직접 연관된 주제를 연구하는 과정에서 생겨난 것들이다. 애초에 물리적 문제 해결이라는 동기에서 출발한 수학이 미처 예측하지 못했던 분야에서 응용되는 경우가 자주 있다. 이렇게 수학은 과학에 신세를 갚는 것이다. 애초에 돌을 깨기 위해 만들었던 망치가 나무에 못을 박을 때에도 쓰인다고 해서 놀랄 이유가 있을까? 수학 이론이 기대하지도 않았던 곳에 응용되는 것은 그 이론이 애초에 물리 문제 해결을 위해 만들어졌기 때문이지 내면의 영혼과 씨름하는 현명한 수학자의 예언자적 통찰력 덕분은 절대 아니다. 수학 이론들이 계속해서 성공적으로 응용되고 있는 현상은 결코 우연이 아니다. p512 흔히 수학은 비옥한 땅에 굳건히 뿌리를 내리고 있는 나무로 비유된다. \u0026hellip; 흙을 완전히 없애면서 나무, 뿌리, 몸통, 상부 구조를 그대로 유지하려는 노력은 성공할 수 없다. 뿌리가 비옥한 토양 깊숙이 파고들 때에만 가지는 무성함을 자랑할 수 있다. 현실이라는 자양분을 받지 못하는 새 가지에 접을 붙이면 죽은 가지만을 얻을 따름이다. p517 폰 노이만은 수필 \u0026lt;수학자\u0026gt;에서 다음과 같이 지적했다. \u0026ldquo;수학에서 가장 훌륭한 영감이 누가 봐도 순수 수학 분야에 속하는 내용이라고 해도 자연과학에서 생겨났다는 점을 부인하기 어렵다. 내 생각으로는 수학에서 가장 특징적인 사실은 자연과학, 좀 더 일반적으로는 기술적 수준 이상으로 경험을 해석하는 과학과 매우 기묘한 관계에 있다는 것이다. p518 응용 수학자는 엄밀한 증명에 별다른 관심을 보이지 않는다. 자신들의 연구 결과가 물리적 사태와 합치되느냐 하는 것이 그들의 주요 관심사이다. p521 응용 수학의 문제는 물리적 현상에 의해 설정되고 응용 수학자들은 그 문제 해결을 시도하지만, 순수 수학자는 스스로 문제를 만들어 낸다. 그런 순수 수학자를 두고 응용 수학자들은, 어두운 골목에서 열쇠를 잃어버려 놓고 환해서 찾기 좋다며 가로등 아래로 옮겨 가 열쇠를 찾는 사람과 같다고 말한다. p522 응용 수학자는 이에 그치지 않고 또 다른 비유를 들어 순수 수학자들의 흠을 들춘다. 어떤 사람이 세탁물을 한 꾸러미 들고 세탁소를 찾고 있다. 그는 창문에 \u0026lsquo;세탁합니다\u0026rsquo;라는 간판이 내걸린 상점을 발견하고 안으로 들어가 카운터에 빨래 꾸러미를 올려놓는다. 상점 주인은 약간 놀란 표정을 지으며 \u0026ldquo;이게 뭡니까?\u0026ldquo;라고 묻는다. \u0026ldquo;세탁하려고 그러는데요.\u0026ldquo;라고 말하자. \u0026ldquo;여기서는 세탁 안 합니다.\u0026ldquo;라고 상점 주인이 대꾸한다. 이번에는 세탁물을 들고 들어온 사람이 당혹스러운 표정을 지으며 \u0026ldquo;저 간판은 뭡니까?\u0026ldquo;라고 묻자, 상점 주인은 \u0026ldquo;아, 우리는 간판만을 만듭니다.\u0026ldquo;라고 말한다. p522 과학으로부터의 유리는 20세기에 더욱 속도를 더해 갔다. 오늘날에는 수학자들에게서 과학으로부터의 독립 선언을 흔하게 듣고 또 읽는다. 수학자들은 조금의 망설임도 없이 수학 자체에만 관심이 있고 과학에는 아무런 관심이 없다고 거리낌 없이 말한다. 정확한 통계 자료는 없지만 오늘날 활동하고 있는 수학자 가운데 90퍼센트는 과학에 무지하며 또 그런 무지의 상태를 일종의 축복으로 여기며 유유자적하고 있다. p524 자연에 대한 이해와 지배에 도움을 주기 때문에 수학이 가치 있다는 사실을 완전히 망각하고 있다. 오늘날 대다수 수학자들은 자신의 연구 분야를 철저히 고립화해 아무나 범접할 수 없는 고상한 학문으로 만들기를 원한다. p526 이상주의자는 현실주의자가 되지 않는 이상 오랫동안 존속할 수 없고 현실주의자는 이상주의자가 되지 않는 이상 오햇동안 존속할 수 없다고 언젠가 탈레랑은 말했다. p528 작위적인 문제에 지나치게 관심을 기울이는 데에 모든 위험이 도사리고 있다. 만일 지금처럼 순수 수학을 강조하는 추세가 계속된다면 미래의 수학은 더 이상 과거와 같이 높은 가치를 부여받지 못한 채 허명만을 지니게 될 것이다. 수학은 인간이 만들어 낸 경이로운 창작물이다. 하지만 그 경이로움은, 파악하기 불가능해 보이는 복잡한 자연 현상을 이해가 가능한 모델로 구성해 내고 그로부터 지혜와 힘을 얻는 인간 정신의 능력에 있다. p528 14장 수학은 어디로 가는가 머리를 조아려라, 보잘것없는 너 이성이여 - 블레즈 파스칼 이집트 인들과 바빌로니아 인들은 자신들이 어떤 종류의 구조를 세우게 될지 전혀 내다보지 못했다. 따라서 그들은 기초를 탄탄하게 다지지 않았다. 기초를 다지지 않은 채 땅거죽 위에 곧바로 수학을 세워 올렸다. 당시 사람들은 땅을 깊이 파고 기초를 세우지 않아도 충분하다고 생각했다. 구조물을 세우는 데 사용된 재료들, 즉 수와 도형에 대한 사실 명제들은 직접적 경험에서 도축된 것들이었다. 수학이 그러한 역사적 기원을 갖고 있다는 사실은 지금까지 사용하고 있는 기하학이란 단어에서도 엿볼 수 있다. 기하학, 즉 geometry는 땅을 측정한다는 뜻이다. p533 수학자들이 수학의 무모순성을 입증하지 못하면서 이상적 학문으로 여겨지던 수학은 그 권위에 큰 손상을 입었다. 유일하고 엄밀한 논리적 구조가 아니라면 수학이란 과연 무엇인가? 수학이란 사람들이 언제라도 기꺼이 적용할 만한 논리를 통해 면밀하게 걸러지고 정제되고 또 조직화된 일련의 뛰어난 직관적 지식이다. 수학자들이 개념을 다듬고 그 구조를 체계화하면 할수록 직관적 지식은 그만큼 더 정교해져 간다. 그러나 수학이 의지하고 있는 직관적 지식은 인간의 감각 기관, 두외, 외부 세계 등의 산물이다. 수학은 결함 많은 인간이 만들어 낸 작품이고, 따라서 완벽한 기초를 찾으려는 노력은 결국 실패로 돌아갈 수밖에 없을 것이다. p542 일찍이 1928년에 하디는 특유의 단도직입적인 방식으로 다음과 같이 말했다. \u0026ldquo;엄밀한 의미에서 수학적 증명이란 것은 존재하지 않는다. 앞서의 분석에서 보았지만 우리는 단지 중요 사항을 지적하기만 할 따름이다. 리틀우드와 나는 증명을 일종의 허튼소리라고 부른다. 증명이란 인간 심리에 영향을 주기 위한 수사이며 강의를 할 때 칠판에 그려놓은 그림이자 학생들의 상상력을 자극하기 위해 마련해 놓은 고안물일 뿐이다. p545 증명, 절대적 엄밀성 등은 \u0026ldquo;수학 세계 속에 거처를 두고 있지 않은\u0026rdquo; 허깨비이자 이상적 개념이다. 엄밀성을 엄밀하게 정의할 도리란 없다. 당시의 지도족 전문가들이 승인하거나 유행하는 원리가 채택되어 있을 때 그 증명은 받아들여진다. 하지만 오늘날 모든 사람들이 받아들이고 있는 기준은 없다. 수학적 엄밀성을 주장하기란 어려운 일이 되었다. 공리로부터 연역하는 방식으로 엄밀하게 증명한다는 생각은 이제 과거의 퇴물이 되었다. 논리학에는 인간의 사고에 제약을 가하는 온갖 오류와 불확실성이 담겨 있다. 우리가 수학을 연구하면서 부지불식간에 얼마나 많은 가정들을 했는지 꺠닫는다면 놀라움을 금하지 못할 것이다. p546 절망감을 달래기 위해 수학자들은 수학의 논리에 대해 농담을 하기 시작했다. \u0026ldquo;논리적 증명의 미덕은 확신을 심어 준다는 것이 아니라 의혹을 불러일으키게 한다는 것이다.\u0026rdquo; \u0026ldquo;수학적 증명을 존중화되 의심의 고삐를 늦추지 마라.\u0026rdquo; \u0026ldquo;이제는 더 이상 논리적이기를 바라지 못한다. 단지 기껏해야 비논리적이지 않기만을 바랄 따름이다.\u0026rdquo; \u0026ldquo;열정은 드높이되 엄밀함은 포기하라.\u0026rdquo; \u0026ldquo;논리는 우리로 하여금 특정 증명을 배격하게 한다. 하지만 우리로 하여금 어떤 증명도 확신하게 만들지는 못한다.\u0026rdquo; p547 바일이 말한 것처럼 수학은 사고 활동이지 엄밀한 지식 체계가 아니다. \u0026ldquo;수학의 궁극적 기초와 궁극적 의미라는 문제는 여전히 해결되지 않았다. 어느 방향으로 가야 최종적 해답을 얻을지, 또 객관적인 최종적 해답이 존재하기는 하는지 알지 못한다. \u0026lsquo;수학화\u0026rsquo;는 언어나 음악처럼 인간의 독창성을 드러내는 창조적인 활동이라고 할 수 있다. 수학이 전개되어 온 과정을 역사적으로 고찰해 보면 완벽한 객관적 합리화는 불가능하다는 것을 알 수 있다. p554 수학은 우주이 심연 속에 숨겨져 있어 우리가 계속 캐내어야 하는 다이아몬드인가? 아니면 인간이 만든 인조석이지만 원석과 다름없는 빛을 발하고 있어 스스로의 성취에 얼마간 눈이 멀어 있는 수학자들을 현혹하고 있는 것인가? p560 현대적 논쟁이 일어나기 훨씬 전에 파스칼은 \u0026lt;명상록\u0026gt;에서 이런 생각을 잘 드러냈다. \u0026ldquo;진리란 너무도 세밀해서 무딘 인간의 도구로는 그 진리를 집어낼 수 없다. 집어낸다고 해도 주변에 있는 것들도 함께 딸려 오는데, 이때 지리보다는 허위가 더 많이 딸려 나온다.\u0026rdquo; p561 러셀의 제자인 루드비해 비트겐슈타인은 수학자란 발명가이지 발견자는 아니라고 믿었다. 이들을 비롯한 여러 사람들은 수학을 경험적 발견이나 이성을 사용한 연역에 얽매이지 않은 그 무엇이라고 생각했다. 이들의 주장에 설득력을 더해주는 사실은 무리수나 음수와 같은 기초적 개념들은 경험적 발견이나 외부 세계에 존재하는 실체로부터 연역을 통해 얻은 것이 아니라는 점이었다. p562 인간이 수학을 만들어 냈다는 생각을 견지하는 사람들은 본질적으로 칸트주의자이다. 칸트는 수학의 근원을 정신의 조직 능력에서 찾았다. 그러나 모더니스트들은 수학이 정신의 형태나 구조로부터 연유되는 것이 아니라고 말한다. 그보다는 수학이란 정신의 활동이라고 주장한다. p563 이성의 시대에 활약했던 지식인들이 수학을 인간 이성의 힘과 진리 획득의 능력을 보여 주는 증거로 지목하면서 이성이 인간의 모든 문제를 해결하리라고 확언했던 사실은 다소 아이러니하다. 20세기 지식인들은, 이성의 힘을 확신하는 사람이 여전히 있기는 하지만, 어느 누구도 수학을 기준이나 패러다임으로 내세우지는 못한다. 이 같은 사태의 변화는 곧 지적 재앙과 크게 다르지 않다. 명료하게 그리고 효율적으로 사고하는 방법을 개발하는 일에서 수학이 가장 광범위하고 심오한 인간의 노력이라는 사실과 수학이 이루어 놓은 성과가 곧 인간 정신의 능력을 나타내는 척도가 되고 있다는 사실은 여전히 유효하다. 수학은 이성으로 성취할 수 있는 최대치이다. p564 절대 진리를 찾는 끊임없는 노력은 절대 진리를 실제로 얻는 것의 차선책으로 여겨질 수도 있다. 수학의 전망이 지금처럼 불투명했던 적은 없었다. 수학의 본질이 이렇듯 불분명했던 적도 없었다. 명백하다고 여긴 것을 세심히 분석해 보니 종잡을 수 없는 복잡한 내용이 나선처럼 꼬여 나왔다. 그러나 수학자는 기초론 문제에 계속 매달릴 것이다. p565 호메로스에 따르면, 신들의 저주를 받은 코린트의 왕 시시포스는 죽은 후에 거대한 돌을 언덕 위로 굴려 올리는 벌을 받았다. 돌을 굴려 언덕 꼭대기에 다다르기 직전에 어김없이 돌은 바닥으로 다시 굴러 떨어진다. 시시포스에게는 이 형벌이 언젠가는 끝나리라는 헛된 희망조차 없다. 수학자들에게는 완벽한 기초를 마련하려는 본능적 의지와 용기가 있다. 그들의 고군분투는 영원히 계속될는지 모른다. 그들 역시 시시포스처럼 결코 성공하지 못할 가능성도 있다. 하지만 현대의 시시포스들은 희망을 버리지 않고 노력할 것이다. p566 15장 자연의 권위 자연을 사랑하는 자를 자연은 결코 배신하지 않음을 알기에 이 기도를 드립니다. - 윌리엄 워즈워스 수학자들이 새로운 결과를 도출하려 할 때 나갈 수 있는 방향은 다양하다. 고려 사항 가운데 가장 중요한 것이 과학에 대한 가치이다. 이 전통적 기준은 수학 이론을 만들어 내고 개발하는 데 여전히 가장 설득력 있는 이유가 되고 있다. 수학의 기초에 대한 불확실성과 그 논리의 견고함에 대한 의구심을 해소할 수는 없다고 해도 자연에 응용할 수 있다는 것을 강조함으로써 그 문제를 덮어 둘 수는 있다. \u0026ldquo;물질로 정신의 집을 짓자.\u0026ldquo;라고 한 에머슨의 말을 따르는 것이다. p569 역사적 관점에서 보았을 때 응용을 중시하는 자세는 오늘날 수학을 고집하는 순수주의자의 생각과는 달리 그리 파격적인 것은 아니다. 수학 개념과 공리는 물질 세계의 관찰에서 생겨났다. 논리학 법칙조차도 경험의 산물이라는 사실이 널리 받아들여지고 있는 실정이다. 정리를 낳는 문제와 증명 방식에 대한 암시까지도 경험에 그 뿌리를 두고 있다. 그리고 공리에서 연역되어 나온 결과는 그 가치나 의의를 최소한 70여 년 전까지는 물질 세계와 부합되는지의 여부로 판단했다. 왜 수학이 얼마만큼 정확하게 물리 현상을 기술하고 예측하는가 하는 잣대로 그 타당성을 검증하지 않는 것일까? p570 형식주의자 하스켈 브룩스 커리는 \u0026lt;수리논리학의 기초\u0026gt;에서 이렇게 주장했다. \u0026ldquo;하지만 과연 수학이 정당성을 갖추려면 절대적 확실성이 필요한 것일까? 특히, 이론을 사용하기 위해서는 왜 먼저 그 이론이 무모순이거나 절대적으로 확실한 순수 시간의 직관으로부터 유도되어 나올 수 있어야 한다는 조건을 다는 것일까? 다른 과학에서는 그런 요구 조건을 달지 않는다. 물리학에서는 모든 정리가 가설에 머문다. 예측에 유용하게 활용된다면 그 이론을 채택하고, 그렇지 못할 떄에는 수정하거나 폐기 처분한다. 과거에는 수학 이론의 경우에도 그런 태도를 취했다. 받아들이던 수학 이론에 모순이 발견되면 그 이론을 적절히 수정했다. 앞으로도 그렇게 하면 안 될 이유가 무엇이겠는가? p572 러셀은 1914년 쓴 시론에서 \u0026ldquo;물리적 기하에 관한 우리의 지식은 선험적인 것이 아니라 종합적인 것이다.\u0026ldquo;라고 인정했다. 수학은 오직 논리로부터만 도출되지 않는다. \u0026lt;수학원리\u0026gt; 제 2판에서 그는 한 발 더 물러섰다. \u0026ldquo;전자기학의 맥스웰 방정식과 같은 논리와 수학은 그 논리적 귀결이 옳다고 관찰되었기 때문에 그 참됨을 믿는 것이다. \u0026quot; p574 정리하자면 아직 그 참됨이 확립되지 않은 기초론으로 수학의 타당성을 결정하려 해서는 안 된다. 수학의 \u0026lsquo;타당성\u0026rsquo;은 물질 세계에서의 응용 가능성을 보고 판단해야 한다. 수학은 뉴턴 역학과 마찬가지로 경험 과학이다. 수학은 응용 이론으로서 제대로 작동하는 한도 내에서만 옳은 이론이며, 제대로 작동하지 못할 때에는 수정되어야 한다. 사람들은 2000년 동안 수학을 선험적 지식이라고 생각했지만 전혀 그렇지 않다. 수학은 절대적 진리도, 불변의 진리도 아니다. p576 이렇게 순전히 수학만을 사용하여 맥스웰은 그때까지 알려지지 않은 여러 현상들의 존재를 예측했으며 또 빛이 전자기적 현상이라는 점도 밝혀냈다. 여기서 주막할 만한 사실은 전자기파가 무엇인지 그 물리적 의미를 우리는 전혀 알지 못하고 있다는 점이다. 오직 수학만이 그 존재성을 보증해 주고 있으며 그러한 수학의 도움으로 공학자들은 라이오와 텔레비전이라는 놀라운 기계를 만들어 앴다. 현대 물리학의 중력장, 전자기장, 전자장 등의 이론은 물질의 허상이다. 그러나 이러한 가상의 장들에 관한 법칙을 수학적으로 구성해 내고 이 법칙들로부터 결과를 도출해 냄으로써 물리적으로 적절히 해석했을 때 감각 인식으로 확인이 가능한 결론을 얻어 낸다. p583 현대 과학은 자연 현상을 합리적으로 설명함으로써 악마니 천사니 신비한 힘이니 하는 정령 숭배를 제거해 냈다고 칭송받아 왔다. 그런데 현대 과학은 감가가에 호소하는 직관적이고 물리적인 내용을 점차 제거해 내고 있다는 점도 덧붙여야 한다. 현대 과학은 물질을 제거하고 있다. 현대 과학은 장이나 전자 같은 순전히 인위적이고 이상적인 개념을 사용하고 있다. 그리고 그런 개념에 대해서는 오직 그 개념을 규정하고 있는 수학 법칙만을 알고 있을 따름이다. 과학은 긴 수학적 연역을 거친 연후에나 최소한도의 필수적인 감각 지각만을 활용하고 있다. 과학은 합리화된 허구이며 그 합리화를 담당하는 것이 바로 수학이다. p584 물리학자 하인리히 헤르츠는 수학의 힘에 깊은 인상을 받은 나머지 솟구쳐 오르는 열정을 억누르지 못하고 이런 말을 했다. \u0026ldquo;이 수학 공식들이 지적 능력을 지닌 독립된 실재물이라는 인상을 지울 수 없다. 이들은 우리보다 더 현명할 뿐만 아니라 그 공식을 발견해 낸 사람들보다도 더 현명하다는 느낌을 떨쳐 버릴 수 없다. 또 우리가 본래 그 식들에 투여한 것보다 훨씬 더 많은 것을 그로부터 얻는다는 느낌 역시 떨쳐 버릴 수 없다.\u0026rdquo; p584 제임스 진스는 자연 탐구에서 수학의 역할을 강조했다. \u0026ldquo;과학이 자연에 대해 그리고 있는 그림, 관측 내용과 합치될 가능성이 있는 유일한 그림은 수학적 그림이다. 수학 공식을 벗어나면 그 어떤 것도 확실성을 보장받지 못한다. 감각으로 파악할 수 있는 모델이나 그림을 통해 자연을 이해하기란 불가능하다. 우리는 물리적 사태의 본질을 결코 이해할 수 없다. 우리는 사태의 양태를 수학적으로 기술하는 데 머물러야 한다. 물리학이 최종적으로 얻는 수확물은 수학 공식이다. 물질의 참된 본질은 영원히 알 수 없다. p585 수학이 유용하게 활용되고 있느냐는 질문에 대해서는 조금의 주저함도 없이 긍정의 대답을 할 수 있다. 하지만 왜 수학이 유용성을 갖는가 하는 질문에 대해서는 쉽사리 답하지 못한다. 수학은 여전히 자연의 작동을 매우 정밀하게 기술해 내고 있다. 왜 이와 같은 유용성을 갖는가에 대해서는 면밀하게 분석해 볼 만한 가치가 있다. 왜 사람들은 \u0026lsquo;엄밀한\u0026rsquo; 사고에 따라 구성된 독립적이고 추상적이고 또 선험적인 체계가 물질 세계와 관련되어 있다고 생각하는 것일까? p586 추상화에 관한 수많은 정리와 연역을 수반하는 주요 이론들이 공리만큼이나 실제 세계와 밀접하게 맞닿아 있다는 사실은 실제 현상을 믿기 어려운 수준의 정밀함으로 그려 내고 있는 수학의 힘을 보여준다. 왜 여러 단계를 밟아 결과를 이끌어 내는 순수 추론에서 놀랄 만큼 높은 응용성을 지닌 결과가 도출되어 나오는 것일까? 이는 수학의 가장 큰 역설이다. p588 \u0026lt;상대성 이론에 대한 간접 설명\u0026gt;에서 아인슈타인이 언급한 내용이 주목할 만하다. \u0026ldquo;모든 시대의 과학자들을 괴롭혀 온 문제가 있다. 수학은 경험과는 무관한 인간 사고의 산물이다. 그런데 왜, 물리적 현실 속의 대상물들과 완벽하게 합치되는 것일까? 인간 이성은 경험에 의존하지 않고 순수한 사고만으로도 사물의 속성을 발견해 낼 수 있는 것일까? 수학 명제가 실제 세계를 대상으로 삼은 한, 그 명제는 확실하지 않다. 그리고 수학 명제가 확실할 경우는 실제 세계를 대상으로 삼지 않는 때이다.\u0026rdquo; p588 이에 대한 한 가지 답은 칸트로부터 연유했다. 칸트는 우리가 자연을 알지 못하며 알 수도 없다고 주장했다. 단지 우리에게는 감각 지각만이 주어져 있을 따름이다. 인간 마음에는 공간과 시간에 관한 구조가 이미 짜여져 있고 이러한 정신 구조의 지시에 따라 이 지각들을 조직한다. 인간 정신이 자연의 행동 방식을 결정한다는 그의 주장은 부분적입 해답을 제공해 준다. 정신은 공간과 시간에 대한 개념을 만들어 낸다. 우리는 정신이 우리로 하여금 보게 하려고 미리 결정해 놓은 것을 보는 것이다. p 589 에딩턴에 따르면 인간 정신은 자연의 행동 양태를 결정한다. \u0026ldquo;과학이 최고의 진보를 이룬 현재, 정신은 자연 속에 자신이 스스로 투입해 놓은 것을 다시 길어 올릴 따름이라는 사실을 우리는 알게 되었다. 우리는 미지의 세계가 시작되는 기슭에서 이상한 발자국을 발견하고 그 기원을 밝히기 위해 심오한 이론들을 차례로 만들어 냈다. 마침내 그 발자국의 주인공을 찾아내는 데 성공했다. 그런데 보라! 그 주인공은 우리 자신이 아닌가!\u0026rdquo; p590 수학이 효용성을 갖는 이유에 대한 칸트의 설명을, 최근에 화이트헤드는 더욱 정교하고 상세하게 다듬었다. 또 브라우베르도 1923년 논문에서 칸트의 설명을 재천명했다. 그 핵심 내용은 수학이 외부 세계에서 일어나는 현상과 독립되어 있다고 할 수 없으며, 외부 세계에서 일어나는 현상에 적용되는 것이라기보다는 현상을 인식하는 인간의 고유 방식 가운데 한 요소라는 것이다. 우리에게 자연은 객관적으로 주어져 있지 않다. 자연이란 감각을 바탕으로 하여 인간이 지어낸것이고 수학이란 바로 그 감각 소여를 조직하는 주요한 도구이다. 그렇다면 수학은 거의 자동으로 인간이 알고 있는 범위 안에서 외부 세계를 기술하게 된다. 다수의 사람들이 동일한 수학적 조직을 받아들이고 있다는 사실은 인간 정신이 서로 유사하게 기능한다는 주장으로 설명되거나 특정한 수학 구조를 받아들이도록 길들이는 문화 및 언어 환경으로 설명된다. 공간에 관한 최종 이론이 아닌 유클리드 기하학이 득세하고 있다는 사실에서 후자의 견해는 설득력을 얻는다. p590 우리는 복잡다단한 현상으로부터 수학적으로 기술이 가능한 속성을 지니는 단순한 체계를 추상해 내려 한다. 이러한 추상화의 힘 덕분에 수학은 자연을 놀랄 만한 수준으로 정확하게 기술해 낸다. 더욱이, 우리는 우리의 수학적 \u0026lsquo;렌즈\u0026rsquo;가 허용하는 것만을 본다. p591 푸엥카레는 \u0026lt;과학의 가치\u0026gt;에서 다음과 같이 주장했다. \u0026ldquo;인간 지성은 자연에서 조화를 발견했다. 그런데 과연 그 조화는 인간 지성과 독립하여 존재하는가? 절대 그렇지 않다. 정신에서 완전히 독립된 실체는 불가능하다. 그 실체를 떠올리고, 보고, 느끼는 정신이 전제되어야 한다. 세계는 설사 존재한다고 해도 우리 정신 밖에 존재하기 때문에 영원히 파악되지 않는다. 우리가 \u0026lsquo;객관적 실체\u0026rsquo;라고 부르는 것은 엄밀하게 말해서 여러 사고하는 존재들에게 공통된 것, 모든 존재에게 공통될 가능성이 있는 것을 가리킨다. 앞으로 보겠지만 이러한 공통되는 부분이 될 가능성이 있는 대상은 오직 수학적 법칙으로 표현되는 조화뿐이다. P595 라플라스는 자연의 움직임은 수학적 법칙에 따라 완벽하게 결정되지만 그 움직임의 원인을 항상 파악할 수 있는 것은 아니며 또 관찰은 근사적으로만 옳을 따름이라고 철저하게 믿었던 인물이었다. 따라서 확률론을 적용하여 가장 개연성이 높은 원인을 결정하고 확률적으로 타당성이 가장 높은 데이터를 확정해야 한다고 주장했다. 그러나 한 세기가 채 지나지 않아 자연의 움직임은 법칙에 따라 결정되는 것이 아니라 무질서하다는 생각이 그 뒤를 이었다. 자연은 무질서하다. 하지만 개연성 높은 움직임 또는 평균적인 움직임이 있다. 바로 이것이 우리가 관측하는 내용이며, 우리는 이를 두고 수학 법칙에 따라 결정된다고 말하는 것이다. P601 자연을 통계적으로 바라보는 방식은 양자론의 발전으로 최근에 각광을 받고 있다. 양자론에 따르면 견고한 개체로서 한 지점을 점유하는 입자는 존재하지 않는다. 입자는 공간의 어떤 곳에도 존재할 개연성이 있지만 그 가운데에서도 특정 지점에 있을 확률이 가장 높을 따름이다. 어쨌든 통계적 관점에 따르면 자연에 관한 수학적 법칙은 기껏해야 자연의 행동 방식 가운데 개연석이 가장 높은 것을 기술한다. 하지만 이 법칙들은 지구가 갑자기 궤도를 벗어나 우주를 떠돌 가능성을 배제하지 않는다. 개연성이 가장 높은 것이 실제로 일어나지 않을 가능성이 있다. P602 수학이 효용성을 지니는 이유에 대한 설명이 만족스럽든 불만족스럽든 간에 자연 자체와 자연에 대한 수학적 기술은 동일하지 않다는 사실을 인식하는 것이 중요하다. 차이는 단순히 수학이 관념화된 것이라는 점만이 아니다. 수학적 삼각형은 분명히 물리적 삼각형이 아니다. 그러나 수학은 물리적 현실로부터 그보다 훨씬 더 멀리 떨어져 있다. P603 사람든 제한적이고 인위적인 개념을 도입해야만 자연에 질서를 부여할 수 있는 것일지도 모른다. 인간이 만들어 낸 수학은 단순히 실행 가능성을 지닌 계획안에 불과할지도 모른다. 자연 자체는 그보다 훨씬 복잡하거나 내적 짜임새가 없을 수도 있다. 그렇지만 수학은 자연을 탐구하고 묘사하고 지배하는 데 가장 뛰어난 방법적 도구로서 건재함을 과시하고 있다. 수학이 효용성을 발휘하는 모든 영역에서 오직 수학만이 우리가 거둘 수 있는 유일한 성과이다. 수학이 실재 자체가 아니라고 해도 우리가 얻을 수 있는 실재의 최고 근사치이다. P604 수학의 이러한 성공은 대가를 치르고 얻은 것이다. 그 대가란 세계를 크기, 질량, 무게, 지속 시간 및 이와 유사한 개념들로 \u0026lsquo;단순하게\u0026rsquo; 설명하는 것이다. 이러한 설명은 풍부하고 다양한 경험을 완벽하게 반영하지 못한다. 이는 한 사람의 키를 가지고 바로 그 사람의 본질이라고 말하는 것과 마찬가지이다. 수학은 기껏해야 자연의 특정 과정을 묘사할 따름이며, 그것도 과정 전체를 온전히 담아 내지 못한다. 더욱이 수학은 물질 세계에서 가장 단순한 개념과 현상을 다룬다. 수학은 이간이 아닌 생명 없는 대상을 다룬다. 물질의 움직임은 반복적이며 수학은 그런 반복적 현상을 기술할 수 있다. 하지만 경제학, 정치학, 심리학뿐만이 아니라 생물학에서도 그 유용성은 현저하게 떨어진다. 마치 접선이 곡선의 한 점만을 스치고 지나가듯 물리 영역에서도 수학은 실체의 표피만을 건드린다. 지구는 태양을 타원 궤도를 그리며 도는가? 그렇지 않다. 지구와 태양을 모두 점으로 간주하고 또 다른 항성이나 행성을 모두 무시할 때에만 그런 결론이 나온다. 지구의 사계절은 영원히 변함없이 되풀이될까? 전혀 그렇지 않다. 인간이 파악할 수 있는 조악한 수준의 정확도로만 반복이 예측될 따름이다. P605 지식의 확실성에 관한 한, 수학은 우리가 추구해야 할 이상이다. 그 이상을 결코 실현하지 못할지도 모른다. 확실성이란 끊임없이 쫓아가도 결코 잡을 수 없는 환영에 불과한지도 모른다. 하지만 이상은 힘과 가치를 지니고 있다. 수학도 이상에 불과하지만 이 역시 유구한 문명이 낳은 중요한 산물이다. 어느 분야에서든 이상을 가슴속에 품을 때, 진리를 얻기 위해 마땅히 추구해야 할 방향을 더욱더 잘 파악하게 된다. p709 이 우주 속에 존재하고 있는 인간이란 대체 무엇인가? 무한에 견주면 무이고 무에 견주면 전체이다. 무와 전체의 한가운데 위치한 존재라서 무를 이해하기도 불가능하고 전체를 이해하기도 불가능하다. 만물이 끝과 그 시작은 인간이 꿰뚫을 수 없는 비밀로 깊이 숨겨져 있다. 인간은 무에서 나왔으면서도 무를 이해하지 못하고 전체 속에 들어앉아 있으면서도 전체를 이해하지 못하는 존재이다. - 파스칼\n","permalink":"https://neosolaris.github.io/posts/%EC%88%98%ED%95%99%EC%9D%98-%ED%99%95%EC%8B%A4%EC%84%B1/","summary":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e신들은 처음부터 모든 것을 계시해 주지 않았다.\n그러나 인간은 탐구를 해 나가고, 그래서 조만간 더 많은 것을 알게 된다.\n\n여기 이것들이 마치 진리인 듯 생각하자.\n\n그러나 신에 대한 진리와 내가 말하고 있는 내용을\n아무도 알지 못하고 또 앞으로도 아는 자가 없으리라.\n만일 어떤 자가 스스로 완전한 진리를 말하는 경우가 있다고 해도\n그 자신은 그 사실을 알지 못하며\n모든 것에는 겉모습이 덧씌워져 있어 본모습을 가리고 있기 때문이다.\n\n- 크세노파네스\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"저자\"\u003e저자\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e모리스 클라인(MORRIS KLINE, 1908∼1992년)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e모리스 클라인은 브루클린과 자메이카, 퀸스에서 자랐다. 브루클린의 보이스 고등학교를 졸업하고 뉴욕 대학교에서 수학을 공부했다. 같은 대학교에서 1930년에 학사 학위를 받았고 석사 학위(1930년), 박사 학위(1936년)를 받았다. 1938년부터 1975년까지 뉴욕 대학교 쿠란트 수리 과학 연구소에서 교수로 재직하며 학생들을 가르쳤다. 은퇴 후에도 쿠란트 수리 과학 연구소의 명예 교수로 일하며 수학과 수학 교육에 관한 다양한 저술을 남겼다. 순수 수학만이 아니라 응용 수학의 의미와 가치를 대중적으로 인식시키는 데 크게 공헌했다.\u003c/p\u003e","title":"수학의 확실성 - 모리스 클라인"},{"content":" 20세기 수학의 기초론의 발전과정은 다음과 같은 비유로 적절하게 요약될 수 있을 듯 싶다. 라인 강둑에 수백 년 된 아름다운 성이 서 있다. 성 지하에 사는 부지런한 거미들이 거미줄로 거미집을 정교하게 지어 놓았다. 어느 날 세찬 바람이 불어 거미줄이 부서졌다. 거미들은 미친 듯이 거미줄을 뽑아 집을 고쳤다. 그것은 거미들이 성이 무너지지 않게 지탱해 주는 것은 자기들이 지은 거미집이라고 생각했기 때문이다.\n모리스 클라인 \u0026lt;수확의 확실성\u0026gt; ","permalink":"https://neosolaris.github.io/posts/%EC%88%98%ED%95%99%EC%9D%80-%EC%A7%84%EB%A6%AC%EC%9D%98-%ED%95%99%EB%AC%B8%EC%9D%B8%EA%B0%80/","summary":"\u003cblockquote\u003e\n\u003cp\u003e20세기 수학의 기초론의 발전과정은 다음과 같은 비유로 적절하게 요약될 수 있을 듯 싶다. 라인 강둑에 수백 년 된 아름다운 성이 서 있다. 성 지하에 사는 부지런한 거미들이 거미줄로 거미집을 정교하게 지어 놓았다. 어느 날 세찬 바람이 불어 거미줄이 부서졌다. 거미들은 미친 듯이 거미줄을 뽑아 집을 고쳤다. 그것은 거미들이 성이 무너지지 않게 지탱해 주는 것은 자기들이 지은 거미집이라고 생각했기 때문이다.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e모리스 클라인 \u0026lt;수확의 확실성\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e","title":"수학은 진리의 학문인가 - 모리스 클라인"},{"content":" 우주를 설명하는 분야는 천체물리학뿐 아니라 철학, 신화, 종교 등 여러 가지가 있는데, 과학과 마찬가지로 나름의 논리와 목표를 가지고 우주를 설명할 것입니다. 자연과학으로서의 우주론은 한계가 있는데, 과학은 연구하는 주체와 연구 대상이 되는 객체가 분리되어야 합니다. 그런데 우주론에는 자기 모순성 또는 자기 인용 패러독스가 있습니다. 예를 들어 우주의 기원을 이야기할 때 우주가 어떻게 생겨났느냐 하는 것을 자연법칙으로 설명해야 하는데, 자연법칙은 우주의 구성 성분 중 하나입니다. 우주 탄생의 결과가 자연법칙이니까요. 그러면 우주 탄생의 결과인 자연법칙을 가지고 우주 탄생을 설명한다는 자기모순이 일어납니다. 그렇게 되려면 우주 탄생 전에 우주 법칙이 이미 존재해야 한다는 말이지요. 또한 어떤 이론을 검증하려면 여러 번 그 현상을 관측하고 반복해야 합니다. 아니면 통계적으로 그 이론이 맞는지 봐야겠죠. 그런데 우주는 단 한 번 탄생해서 단 한 번의 진화를 겪고 있습니다. 그래서 검증하거나 통계를 낼 수 없는 독특한 연구 대상입니다.\n이렇게 우주론은 물리학과 수학을 활용해서 사실을 규명하는 학문이지만, 과학의 대전제를 만족시키지 못하는 비과학적인 부분도 있습니다. 그것이 우주론 연구의 한계라고 할 수 있겠지요. 우주론이 어쩔 수 없이 지니고 있는 한계는 있지만, 대부분의 우주 역사는 과학적으로 접근할 수 있고, 지난 수천 년 동안 인류가 이를 연구해 온 결과 오늘날 현대 우주론이 정립된 것입니다.\n[기원, 궁극의 질문들] - 우주론의 기원 ","permalink":"https://neosolaris.github.io/posts/%EC%9A%B0%EC%A3%BC%EB%A1%A0%EC%9D%98%ED%95%9C%EA%B3%84/","summary":"\u003cblockquote\u003e\n\u003cp\u003e우주를 설명하는 분야는 천체물리학뿐 아니라 철학, 신화, 종교 등 여러 가지가 있는데, 과학과 마찬가지로 나름의 논리와 목표를 가지고 우주를 설명할 것입니다. 자연과학으로서의 우주론은 한계가 있는데, 과학은 연구하는 주체와 연구 대상이 되는 객체가 분리되어야 합니다. 그런데 우주론에는 자기 모순성 또는 자기 인용 패러독스가 있습니다. 예를 들어 우주의 기원을 이야기할 때 우주가 어떻게 생겨났느냐 하는 것을 자연법칙으로 설명해야 하는데, 자연법칙은 우주의 구성 성분 중 하나입니다. 우주 탄생의 결과가 자연법칙이니까요. 그러면 우주 탄생의 결과인 자연법칙을 가지고 우주 탄생을 설명한다는 자기모순이 일어납니다. 그렇게 되려면 우주 탄생 전에 우주 법칙이 이미 존재해야 한다는 말이지요. 또한 어떤 이론을 검증하려면 여러 번 그 현상을 관측하고 반복해야 합니다. 아니면 통계적으로 그 이론이 맞는지 봐야겠죠. 그런데 우주는 단 한 번 탄생해서 단 한 번의 진화를 겪고 있습니다. 그래서 검증하거나 통계를 낼 수 없는 독특한 연구 대상입니다.\u003c/p\u003e","title":"우주론의 한계 - 박창범"},{"content":"Intro 정의: Animation engine for explanatory math videos 유튜브에서 유명한 3Blue1Brown의 수학 애니메이션을 만들 수 있는 엔진이다. 너무 편하고 쉽게 그래프를 애니매이션으로 만들 수 있다. 아래 유튜브를 보면서 공부하면 바로 그 진가를 알아보자. manim은 커뮤니티 버전, manimgl은 3b1b의 최신버전. 커뮤니티 버전을 권장. Docker, conda, local, jupyter notebook 모두 지원한다. Install requirements: ffmpeg, python3.7이상 $ sudo apt update $ sudo apt install build-essential python3-dev libcairo2-dev libpango1.0-dev ffmpeg $ pip3 install manim $ manim --help vscode addon setup python addon 설치 : 파이썬 코딩 지원 manim addon 설치 : manim 라이브러리 및 함수 지원 Howto 아래 Links의 관련 하우투 유튜브를 참조한다. 자세한 사용방법은 추후 정리. Links 홈페이지 https://github.com/3b1b/manim Linux Install https://docs.manim.community/ https://docs.manim.community/en/stable/installation/linux.html Tutorial https://docs.manim.community/en/stable/tutorials/index.html https://github.com/malhotra5/Manim-Tutorial 관련 하우투 유튜브 https://www.youtube.com/watch?v=rUsUrbWb2D4 https://hub-binder.mybinder.ovh/user/behackl-manim-with-ease-0xvmyqyg/doc/tree/E01%20-%20introduction.ipynb ","permalink":"https://neosolaris.github.io/posts/manim/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e정의: Animation engine for explanatory math videos\u003c/li\u003e\n\u003cli\u003e유튜브에서 유명한 3Blue1Brown의 수학 애니메이션을 만들 수 있는 엔진이다.\u003c/li\u003e\n\u003cli\u003e너무 편하고 쉽게 그래프를 애니매이션으로 만들 수 있다.\u003c/li\u003e\n\u003cli\u003e아래 유튜브를 보면서 공부하면 바로 그 진가를 알아보자.\u003c/li\u003e\n\u003cli\u003emanim은 커뮤니티 버전, manimgl은 3b1b의 최신버전.\u003c/li\u003e\n\u003cli\u003e커뮤니티 버전을 권장.\u003c/li\u003e\n\u003cli\u003eDocker, conda, local, jupyter notebook 모두 지원한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003erequirements: ffmpeg, python3.7이상\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ sudo apt update\n$ sudo apt install build-essential python3-dev libcairo2-dev libpango1.0-dev ffmpeg\n\n$ pip3 install manim\n$ manim --help\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"vscode-addon-setup\"\u003evscode addon setup\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003epython addon 설치 : 파이썬 코딩 지원\u003c/li\u003e\n\u003cli\u003emanim addon 설치 : manim 라이브러리 및 함수 지원\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"howto\"\u003eHowto\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래 Links의 관련 하우투 유튜브를 참조한다.\u003c/li\u003e\n\u003cli\u003e자세한 사용방법은 추후 정리.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e홈페이지\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/3b1b/manim\"\u003ehttps://github.com/3b1b/manim\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eLinux Install\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.manim.community/\"\u003ehttps://docs.manim.community/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.manim.community/en/stable/installation/linux.html\"\u003ehttps://docs.manim.community/en/stable/installation/linux.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eTutorial\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.manim.community/en/stable/tutorials/index.html\"\u003ehttps://docs.manim.community/en/stable/tutorials/index.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/malhotra5/Manim-Tutorial\"\u003ehttps://github.com/malhotra5/Manim-Tutorial\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e관련 하우투 유튜브\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=rUsUrbWb2D4\"\u003ehttps://www.youtube.com/watch?v=rUsUrbWb2D4\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://hub-binder.mybinder.ovh/user/behackl-manim-with-ease-0xvmyqyg/doc/tree/E01%20-%20introduction.ipynb\"\u003ehttps://hub-binder.mybinder.ovh/user/behackl-manim-with-ease-0xvmyqyg/doc/tree/E01%20-%20introduction.ipynb\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Manim - Animation engine for explanatory math videos"},{"content":"머리말 대학생 때 읽었던 것인데 다시 읽고 있다. 매우 부끄러움을 느끼면서 다시 시작해야겠다. 현재 5권까지 나와있다. 이오덕 선생님 귀한 말씀 글은 쓰는 것이지 짓는 것이 아니다. 우리글은 우리말과 떨어질 수 없고 말하듯이 써야한다. 현학적 표현, 중국어투, 일본어투, 영어투가 모두 우리말과 글을 해친다. 우리말, 우리글을 잘 못 사용하면 계속 오염되고 악순환한다. 수십 년 동안 길이 든 글쟁이의 못된 버릇이 자꾸 나와 어렵게 쓰고 잘못 쓰고 한다. 어찌 나뿐이겠나? 이 나라에서는 글을 아주 깨끗한 우리 말로 쓰는 사람이 아무도 없다. 그만큼 우리는 말과 글에서도 봉건과 일제와 분단의 세 겹이나 되는 무거운 짐을 모두가 운명처럼 지고 있는 것이다. 그렇다고 해서 누구나 다 그런데 하고 잘못 쓰는 것을 그대로 보아줄 것이 아니라 기회 있는 대로 서로 잘못을 알리고 충고하고, 그렇게 충고하면 또 고맙게 받아들여야 한다고 본다. 이렇게 해야만 글이 바로잡히고 말이 살아날 것이다.\n관련 자료 한글/문제점 및 논쟁 - 나무위키 https://namu.wiki/w/%ED%95%9C%EA%B8%80/%EB%AC%B8%EC%A0%9C%EC%A0%90%20%EB%B0%8F%20%EB%85%BC%EC%9F%81 너 진짜 똑똑하다 - 한국인도 몰랐던 한글의 숨겨진 진실 https://www.youtube.com/watch?v=1uJeSNTrfvE 한글 창제의 진정한 취지는 불평등을 없애는 데 있다. 한글은 가장 뛰어나고 우월한 글자가 아닌 한국어를 가장 잘 표한할 수 있는 글자이다. 한글은 좋은 문자이지, 다른 문자보다 우월한 문자가 아니다. 알릴레오 북 - 우리말로써 살아가는 것: 총 2편 https://www.youtube.com/watch?v=v-jkDl08kvw https://www.youtube.com/watch?v=PMx0S8ojZmw 책과 사유 - 우리글 바로 쓰기 - 일부 내용 요약 https://bkshin.tistory.com/entry/%EC%9D%B4%EC%98%A4%EB%8D%95-%EC%9A%B0%EB%A6%AC-%EA%B8%80-%EB%B0%94%EB%A1%9C-%EC%93%B0%EA%B8%B0 ","permalink":"https://neosolaris.github.io/posts/%EC%9A%B0%EB%A6%AC%EA%B8%80-%EB%B0%94%EB%A1%9C%EC%93%B0%EA%B8%B0/","summary":"\u003ch2 id=\"머리말\"\u003e머리말\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e대학생 때 읽었던 것인데 다시 읽고 있다.\u003c/li\u003e\n\u003cli\u003e매우 부끄러움을 느끼면서 다시 시작해야겠다.\u003c/li\u003e\n\u003cli\u003e현재 5권까지 나와있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"이오덕-선생님-귀한-말씀\"\u003e이오덕 선생님 귀한 말씀\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e글은 쓰는 것이지 짓는 것이 아니다.\u003c/li\u003e\n\u003cli\u003e우리글은 우리말과 떨어질 수 없고 말하듯이 써야한다.\u003c/li\u003e\n\u003cli\u003e현학적 표현, 중국어투, 일본어투, 영어투가 모두 우리말과 글을 해친다.\u003c/li\u003e\n\u003cli\u003e우리말, 우리글을 잘 못 사용하면 계속 오염되고 악순환한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e수십 년 동안 길이 든 글쟁이의 못된 버릇이 자꾸 나와 어렵게 쓰고 잘못 쓰고 한다. 어찌 나뿐이겠나? 이 나라에서는 글을 아주 깨끗한 우리 말로 쓰는 사람이 아무도 없다. 그만큼 우리는 말과 글에서도 봉건과 일제와 분단의 세 겹이나 되는 무거운 짐을 모두가 운명처럼 지고 있는 것이다. 그렇다고 해서 누구나 다 그런데 하고 잘못 쓰는 것을 그대로 보아줄 것이 아니라 기회 있는 대로 서로 잘못을 알리고 충고하고, 그렇게 충고하면 또 고맙게 받아들여야 한다고 본다. 이렇게 해야만 글이 바로잡히고 말이 살아날 것이다.\u003c/p\u003e","title":"우리글 바로쓰기 - 이오덕"},{"content":"Intro gsl-shell은 GSL(GNU Scientific Library에 luajit을 기반으로 만들어졌다. 매트릭스, 벡터 및 여러 함수 등을 쉽게 만들고 사용할 수 있다. 여러 함수에 대한 그래프를 출력을 지원한다. luajit + 추가 함수 및 명령어로 구성되어 있다. 비슷한 다른 도구 중에 매우 우수한 연산 능력과 속도를 자랑한다. Install 성능 최적화를 위해 직접 빌드하는 방법은 아래 깃허브 링크를 참조한다. 데비안, 우분투에서는 GSL외에 gsl-shell은 패키지가 없다. 처음 사용한다면 빌드된 바이너리를 설치하는 것이 좋다. 다운로드 릴리즈는 여러가지가 있으니 설명을 참고해서 적합한 것으로 내려받는다. $ sudo apt install libgsl27 libgslcblas0 $ wget https://github.com/franko/gsl-shell/releases/download/v2.3.4/gsl-shell-dynamic-linux-x86-64.tar.gz $ tar xvfz gsl-shell-dynamic-linux-x86-64.tar.gz $ ls gsl-shell $ export PATH=$PATH:$HOME/gsl-shell/bin # ~/.bashrc에 추가 등록 $ gsl-shell # 실행 GSL Shell 2.3.4 -- Copyright (C) 2009-2022 Francesco Abbate GNU Scientific Library -- Copyright (C) The GSL Team LuaJIT 2.0.5 -- Copyright (C) 2005-2022 Mike Pall. https://luajit.org/ JIT: ON CMOV SSE2 SSE3 SSE4.1 AMD fold cse dce fwd dse narrow loop abc sink fuse \u0026gt; # 나가기(Ctrl+d) $ 기본 사용법 대화식이 아닌 소스를 작성해서 실행할 경우 아래 방법외에 #!/usr/bin/env gsl-shell을 첫 줄에 넣고 chmod로 실행권한을 주어 직접 실행해도 된다. 스크립트 확장자를 lua로 하는 것은 편집기 등에서 문법 강조등의 지원을 받기 위함도 있고 lua의 문법을 따르기 때문이기도 하다. 그러나 lua나 luajit에서는 정상 동작하지 않으므로 식별이 가능한 폴더를 만들고 정리해 두는 것이 좋다. $ gsl-shell --help $ gsl-shell # 대화식 사용 $ gsl-shell my-program.lua # 스크립트 실행 이렇게 준비가 되었다면 아래 문서를 참고해서 공부하면 된다. 이것을 어떻게 쓰는가는 자신에게 달렸다. GSL에 어느정도 아는 사용자라면 더욱 수월할 것이다. 참고로 설치된 GSL 라이브러리를 어떻게 사용하는지도 나와 있으니 참고한다. 기타 도움말 문서대로 use \u0026quot;math\u0026quot; 등을 사용하면 에러가 난다. gsl-shell/share/gsl-shell/import.lua 을 수정한다. ... -- 아래 문장을 주석처리하고 그 아래 문장으로 고친다. -- local level = getinfo(2, \u0026#34;\u0026#34;) and 2 or 0 local level = 2 대화형 모드 사용시에 rlwrap을 같이 사용하면 편리하다. 사용되는 모듈과 함수를 편집기에서 자동완성, 검색 등을 지원하는 것은 아직 모른다. 최소한 함수 이름을 추출해서 vim 등과 연동하거나 grep을 활용하는 방법으로 시작하기로 한다. 문서작성시 수학식 표현 관련 프로그램(스크립트)를 작성한 후 도움말이나 문서를 작성할 때 가장 좋은 방법은 마크다운(markdown) 문서에 latex 문법으로 작성하는 것이다. 사용방법을 참조한다. 즉, 문장 중에는 $수식$ 으로 표현하고 독립적인 수식은 $$수식$$으로 표현하는 것이다. 깃허브나 기타 웹페이지에서 이를 잘 지원한다. vscode에서는 markdown all in one 플러그인을 설치하면 미리보기로 실시간으로 확인할 수 있다. 물론 수학표현식도 지원한다. vim에서는 hugo로 로컬에서 서버를 띄어 실시간 확인하는 방법을 사용하거나 firefox의 markdown지원 모듈인 markdown viewer webtext를 사용하면 실시간 확인이 가능하다. 이와 관련된 사항은 다른 문서로 정리해 볼 생각이다. Links GSL Shell project page https://github.com/franko/gsl-shell/ GSL Documentation https://franko.github.io/gsl-shell/ Download Release https://github.com/franko/gsl-shell/releases/tag/v2.3.4 ","permalink":"https://neosolaris.github.io/posts/gsl-shell/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003egsl-shell은 GSL(GNU Scientific Library에 luajit을 기반으로 만들어졌다.\u003c/li\u003e\n\u003cli\u003e매트릭스, 벡터 및 여러 함수 등을 쉽게 만들고 사용할 수 있다.\u003c/li\u003e\n\u003cli\u003e여러 함수에 대한 그래프를 출력을 지원한다.\u003c/li\u003e\n\u003cli\u003eluajit + 추가 함수 및 명령어로 구성되어 있다.\u003c/li\u003e\n\u003cli\u003e비슷한 다른 도구 중에 매우 우수한 연산 능력과 속도를 자랑한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e성능 최적화를 위해 직접 빌드하는 방법은 아래 깃허브 링크를 참조한다.\u003c/li\u003e\n\u003cli\u003e데비안, 우분투에서는 GSL외에 gsl-shell은 패키지가 없다.\u003c/li\u003e\n\u003cli\u003e처음 사용한다면 빌드된 바이너리를 설치하는 것이 좋다.\u003c/li\u003e\n\u003cli\u003e다운로드 릴리즈는 여러가지가 있으니 설명을 참고해서 적합한 것으로 내려받는다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install libgsl27 libgslcblas0\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e wget https://github.com/franko/gsl-shell/releases/download/v2.3.4/gsl-shell-dynamic-linux-x86-64.tar.gz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e tar xvfz gsl-shell-dynamic-linux-x86-64.tar.gz\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ls gsl-shell\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003ePATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$PATH\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$HOME\u003c/span\u003e/gsl-shell/bin  \u003cspan class=\"c1\"\u003e# ~/.bashrc에 추가 등록\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e gsl-shell  \u003cspan class=\"c1\"\u003e# 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eGSL Shell 2.3.4 -- Copyright (C) 2009-2022 Francesco Abbate\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eGNU Scientific Library -- Copyright (C) The GSL Team\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eLuaJIT 2.0.5 -- Copyright (C) 2005-2022 Mike Pall. https://luajit.org/\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eJIT: ON CMOV SSE2 SSE3 SSE4.1 AMD fold cse dce fwd dse narrow loop abc sink fuse\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# 나가기(Ctrl+d)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"기본-사용법\"\u003e기본 사용법\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e대화식이 아닌 소스를 작성해서 실행할 경우 아래 방법외에 \u003ccode\u003e#!/usr/bin/env gsl-shell\u003c/code\u003e을 첫 줄에 넣고 chmod로 실행권한을 주어 직접 실행해도 된다.\u003c/li\u003e\n\u003cli\u003e스크립트 확장자를 lua로 하는 것은 편집기 등에서 문법 강조등의 지원을 받기 위함도 있고 lua의 문법을 따르기 때문이기도 하다.\u003c/li\u003e\n\u003cli\u003e그러나 lua나 luajit에서는 정상 동작하지 않으므로 식별이 가능한 폴더를 만들고 정리해 두는 것이 좋다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e gsl-shell --help\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e gsl-shell  \u003cspan class=\"c1\"\u003e# 대화식 사용\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e gsl-shell my-program.lua   \u003cspan class=\"c1\"\u003e# 스크립트 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e이렇게 준비가 되었다면 아래 문서를 참고해서 공부하면 된다.\u003c/li\u003e\n\u003cli\u003e이것을 어떻게 쓰는가는 자신에게 달렸다.\u003c/li\u003e\n\u003cli\u003eGSL에 어느정도 아는 사용자라면 더욱 수월할 것이다.\u003c/li\u003e\n\u003cli\u003e참고로 설치된 GSL 라이브러리를 어떻게 사용하는지도 나와 있으니 참고한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"기타-도움말\"\u003e기타 도움말\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e문서대로 \u003ccode\u003euse \u0026quot;math\u0026quot;\u003c/code\u003e 등을 사용하면 에러가 난다.\n\u003cul\u003e\n\u003cli\u003egsl-shell/share/gsl-shell/import.lua 을 수정한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e...\n-- 아래 문장을 주석처리하고 그 아래 문장으로 고친다.\n-- local level = getinfo(2, \u0026#34;\u0026#34;) and 2 or 0 \nlocal level = 2\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003cli\u003e대화형 모드 사용시에 \u003ccode\u003erlwrap\u003c/code\u003e을 같이 사용하면 편리하다.\u003c/li\u003e\n\u003cli\u003e사용되는 모듈과 함수를 편집기에서 자동완성, 검색 등을 지원하는 것은 아직 모른다. 최소한 함수 이름을 추출해서 vim 등과 연동하거나 grep을 활용하는 방법으로 시작하기로 한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"문서작성시-수학식-표현\"\u003e문서작성시 수학식 표현\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e관련 프로그램(스크립트)를 작성한 후 도움말이나 문서를 작성할 때 가장 좋은 방법은 마크다운(markdown) 문서에 latex 문법으로 작성하는 것이다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/writing-mathematical-expressions\"\u003e사용방법\u003c/a\u003e을 참조한다.\u003c/li\u003e\n\u003cli\u003e즉, 문장 중에는 \u003ccode\u003e$수식$\u003c/code\u003e 으로 표현하고 독립적인 수식은 \u003ccode\u003e$$수식$$\u003c/code\u003e으로 표현하는 것이다.\u003c/li\u003e\n\u003cli\u003e깃허브나 기타 웹페이지에서 이를 잘 지원한다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003evscode\u003c/code\u003e에서는 \u003ccode\u003emarkdown all in one\u003c/code\u003e 플러그인을 설치하면 미리보기로 실시간으로 확인할 수 있다. 물론 수학표현식도 지원한다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003evim\u003c/code\u003e에서는 \u003ccode\u003ehugo\u003c/code\u003e로 로컬에서 서버를 띄어 실시간 확인하는 방법을 사용하거나 \u003ccode\u003efirefox\u003c/code\u003e의 \u003ccode\u003emarkdown\u003c/code\u003e지원 모듈인 \u003ca href=\"../markdown-viewer-webtext\"\u003emarkdown viewer webtext\u003c/a\u003e를 사용하면 실시간 확인이 가능하다.\u003c/li\u003e\n\u003cli\u003e이와 관련된 사항은 다른 문서로 정리해 볼 생각이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGSL Shell project page \u003ca href=\"https://github.com/franko/gsl-shell/\"\u003ehttps://github.com/franko/gsl-shell/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGSL Documentation \u003ca href=\"https://franko.github.io/gsl-shell/\"\u003ehttps://franko.github.io/gsl-shell/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDownload Release \u003ca href=\"https://github.com/franko/gsl-shell/releases/tag/v2.3.4\"\u003ehttps://github.com/franko/gsl-shell/releases/tag/v2.3.4\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"gsl-shell - Luajit GNU Scientific Library Shell"},{"content":"이미지 기본 용어 dpi(Dot per Inch) - 가로 세로 1 인치 당 점(Dot:둥근점)의 수, 인쇄에서 주로 사용 ppi(Pixel per Inch) - 가로 세로 1 인치 당 픽셀(Pixel:화소,사각점)의 수, 모니터에서 주로 사용 1 Inch - 2.54Cm DPI 해상도별 용도 사진 출력: 400 dpi 책, 포스터: 300 dpi 웹, 홈페이지: 72 dpi 이미지 사이즈 변경 APOD(Astronomy Picture of the Day) 사이트에서 말머리성운(The Horsehead Nebula in Infrared) 사진을 받아온다. https://apod.nasa.gov/apod/ap130422.html 파일을 열고 정보를 확인한 다음 필요한 사이즈로 변경한다. 파일 열기 - File \u0026gt; Open sRGB 유형 선택 keep 기존 - sRGB IEC61966-2.1 convert 변경 - Gimp built-in sRGB 파일정보 보기 (Image Properties) Alt + Enter : Image \u0026gt; Image Properties 사이즈 변경 (Scale Image) Image \u0026gt; Scale Image width 를 1225 -\u0026gt; 600 으로 조정 (자동 비례 조정) pixels, percent Scale 클릭 변경된 파일 정보를 보기 (Image Properties) Alt + Enter : Image \u0026gt; Image Properties 저장하기 Ctrl + E : File \u0026gt; Export to 파일명.jpg - jpg로 저장 Shift + Ctrl + E : File \u0026gt; Export as... - 다른 포맷으로 저장 JPEG로 저장 JPEG: Lossy compression Algorithm 용량은 효율적 알고리즘으로 줄일 수 있으나 품질에 손실을 준다. 이미지 잘라내기 - Crop an Image 원본 이미지를 불러와 필요한 영역으로 잘라내는 것.\nCrop an Image\nShift + C - Tools \u0026gt; Transform Tools \u0026gt; Crop Another Crop an Image\nSelect 툴(r)로 영역 선택 후 Image \u0026gt; Crop to Selection 회전(Rotate)과 뒤집기(Flip) Image \u0026gt; Image Transform Flip Horizontally (수평으로 뒤집기) Flip Vertically (수직으로 뒤집기) Rotate Clockwise (시계방향으로 회전) Rotate Counter Clockwiser (반시계방향으로 회전) Links https://www.gimp.org/tutorials/GIMP_Quickies/\n","permalink":"https://neosolaris.github.io/posts/gimp-quickies/","summary":"\u003ch2 id=\"이미지-기본-용어\"\u003e이미지 기본 용어\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003edpi(Dot per Inch) - 가로 세로 1 인치 당 점(Dot:둥근점)의 수, 인쇄에서 주로 사용\u003c/li\u003e\n\u003cli\u003eppi(Pixel per Inch) - 가로 세로 1 인치 당 픽셀(Pixel:화소,사각점)의 수, 모니터에서 주로 사용\u003c/li\u003e\n\u003cli\u003e1 Inch - 2.54Cm\u003c/li\u003e\n\u003cli\u003eDPI 해상도별 용도\n\u003cul\u003e\n\u003cli\u003e사진 출력: 400 dpi\u003c/li\u003e\n\u003cli\u003e책, 포스터: 300 dpi\u003c/li\u003e\n\u003cli\u003e웹, 홈페이지: 72 dpi\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"이미지-사이즈-변경\"\u003e이미지 사이즈 변경\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://apod.nasa.gov/apod/astropix.html\"\u003eAPOD\u003c/a\u003e(Astronomy Picture of the Day) 사이트에서 말머리성운(The Horsehead Nebula in Infrared) 사진을 받아온다. \u003ca href=\"https://apod.nasa.gov/apod/ap130422.html\"\u003ehttps://apod.nasa.gov/apod/ap130422.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e파일을 열고 정보를 확인한 다음 필요한 사이즈로 변경한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003col\u003e\n\u003cli\u003e파일 열기 - \u003ccode\u003eFile \u0026gt; Open\u003c/code\u003e sRGB 유형 선택\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ekeep\u003c/code\u003e 기존 - sRGB IEC61966-2.1\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econvert\u003c/code\u003e 변경 - Gimp built-in sRGB\u003c/li\u003e\n\u003c/ul\u003e\n\u003col\u003e\n\u003cli\u003e파일정보 보기 (Image Properties)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eAlt + Enter\u003c/code\u003e : \u003ccode\u003eImage \u0026gt; Image Properties\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003col\u003e\n\u003cli\u003e사이즈 변경 (Scale Image)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eImage \u0026gt; Scale Image\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ewidth 를 1225 -\u0026gt; 600 으로 조정 (자동 비례 조정)\u003c/li\u003e\n\u003cli\u003epixels, percent\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eScale\u003c/code\u003e 클릭\u003c/li\u003e\n\u003c/ul\u003e\n\u003col\u003e\n\u003cli\u003e변경된 파일 정보를 보기 (Image Properties)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eAlt + Enter\u003c/code\u003e : \u003ccode\u003eImage \u0026gt; Image Properties\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003col\u003e\n\u003cli\u003e저장하기\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eCtrl + E\u003c/code\u003e : \u003ccode\u003eFile \u0026gt; Export to 파일명.jpg\u003c/code\u003e - jpg로 저장\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eShift + Ctrl + E\u003c/code\u003e : \u003ccode\u003eFile \u0026gt; Export as...\u003c/code\u003e - 다른 포맷으로 저장\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"jpeg로-저장\"\u003eJPEG로 저장\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eJPEG: Lossy compression Algorithm\u003c/li\u003e\n\u003cli\u003e용량은 효율적 알고리즘으로 줄일 수 있으나 품질에 손실을 준다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"이미지-잘라내기---crop-an-image\"\u003e이미지 잘라내기 - Crop an Image\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e원본 이미지를 불러와 필요한 영역으로 잘라내는 것.\u003c/p\u003e","title":"Gimp - Quickies 사이즈 변경, 잘라내기, 회전, 뒤집기"},{"content":"Intro 그림파일 및 사진 편집 프로그램. 무료지만 전문가도 사용하는 훌륭한 그래픽 편집 툴. 다양한 플러그인 지원 RAW 무손실 사진 편집 지원 Install 우분투 22.04를 기준으로 설명한다. 한글 입력 문제 등으로 snap 설치는 권장하지 않는다. Flatpak 방식이 더 좋겠으나 역시 한글을 사용하려면 문제가 된다.\n기본 패키지 설치 $ sudo apt install gimp PPA 최신 패키지 설치 $ sudo add-apt-repository ppa:savoury1/gimp -y $ sudo apt-get update $ sudo apt install gimp -y 플러그인 설치 Links gimp install in ubuntu https://www.linuxcapable.com/how-to-install-gimp-on-ubuntu-22-04-lts/ ","permalink":"https://neosolaris.github.io/posts/gimp-install/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e그림파일 및 사진 편집 프로그램.\u003c/li\u003e\n\u003cli\u003e무료지만 전문가도 사용하는 훌륭한 그래픽 편집 툴.\u003c/li\u003e\n\u003cli\u003e다양한 플러그인 지원\u003c/li\u003e\n\u003cli\u003eRAW 무손실 사진 편집 지원\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cp\u003e우분투 22.04를 기준으로 설명한다. 한글 입력 문제 등으로 snap 설치는 권장하지 않는다. Flatpak 방식이 더 좋겠으나 역시 한글을 사용하려면 문제가 된다.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e기본 패키지 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install gimp\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ePPA 최신 패키지 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo add-apt-repository ppa:savoury1/gimp -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt-get update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install gimp -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"플러그인-설치\"\u003e플러그인 설치\u003c/h2\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003egimp install in ubuntu \u003ca href=\"https://www.linuxcapable.com/how-to-install-gimp-on-ubuntu-22-04-lts/\"\u003ehttps://www.linuxcapable.com/how-to-install-gimp-on-ubuntu-22-04-lts/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Gimp - Install"},{"content":"UI Font \u0026amp; Icons Size 우분투 환경에서 김프를 실행하면 메뉴와 아이콘 등이 매우 작게 표시되는 경우가 있다. 이를 바로 잡는 방법을 설명한다.\nChange Font Size 자신이 사용하는 OS와 테마에 따라 gtkrc파일이 다를 수 있다. 아래는 ubuntu 22.04, gimp 2.x, Dark 테마의 경우이다. 자신의 환경에 맞게 숫자 값을 적당히 조절한다.\n$ sudo vi /usr/share/gimp/2.0/themes/Dark/gtkrc ... # font_name = \u0026#34;Sans 11\u0026#34; font_name = \u0026#34;Sans 10\u0026#34; # 위 주석 아래에 다음을 추가하고 저장 ... $ gimp \u0026amp; # 김프 재실행 Change Icons Size 폰트를 먼저 조정이 끝나면 다음으로 아이콘을 수정하는 것이 편리하다. 김프에서 다음의 설정으로 이동한다.\nEdit\u0026gt; Preference \u0026gt; Interface \u0026gt; Icon Theme \u0026gt; Use Icon size from the theme 선택하고 OK 버튼 클릭 Links change icon and font size - https://superuser.com/questions/1513000/how-to-enlarge-gimp-ui-font-and-icon-size-for-hdpi-screen ","permalink":"https://neosolaris.github.io/posts/gimp-setup/","summary":"\u003ch2 id=\"ui-font--icons-size\"\u003eUI Font \u0026amp; Icons Size\u003c/h2\u003e\n\u003cp\u003e우분투 환경에서 김프를 실행하면 메뉴와 아이콘 등이 매우 작게 표시되는 경우가 있다. 이를 바로 잡는 방법을 설명한다.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eChange Font Size\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e자신이 사용하는 OS와 테마에 따라 gtkrc파일이 다를 수 있다. 아래는 ubuntu 22.04, gimp 2.x, Dark 테마의 경우이다. 자신의 환경에 맞게 숫자 값을 적당히 조절한다.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo vi /usr/share/gimp/2.0/themes/Dark/gtkrc\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e \u003cspan class=\"nv\"\u003efont_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Sans 11\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e  font_name = \u0026#34;Sans 10\u0026#34;  # 위 주석 아래에 다음을 추가하고 저장\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e... \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e gimp \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 김프 재실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eChange Icons Size\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e폰트를 먼저 조정이 끝나면 다음으로 아이콘을 수정하는 것이 편리하다. 김프에서 다음의 설정으로 이동한다.\u003c/p\u003e","title":"Gimp Setup"},{"content":" Install \u0026amp; Setup\ngimp install - 프로그램 및 플러그인 설치 gimp setup - 설정 Study\ngimp quickies - 이미지 사이즈(size/scale), 자르기(crop), 회전(rotate)과 반전(flip) 응용 및 기타\ngimp-glua - gimp graphic processing plugin using lua Links\nGimp Home - https://www.gimp.org Tutorials - https://www.gimp.org/tutorials/ ","permalink":"https://neosolaris.github.io/posts/gimp/","summary":"\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eInstall \u0026amp; Setup\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../gimp-install\"\u003egimp install\u003c/a\u003e - 프로그램 및 플러그인 설치\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../gimp-setup\"\u003egimp setup\u003c/a\u003e - 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eStudy\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../gimp-quickies\"\u003egimp quickies\u003c/a\u003e - 이미지 사이즈(size/scale), 자르기(crop), 회전(rotate)과 반전(flip)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e응용 및 기타\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003egimp-glua - gimp graphic processing plugin using lua\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLinks\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGimp Home - \u003ca href=\"https://www.gimp.org\"\u003ehttps://www.gimp.org\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eTutorials - \u003ca href=\"https://www.gimp.org/tutorials/\"\u003ehttps://www.gimp.org/tutorials/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Gimp - Gnu Image Manipulation Program"},{"content":"Intro 글쓴이: 박창범 고등과학원 물리학부 교수\n이 글 하나로 현대 표준 우주론 모형을 알 수 있다.\n단어 하나 문장 하나가 현재까지의 과학적 성과가 녹아 있다.\n더불어 이 분의 연구 성과와 철학도 녹아 있다.\n반복해서 읽고 하나 하나 구체적인 내용을 공부해 볼 가치가 있다.\n물론 그 분의 허락 없이 무단 전제하고 있다. 아래 원문 링크 참조\n박창범 고등과학원 교수 | 서울대학교에서 천문학을 전공하고, 1990년 미국 프린스턴대학교 천체물리과학과에서 우주론 분야를 연구했다. 1990년부터 칼텍 물리학과 연구원으로 재직하다가 1992~2003년에 서울대학교 천문학과 교수로, 2003년부터 지금까지는 고등과학원 물리학부 교수로 재직 중이다. 천체물리, 우주론, 고천문학 분야를 연구하고 있다. 저서로는 \u0026lt;인간과 우주\u0026gt;, \u0026lt;한국의 천문도\u0026gt;, \u0026lt;동아시아 일식도\u0026gt;, \u0026lt;하늘에 새긴 우리 역사\u0026gt;, Astronomy - Traditional Korean Science 등이 있다.\n재연되지 않는 단 한번 \u0026lsquo;우리 우주\u0026rsquo;의 진화 인류는 20세기에 우주의 실상과 변화 원리에 대한 이해에서 비약적인 성과를 이루었다. 약 한 세기 전, 우리의 인식 수준은 이제 겨우 태양계를 벗어나 그 너머에 별들의 세계가 펼쳐져 있다는 정도에 머물고 있었다. 또 우주를 지배하는 자연의 힘도 고전적 중력과 전자기력만 알려져 있을 뿐이었다. 20세기에 들어선 문턱에서 중력을 이해하는 새로운 이론이 발견되었고, 또한 극미의 세계에서 일어나는 미지의 현상들이 알려지면서, 강력과 약력이라는 새로운 힘들이 발견되었다. 이렇게 물리법칙에 대한 포괄적 지식을 얻어가는 한편으로 인류는 20세기 초엽부터 전 우주를 향하여 대담한 탐사를 시작하였다. 한 세기가 지난 오늘날, 세계의 여러 천문대에서 천체망원경들은 우주 전체를 샅샅이 들여다보고 있다.\n과학자들의 지식은 극미한 소립자 세계에서 수백억 광년에 이르는 전 우주 공간까지, 또 우주탄생의 찰나에서 무한 미래의 우주 종말까지 확장되었다. 비록 현대 과학이 대자연에 대한 전지(全知)를 갖추지는 못하였지만, 그리고 결코 그럴 수 없을지도 모르지만, 인류가 이끌어낸 우주에 대한 총체적 상은 경이로운 성취가 아닐 수 없다. 이 글은 현재까지 과학자들이 도달한 현대 천문학의 핵심적 내용을 간추려 담고자 하였다. 그리고 그 우주상이 인간의 세계관에 던지는 뜻 깊은 시사점을 찾고자 한다.\n다우주(多宇宙), 그리고 우리 우주 인간에게 우주란 질서를 갖추어 조화를 이루고 있는(cosmos), 존재하는 모든 것(universe)이다. 우주는 물리적으로 시공간, 물질, 그리고 자연현상으로 구성된다. 우주론이란 우주의 실상을 파악하고, 우주의 기원과 진화를 이해하고자 하는 학문이다. 우주론 학자들은 우주의 물리적 성질을 규정한 명세 내역과 우주가 태어나서 오늘에 이르기까지 일어난 일들을 수록한 한편의 각본을 작성하는 사람들이다.\n우주론 학자들이 천문학적 관측과 물리이론을 총동원하여 현재까지 알아낸, 우리가 살고 있는 ‘우리 우주’의 실상을 파악해 보자. 먼저 우주 공간에 대해 생각해 보자. 많은 관측적·실험적 사실로부터 검증된 현재의 표준 우주모형에 따르면 우주공간은 삼차원으로 무한하다. 이 무한한 우주공간은 특정한 중심이나 끝이 없고, 거시적인 규모로 보았을 때 모든 곳에서의 기하학적 성질이 똑같다. 즉 넓게 보았을 때 우주의 모든 곳은 유클리드 기하학이 성립하는 평탄한 공간이며, 물질의 양과 종류가 균일하다. 또 우주공간은 모든 곳에서 똑같은 비율로, 모든 방향으로 늘어나고 있다. 우주공간이 팽창하고 있다는 사실은 1929년에 외부은하의 후퇴속도로부터 처음 알려졌는데, 1990년대 말에는 공간이 가속적으로 팽창하고 있다는 새로운 사실이 알려졌다.\n표준모형에 따르면 우주는 지금으로부터 수십억 년 전까지는 공간이 늘어가는 속도가 점점 느려지는 감속적인 팽창을 해 왔으나, 현재는 속도가 점점 빨라지는 가속 팽창을 하고 있는 중이다. 균일·등방한 무한공간과 이러한 공간의 균일 가속팽창은 지난 세기에 이룬 위대한 천문학적 발견이었다.\n둘째로 우주의 시간에 대해 알아보자. ‘우리 우주’는 지금으로부터 137억 년 전에 자연 발생하였다. 우주의 수명은 무한대이어서 앞으로 영원히 존재할 예정이다. 즉 우주는 137억년의 유한한 과거와 무한한 미래를 두고 있다.\n현재 ‘우리 우주’를 채우고 있는 물질은 크게 네 가지가 있다. 첫째로 우주에는 아직 그 물리적 정체가 밝혀지지 않은 암흑에너지가 고르게 퍼져 있는데 우주질량의 약 75%를 차지하고 있다. 암흑에너지는 강한 음의 압력을 내는 물질로서 그로부터 발생되는 중력은 인력이 아닌 척력이다. 우주공간은 암흑에너지가 내는 척력 때문에 현재 가속적으로 팽창하고 있는 것이다 (실제로는 우주공간이 가속적으로 팽창하고 있다는 사실 때문에 암흑에너지의 존재가 인정되었다).\n우주에는 차가운 암흑물질이라는, 정체가 밝혀지지 않은 또 다른 물질이 있다. 차가운 암흑물질의 대부분은 양성자나 중성자와 같은 보통의 물질(바리온이라고 부른다)과는 다른 물질이지만 그로부터 발생되는 중력은 인력이다. 이것은 우주물질의 약 21%를 차지한다. 은하 속을 돌고 있는 별들과 은하단 속을 돌고 있는 은하들은, 은하나 은하단의 빛을 내는 물질이 붙들고 있을 수 있는 속도보다 훨씬 빠른 속도로 움직이고 있기 때문에 이 천체들에는 많은 암흑물질이 뭉쳐 있다고 믿어지고 있다. 암흑물질은 우주공간에 널리 퍼져 있기도 하다.\n우리에게 친숙한 행성과 별들은 양성자와 중성자가 결합한 원자, 즉 보통의 물질로 이루어져 있는데, 우주물질의 약 4%는 이 바리온 물질이 차지하고 있다. 따라서 오늘날 우주질량의 대부분은 암흑에너지, 차가운 암흑물질, 바리온 세 가지로 이루어져 있다. 이외에도 우주에는 빛, 중성미자, 전자와 같은 경입자, 자기장 등이 퍼져 있는데, 우주질량의 극히 일부에 해당된다.\n‘우리 우주’에서 물리학자들이 현재까지 발견한 자연현상을 지배하는 힘에는 네 가지가 있다. 물질의 에너지 때문에 발생되는 중력, 전하와 자기장 때문에 발생되는 전자기력, 핵자 사이에 발휘되는 강력, 그리고 방사능 붕괴에 관여하는 약력 등이 알려져 있다. 이 네 가지 힘들은 과학자들이 우주의 진화와 천체의 생성, 나아가 생명의 기원을 이해하는 기본 토대이다.\n이처럼 우주의 공간과 시간, 물질과 자연법칙에 대한 총체적 지식을 가지고 우주론 학자들은 ‘우리 우주’의 기원과 진화를 재구성할 수 있다. 우주공간은 발생 직후에 이미 무한히 큰 상태였다. 그 무한 공간은 모든 곳이 균일하게 늘어나면서 더욱더 큰 무한공간으로 끊임없이 팽창을 해왔다. 태초에 발생한 우주의 물질은 극도로 높은 온도와 밀도로 시작하였으나, 공간팽창으로 말미암아 여러 차례 상전이(相轉移)를 일으키면서 (마치 온도가 내려가면 물의 상태가 기체에서 액체로, 다시 고체로 변하듯이) 서서히 차가워지고 희박해져 왔다. 빛과 중성미자는 우주나이가 수만 년이었던 때까지는 우주의 에너지밀도의 대부분을 차지했으나, 공간팽창에 따라 밀도가 빠르게 감소하였고, 공간팽창에 의해 밀도가 천천히 감소하는 물질들(암흑에너지, 암흑물질, 바리온)이 오늘날 우주질량밀도의 대부분을 차지하게 되었다.\n우주공간 속에서 물질의 분포는 수십억 광년 이상의 큰 규모에서 보았을 때는 대단히 균일하지만, 작은 규모에서는 위치에 따라 약간의 밀도 차이가 태초부터 있어 왔다. 우주나이가 2만년 정도였던 때부터 밀도가 높은 곳으로 물질구름이 붕괴하기 시작하여, 수 억 년 뒤에는 수많은 별과 은하들이 찬란한 빛을 내며 생겨나기 시작했다. 이 빛은 태초부터 있었던 빛과는 달리 별 속에서 일어나는 핵융합 반응으로부터 나오는 빛이다.\n각각의 은하 내에서는 수많은 별들이 성간구름으로부터 태어났다가 죽어 되돌아가는 순환 과정을 겪고 있다. 수소와 헬륨같은 가벼운 원소들의 비율은 우주의 나이가 약 3분이었을 때에 결정되었는데, 이보다 무거운 원소들은 은하 내에서 태어난 무거운 별들이 핵융합 반응을 일으켜서 만들어진다. 무거운 별들은 일생을 마치며 폭발하는데, 이 때 함께 터져나간 중원소(수소와 헬륨보다 무거운 모든 원소)들은 새로운 별을 만드는 데에 섞여 들어가고, 별 주변의 행성과 생명체의 몸을 형성하는 필수 물질로 사용되었다.\n‘우리 우주’는 우리가 관찰할 수 있는 단 하나의 우주이다. 앞서 설명한 바와 같이 ‘우리 우주’는 시공간과 물질, 자연법칙에 있어 특정한 물리적 성질을 지니고 있다. 137억년의 긴 세월을 견디고 팽창해 온 ‘우리 우주’. 별을 잉태하고 중원소를 보존해 온 우리 은하. 행성이 생성될 때까지 기다려 주고 빛을 쪼여준 태양. 대기와 물을 붙들고 생명의 요람이 된 지구. 이 모든 것을 가능하게 한 것은 우주 물질밀도의 양과 불균일성의 정도, 소립자들의 개수와 질량, 네 가지 자연의 힘들의 상대적 크기와 성질 등에 부여된 놀랍게도 정밀한 균형 때문이다.\n그런데 단 한번 발생한 ‘우리 우주’의 돌이킬 수 없는 일방적 진화과정을 지켜보면서 이 우주의 물리적 특성과 기원을 설명하는 데에는 한계가 있다. 우주의 기원을 설명하는 데에 동원되는 고(高)에너지 자연현상에 대한 물리법칙들은 개연성과 확률만을 알려주기 때문에 재연이 불가능한 단 하나의 표본으로는 검증될 수 없기 때문이다. 하나의 과학적 이론이 객관적 진실로서 인정될 수 있는 때란 그 이론이 재연 가능한 자연현상과 비교가 가능한 경우이다. 우주론은 우주 전체의 기원을 설명하려는 궁극적인 문제에 있어서 우주가 단 한 개로 유일하여 재연이 불가능하다는 문제와 연구주체도 연구대상에 포함된다는, 주체-객체 분리가 불가능한 비과학적 주제라는 한계를 지니고 있다.\n이 어려움을 우회하는 하나의 착상이 다우주(多宇宙, multiverse) 가설이다. 다우주란 비록 서로 교신할 수 없어 인지될 수는 없지만 물리적 성질이 조금씩 다른 무한한 개수의 우주들로 이루어진 우주집단이다. 한 우주는 다른 우주와 전혀 무관하게 존재할 수 있으며, 다른 우주의 한 곳에서 발생할 수도 있다. 은하와 별을 키워내서 행성과 생명을 태어나게 한 ‘우리 우주’를 만들어내기 위해서는 극도의 정교함을 필요로 한다. 또 그렇기 때문에 이러한 특수한 성질을 갖춘 하나의 우주가 우연히 만들어진다는 사실을 받아들이기 힘들지만, 다우주 세계에서는 무수한 우주 중에 별과 생명의 탄생에 적합한 조건을 지닌 우주가 반드시, 그리고 무한히 많이 있게 마련이다. 마치 인간이 하나의 평범한 은하 속에 있는 천억 개의 별들 중에서 평범한 하나의 별인 태양 주위를 도는 행성들 중에 생명의 탄생과 진화에 적합한 행성인 지구에서 발생했듯이, 무한개의 우주 중에 우연히도 이 모든 드라마를 가능하게 한 적합한 우주가 필연적으로 있을 것이라는 생각이다.\n인간은 우주를 관찰하는 유일한 지적 생명체일까 은하들의 세계, 그리고 우리 은하 인간의 우주상은 지구의 일부를 무대로 한 원시적 세계상을 출발점으로 해서, 약 2500년 전부터는 태양과 태양계 행성들의 모임을 전 우주로 인식해오다가, 약 400년 전 태양계 너머의 별들의 세계까지 그 범위가 확장되었다. 2천년 동안 태양계가 우주 전체로 알려졌던 것처럼, 20세기에 들어설 때까지 우리 은하를 이루고 있는 별의 집단과 그 공간이 우주 전체라고 이해되었다. 별들이 무리를 지어 우리 은하를 이루고 있고, 이런 은하들이 우주에 수없이 널려 있다는 다은하설(多銀河說)이 입증된 것은 불과 80여 년 전의 일이다. 외부은하들은 1920년대에 그 존재가 처음 알려진 이후로 꾸준히 연구되다가 지난 20여 년간 세계 각국 천문학자들의 집중적인 연구 대상이 되어왔다. 그로 인해 수십억 광년 거리까지 은하들의 공간 분포가 탐사되고 있다. 은하가 처음 생성되었던 시점이 우주 나이가 수억 년이었던 때로 밝혀지고 있고, 나선은하와 타원은하의 형태가 주변 환경과 어떻게 관련되어 있는지, 또 그 속에서의 별 탄생이 어떻게 변화해 왔는지 등 은하들의 생성과 진화 과정이 규명되고 있다.\n공간이 무한한 ‘우리 우주’에는 무한 개의 은하들이 존재한다. 은하들이 물질 덩어리로서의 개체로 태어난 이유는 우주초기에 물질분포에 조그마한 불균일성이 발생했기 때문이었다. 태초에 우주공간을 팽창시키던 에너지에 필연적으로 양자역학적 요동(quantum fluctuation)이 있었는데, 이로 인해 물질밀도의 차이가 생겨났고, 훗날 물질이 중력에 끌려 밀도가 높은 곳으로 모여들어 은하가 생겨나게 된 것이다. 은하들은 거대규모에서의 물질밀도의 차이를 반영하여 더 큰 천체를 형성하고 있다. 은하들은 수십 개, 수백 개가 모여 은하군이나 은하단을 이룬다. 또 은하군과 은하단들이 여럿 늘어서 있는 집단을 초은하단이나 우주거대구조라고 부르며, 수억 광년에 걸쳐 은하들이 거의 없이 텅 비어 있는 곳을 거대 공동(void)이라고 부른다. 은하가 모여 이룬 이런 대규모 천체들은 현재에도 중력에 의해 형성 중에있는 천체들이다. 이렇게 은하들은 우주의 물질계를 모양 짓는 기본 세포와 같은 존재이다.\n나선은하의 내부에서는 성간구름과 별 사이에 물질의 순환이 이루어지고 있다. 은하 속에 뭉쳐 있는 암흑물질과 바리온 물질은 강한 자체 중력을 발생시켜서 자신의 물질을 묶어놓고 있다. 이 속에서 일부 성간구름은 충분한 밀도에 도달해 붕괴를 할 수 있고, 수많은 별들을 탄생시킨다. 성간구름이 수축해서 만들어진 별들은 중심부의 온도가 천만 도 이상 올라가면 핵융합 반응을 일으켜서 빛을 내며 살아간다. 별 속의 원소들은 탄생 당시의 수소가 결합해 헬륨이 되고, 헬륨이 결합해 탄소가 되는 일련의 핵융합 반응을 통해 중원소로 바뀌는데, 질량이 태양의 10배 이상에 이르는 별들은 핵연료가 고갈되는 순간 자체 중력을 이기지 못하고 무너져 내리다가 급격히 발생되는 중력에너지로 말미암아 폭발하게 된다.\n초신성 폭발 때 별 속에서 합성된 갖가지 중원소들은 은하 속으로 흩뿌려지는데, 은하의 자체 중력 때문에 대부분 은하 바깥으로는 퍼져나가지 못하고 주변의 성간구름에 섞였다가 새로운 별들을 만드는 재료로 다시 쓰인다. 중원소는 지구형 행성과 생명체를 만드는 데에 필수적인 원소이므로, 별을 탄생시키고 중원소를 축적해 온 은하의 존재는 생명 출현의 전제 조건이 되는 것이다.\n우리 은하는 질량이 보통의 은하들보다 약간 작은, 평범한 나선은하이다. 오랜 옛날에 별생성이 멈춘, 중원소가 거의 없는 타원은하들과는 달리 우리 은하는 현재에도 꾸준히 별들을 탄생시키고 있으며 중원소를 많이 지니고 있다. 우리가 중원소 덩어리인 지구를 터전으로 살고 있고, 태양계가 나선 은하 안에서 생성된 것은 결코 우연이 아니다. 나선은하는 중심의 은하핵(nucleus), 늙고 붉은 별들로 이루어진 둥그런 팽대부(bulge), 그보다 더 크지만 밀도가 낮은 헤일로(halo), 그리고 성간구름과 먼지로부터 젊고 푸른 별들이 태어나고 있는 납작한 원반(disk) 등으로 이루어져 있다. 나선은하에는 오랜 기간 동안 기체가 바깥에서 흘러 들어와서 원반을 만들고 새로운 젊은 별들을 탄생시켜 왔다고 생각된다. 반면에 타원은하는 생성초기에 또는 진화 과정 중에 별 생성이 끝났고, 현재는 늙고 붉은 가벼운 별들만이 남아 있다.\n우리 은하는 무한히 넓은 우주공간의 임의의 한 점을 차지하고 있을 뿐이고, 우주에는 우리 은하와 여러 모로 비슷한 외부은하들이 무수히 많다. 우리 은하는 약 30개의 다른 은하들과 함께 무리를 지어 있는데, 이 은하 떼를 ‘국부은하군’이라고 부른다. 국부은하군에서 가장 밝은 은하는 안드로메다은하이다. 국부은하군은 또 다른 여러 은하군과 처녀자리은하단 주변에 모여 있는데 이 전체를 ‘국부초은하단’이라고 한다. 국부초은하단은 다른 초은하단이나 우주거대구조에 비하면 매우 작고 가벼운 초은하단이다. 우리 주변 약 1억 광년의 공간 속에서 보았을 때 우리의 주소는 국부초은하단 내, 국부은하군 내, 우리 은하 내, 태양계 내, 그 세 번째 행성 지구인 것이다. 별들의 세계, 그리고 태양 별은 성간구름에서 태어나, 자신이 지니고 태어난 질량에 따라 정해진 수명을 살다가 다시 성간구름으로 되돌아간다. 은하 속에서 성간구름은 붕괴하려는 중력과 팽창하려는 기체압력이 균형을 이루고 있다가, 적절한 외부 자극이 주어져 중력이 우세해지면 무너져 내려 수많은 별들을 생성시킨다. 성간구름은 붕괴하면서 여러 조각으로 쪼개지는데, 이 와중에 쪼개진 각 조각이 수축해서 밀도가 높아져 온도가 1천만도로 올라가면 별로서 태어나게 된다.\n별이 중심부에서 핵융합 반응을 일으키면서 충분한 시간동안 안정된 수명을 살기 위해서는 질량이 태양의 0.08배에서 약 100배 사이이어야 한다. 무거울수록 별 속에 들어 있는 핵반응 연료는 많지만 핵반응 속도가 크게 빨라져서 수명이 짧아진다. 질량이 태양의 8%이어서 간신히 핵융합을 할 수 있는 가장 가벼운 별은 수명이 1조년에 이른다. 구름 조각이 이보다 더 가벼우면 핵반응을 일으키지 못해서 실패한 별이 되는데, 이들을 갈색왜성(brown dwarf)이라 부른다. 목성과 같은 천체가 이에 해당된다. 우리 별, 태양의 수명은 100억년이다.\n별이란 핵융합 반응으로 발생한 에너지로 빛을 내는 천체로 정의한다. 새로 태어난 별은 처음에 수소를 태우는데 이때의 별을 주계열성(主系列星)이라고 한다. 수소가 고갈되면 별은 중심부가 수축하고 외곽부는 크게 팽창하는데 이를 적색거성이라고 부른다. 이 시기에 별은 중심에서 헬륨, 탄소, 산소, 마그네슘, 황 등의 원소를 만들어나가는데, 질량이 태양의 10배를 넘는 가장 무거운 별들은 중심부의 핵융합 반응이 철을 만드는 단계까지 진행된다.\n그런데 물질의 온도와 밀도를 높여 자연적으로 핵융합이 진행될 수 있는 한계가 철 원소까지이다. 왜냐면 원자핵을 묶는 강력은 작용 범위가 매우 좁기 때문에 여러 양성자와 중성자가 결합하여 원자핵이 어느 이상 비대해지면 양성자들에 의한 전기적 반발력을 강한 핵력의 인력이 감당할 수 없어지기 때문이다. 따라서 철 원소까지는 온도가 충분히 높기만 하면 양성자와 중성자는 강력에 의해 결합하여 에너지가 낮은 더 안정한 상태가 되지만, 철보다 무거운 중원소는 에너지를 주어 억지로 결합시키지 않으면 만들 수 없고, 만들었다 하더라도 불안정하여 보통은 자연 붕괴를 하게 된다.\n결국 철까지 핵융합이 진행된 별의 중심부는 더 이상 핵에너지를 발생시킬 수 없는 상황에 이르고, 별의 중심부는 자체 중력을 버틸 압력이 부족하여 걷잡을 수 없는 붕괴를 맞이한다. 이 때 발생한 막대한 중력에너지는 함께 떨어져 내려오는 별 외곽부의 물질을 폭발시키는데, 이 현상이 초신성 폭발이다. 이 때 별을 이루던 물질의 상당량이 은하 속으로 되돌아가 성간구름에 섞여서 다음 세대의 별을 만드는 재료로 쓰이게 된다. 폭발한 별의 중심에는 별의 중심부 물질이 극도로 높은 밀도로 압축된 상태인 중성자별이나 블랙홀이 남는다.\n태양은 약 50억 년 전에 태어나 중년의 나이를 지녔으니, 수명의 반을 살아온 셈이다. 우리은하의 반지름은 약 10만 광년인데, 태양은 은하 중심에서 2만 6천 광년 떨어진 거리에 초속 220km의 속도로 원반 위에서 우리은하 둘레를 돌고 있다. 태양은 홀로 있는 별이어서 그 주위에 행성들이 안정된 궤도를 돌 수 있다. 태양은 인류에게 숭배의 대상이 될 만큼 지상의 모든 생명체와 자연현상에 지대한 영향을 미치는 특별한 별이지만, 우리 은하에 담겨 있는 천억 개의 별들 중에 전형적인 질량을 가진 평범한 별들 중 하나이다. 우주에는 우리 은하와 같은 은하가 무한개가 있으니, 태양과 같은 별도 무한히 많이 있다.\n행성들의 세계, 그리고 지구 성간구름 조각이 뭉쳐 별이 생성될 때 일부 물질은 별 속으로 끌려들어가지 못하고 원반 모양을 이루며 별 주위를 맴돌게 된다. 이 물질들의 일부는 스스로 뭉쳐 수축하지만 핵반응을 일으키지 못하는 작은 기체공 행성을 만들기도 하는데 목성과 같은 행성이 그러한 예이다. 또 구름에 섞인 성간먼지(중원소)들의 일부는 서로 부딪히며 결합해 지구와 같은 딱딱한 행성으로 자라날 수도 있다. 태양과 같은 보통의 질량을 지닌 별도 여러 개의 무거운 행성들을 거느리고 있으므로, 많은 별들이 행성계를 이루고 있으리라고 추측돼 왔다. 쌍성이나 다중성과 같이 한 개 이상의 별들이 서로 궤도 운동을 하는 곳에는 행성들이 생겨나기 힘들고, 생겨나더라도 행성계가 오래 유지되기 힘들다. 그러나 태양과 같은 홑별들은 주변에 일정한 중력을 미치고 있기 때문에 행성들이 안정된 궤도를 돌며 장기간 일정한 환경 속에서 진화를 해 나갈 수 있다. 따라서 대부분의 홑별 주변에는 행성계가 존재하리라 믿어지고 있는 것이다.\n태양계 밖에서 다른 별의 행성이 실제로 처음 발견된 것은 1995년이었다. 지난 10여 년간 가까운 별들을 탐사한 결과 2009년 6월 현재 275개의 외부행성계에서 349개의 행성들이 발견되었다 (http://exoplanet.eu/). 또한 외부행성은 향후 천문학계의 가장 중요한 탐사 대상 천체중의 하나가 될 것이다. 태양계 이외의 외부행성들의 존재는 과학적으로 당연히 예측되는 것이고, 그에 대한 탐사에서 새로운 과학적 원리에 대한 진전을 이루는 것을 기대하기는 힘들다. 그러나 이 탐사는 한걸음 더 나아가 외계생명체 발견과 생명의 기원을 이해하는 데에 그 궁극적 목표를 두고 있기 때문에 그 결과는 과학의 제 분야와 종교, 철학적 세계관에 지대한 영향을 미칠 수도 있다.\n지난 500년간 인간은 지구가 태양 주위를 도는 수많은 천체들 중 하나일 뿐이고, 태양은 우리 은하 주위를 도는 천억 개의 별들 중 하나일 뿐이고, 또 우리 은하는 우주에 흩어져 있는 무수한 은하들 중 하나임을 깨닫게 되었다. 이제 앞으로 외계의 지적 생명체가 발견된다면, 인간은 우주를 관찰하는 유일한 지적 생명체로의 지위를 잃게 될 것이다. 그리고 생명체가 지구라는 특별한 행성 위에서 우주 역사상 단 한 번 탄생한 것이 아니라, 전 우주의 수많은 곳에서 생명의 탄생이 있었으며 앞으로도 계속 일어날 평범한 자연현상 중의 하나임을 깨닫게 될지도 모른다.\nLinks 과학적 우주상1 http://scienceon.hani.co.kr/?mid=media\u0026amp;act=dispMediaListArticles\u0026amp;tag=%EB%B0%95%EC%B0%BD%EB%B2%94\u0026amp;document_srl=34929 과학적 우주상2 http://scienceon.hani.co.kr/?mid=media\u0026amp;act=dispMediaListArticles\u0026amp;tag=%EB%B0%95%EC%B0%BD%EB%B2%94\u0026amp;document_srl=34944 ","permalink":"https://neosolaris.github.io/posts/%EA%B3%BC%ED%95%99%EC%A0%81%EC%9A%B0%EC%A3%BC%EC%83%81/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e글쓴이: 박창범 고등과학원 물리학부 교수\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e이 글 하나로 현대 표준 우주론 모형을 알 수 있다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e단어 하나 문장 하나가 현재까지의 과학적 성과가 녹아 있다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e더불어 이 분의 연구 성과와 철학도 녹아 있다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e반복해서 읽고 하나 하나 구체적인 내용을 공부해 볼 가치가 있다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e물론 그 분의 허락 없이 무단 전제하고 있다. 아래 원문 링크 참조\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e박창범 고등과학원 교수 |  서울대학교에서 천문학을 전공하고, 1990년 미국 프린스턴대학교 천체물리과학과에서 우주론 분야를 연구했다. 1990년부터 칼텍 물리학과 연구원으로 재직하다가 1992~2003년에 서울대학교 천문학과 교수로, 2003년부터 지금까지는 고등과학원 물리학부 교수로 재직 중이다. 천체물리, 우주론, 고천문학 분야를 연구하고 있다. 저서로는 \u0026lt;인간과 우주\u0026gt;, \u0026lt;한국의 천문도\u0026gt;, \u0026lt;동아시아 일식도\u0026gt;, \u0026lt;하늘에 새긴 우리 역사\u0026gt;, Astronomy - Traditional Korean Science 등이 있다.\u003c/p\u003e","title":"과학적 우주상"},{"content":"Intro 다중 터미널 관리 프로그램 원격지에서 다양한 세션과 윈도우와 pane을 만들어 유지 관리. 다중 작업을 한 터미널 화면을 통해 구현할 수 있다. 세션을 유지하며 필요시 화면에 바로 띄울 수 있다. 터미널을 꺼도 세션이 살아있고 다시 연결할 수 있다. Install Debian, Ubuntu $ sudo apt install tmux Alpine $ doas apk add tmux Usage 기본 명령 $ tmux # 실행 $ tmux ls # 세션, 윈도우 등 확인 $ tmux a # detatch된 세션을 다시 attatch 하기 기본키(이하 생략) - Ctrl+b\nc : 새로운 창 열기 w : 윈도우 관련 동작 프로그램 확인 n : 다음 창 이동 p : 이전 창 이동 0..9 : 순번으로 창 이동 d : tmux 나가기(detatch), 다시 연결시 $ tmux a % : pane 수평 분할 \u0026quot; : pane 수직 분할 o : 다른 pane으로 이동 SETUP $ cat ~/.tmux.conf ## Set the default TERM set -g default-terminal tmux-256color ## Set Non Login Shell set -g default-command \u0026#34;${SHELL}\u0026#34; ## Mouse set set -g mouse on Links git home https://github.com/tmux/tmux/wiki getting started https://github.com/tmux/tmux/wiki/Getting-Started faq https://github.com/tmux/tmux/wiki/FAQ ","permalink":"https://neosolaris.github.io/posts/tmux/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e다중 터미널 관리 프로그램\u003c/li\u003e\n\u003cli\u003e원격지에서 다양한 세션과 윈도우와 pane을 만들어 유지 관리.\u003c/li\u003e\n\u003cli\u003e다중 작업을 한 터미널 화면을 통해 구현할 수 있다.\u003c/li\u003e\n\u003cli\u003e세션을 유지하며 필요시 화면에 바로 띄울 수 있다.\u003c/li\u003e\n\u003cli\u003e터미널을 꺼도 세션이 살아있고 다시 연결할 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDebian, Ubuntu\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install tmux\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eAlpine\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e doas apk add tmux\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e기본 명령\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e tmux     \u003cspan class=\"c1\"\u003e# 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e tmux ls  \u003cspan class=\"c1\"\u003e# 세션, 윈도우 등 확인  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e tmux a   \u003cspan class=\"c1\"\u003e# detatch된 세션을 다시 attatch 하기\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e기본키(이하 생략) - \u003ccode\u003eCtrl\u003c/code\u003e+\u003ccode\u003eb\u003c/code\u003e\u003c/p\u003e","title":"tmux - 다중 터미널 관리 툴"},{"content":"INTRO 예전에 터미널 상에서 웹문서를 참고하기 위해 사용. 현재 utf-8지원 및 컬러 지원, vi key binding 지원 등 다양한 기능 보유. 광고나 현란한 그림들, 그리고 하얀 화면으로부터 눈을 보호하자. 기술문서나 신문기사 또는 문서 위주의 작업을 주로 할 때 빠르고 간결. CPU와 MEMORY를 타 브라우저 보다 적게 사용하는 그야말로 친환경 브라우저. tmux에서 vim과 함께 사용하면 환상의 궁합이라 말할 수 있겠다. INSTALL Debian, Ubuntu $ sudo apt install lynx $ lynx --version $ lynx duckduckgo.com Alpine $ doas apk add lynx SETUP Vi Key 설정 - 화면 이동을 hjkl로 변경 1. 실행 후 `o` 명령으로 옵션 설정 2. VI keys -\u0026gt; [ON] 으로 3. Line edit style -\u0026gt; [Bash-like Bindings] 로 설정 4. 화면 상단에 Save options to disk: [x] 표시 5. 화면 가장 윗줄에 Accept Changes 클릭 Usage 화살키 \u0026lt;- 이전 웹페이지로 이동 화살키 -\u0026gt; 이후 웹페이지로 이동 화살키 up 페이지 상단으로 이동 화살키 down 페이지 하단으로 이동 h 도움말 o 옵션 p 프린트 g 입력한 사이트로 이동 m 메인으로 q 종료 /= 검색 delete= 히스토리 리스트 Links tmux home: https://lynx.browser.org ","permalink":"https://neosolaris.github.io/posts/lynx/","summary":"\u003ch2 id=\"intro\"\u003eINTRO\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e예전에 터미널 상에서 웹문서를 참고하기 위해 사용.\u003c/li\u003e\n\u003cli\u003e현재 utf-8지원 및 컬러 지원, vi key binding 지원 등 다양한 기능 보유.\u003c/li\u003e\n\u003cli\u003e광고나 현란한 그림들, 그리고 하얀 화면으로부터 눈을 보호하자.\u003c/li\u003e\n\u003cli\u003e기술문서나 신문기사 또는 문서 위주의 작업을 주로 할 때 빠르고 간결.\u003c/li\u003e\n\u003cli\u003eCPU와 MEMORY를 타 브라우저 보다 적게 사용하는 그야말로 친환경 브라우저.\u003c/li\u003e\n\u003cli\u003etmux에서 vim과 함께 사용하면 환상의 궁합이라 말할 수 있겠다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eINSTALL\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDebian, Ubuntu\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install lynx\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e lynx --version\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e lynx duckduckgo.com\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eAlpine\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e doas apk add lynx\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"setup\"\u003eSETUP\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eVi Key 설정 - 화면 이동을 hjkl로 변경\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1. 실행 후 `o` 명령으로 옵션 설정\n2. VI keys -\u0026gt; [ON] 으로\n3. Line edit style -\u0026gt; [Bash-like Bindings] 로 설정\n4. 화면 상단에 Save options to disk: [x] 표시\n5. 화면 가장 윗줄에 Accept Changes 클릭\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e화살키 \u0026lt;- 이전 웹페이지로 이동 \n화살키 -\u0026gt; 이후 웹페이지로 이동\n화살키 up 페이지 상단으로 이동\n화살키 down 페이지 하단으로 이동\n\nh 도움말\no 옵션\np 프린트\ng 입력한 사이트로 이동\nm 메인으로\nq 종료\n/= 검색\ndelete= 히스토리 리스트\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003etmux home: \u003ca href=\"https://lynx.browser.org\"\u003ehttps://lynx.browser.org\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Lynx - 터미널 텍스트 브라우저"},{"content":"Intro 이문서는 현재 최신 버전 nvim 0.8.1을 기준으로 한다. nvim의 기본 내장 기능으로도 매우 훌륭한 많은 것들이 제공된다. 중요한 플러그인과 기능이 내장된 것들도 많다. 중복되거나 불필요한 플러그인을 많이 설치하기보다는 기본 제공 기능을 충분히 살펴보고 가볍고 효율적으로 사용하는 것이 좋을 듯. Features lsp(Language Server Protocol) 내장 treesitter 내장 맨페이지와 터미널에뮬레이터: :Man, :terminal vim과 차이 비교: :help nvim-from-vim 훌륭한 defaults 기능들(아래 Defaults 섹션 참조) Defaults help로 확인 :help defaults command-line highlighting commands: :checkhealth nvim의 상태 검사 :dr[op] {file} Edit the first {file} in a window :Man {name} manpage view :match can be invoked before highlight group is defined :source reset config works with lua :write with ++p flag creates parent directories :terminal terminal support 맨페이지 보기 - man.lua로 동작한다. :Man printf printf() 함수 맨페이지 보기(수평) :vertical Man printf 창 수직분할 보기 :Man {sect} {name} 섹션 지정 맨페이지 :help Man 관련 도움말 보기 Links neovim.io https://neovim.io/ ","permalink":"https://neosolaris.github.io/posts/nvim-features/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e이문서는 현재 최신 버전 nvim 0.8.1을 기준으로 한다.\u003c/li\u003e\n\u003cli\u003envim의 기본 내장 기능으로도 매우 훌륭한 많은 것들이 제공된다.\u003c/li\u003e\n\u003cli\u003e중요한 플러그인과 기능이 내장된 것들도 많다.\u003c/li\u003e\n\u003cli\u003e중복되거나 불필요한 플러그인을 많이 설치하기보다는 기본 제공 기능을 충분히 살펴보고 가볍고 효율적으로 사용하는 것이 좋을 듯.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"features\"\u003eFeatures\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003elsp(Language Server Protocol) 내장\u003c/li\u003e\n\u003cli\u003etreesitter 내장\u003c/li\u003e\n\u003cli\u003e맨페이지와 터미널에뮬레이터: \u003ccode\u003e:Man\u003c/code\u003e, \u003ccode\u003e:terminal\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003evim과 차이 비교: \u003ccode\u003e:help nvim-from-vim\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e훌륭한 defaults 기능들(아래 Defaults 섹션 참조)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"defaults\"\u003eDefaults\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ehelp로 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e:help defaults\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003ecommand-line highlighting\u003c/li\u003e\n\u003cli\u003ecommands:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e:checkhealth   nvim의 상태 검사\n:dr[op] {file} Edit the first {file} in a window \n:Man {name}    manpage view\n:match         can be invoked before highlight group is defined\n:source        reset config works with lua\n:write         with ++p flag creates parent directories\n:terminal      terminal support\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e맨페이지 보기 - \u003ccode\u003eman.lua\u003c/code\u003e로 동작한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e:Man printf           printf() 함수 맨페이지 보기(수평)\n:vertical Man printf  창 수직분할 보기\n:Man {sect} {name}    섹션 지정 맨페이지\n:help Man             관련 도움말 보기\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eneovim.io \u003ca href=\"https://neovim.io/\"\u003ehttps://neovim.io/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"nvim 기본 제공 기능들"},{"content":"Intro A fast, extensible, and customizable web browser\n빠르고 다양한 확장과 설정이 가능한 웹 브라우저 Lua 기반 설정으로 개인환경을 구축하기에도 좋다. vi(m)을 사용하는 데 익숙하다면 더욱 편리하게 사용할 수 있다. 가령, vi와 같이 normal, command line, insert mode를 제공한다. Install Ubuntu, Debian $ sudo apt install luakit Build - Ubuntu/Debian Pre Requirement $ sudo apt install libgtk-3-dev libwebkit2gtk-4.0-dev libgstreamer1.0-dev Build git clone https://github.com/luakit/luakit.git cd luakit make sudo make install # /usr/local/bin Quick-start Guide Using Luakit $ luakit -h $ luakit google.com 주요 명령어 i — insert mode. : — command mode. Ctrl-z — passthrough mode. o — open URL. t — open URL in new tab. w — open URL in new window. d/Ctrl-w — close tab. D/ZQ — close window. ZZ — save session and close window. 도움말 및 관련 문서 보기 \u0026lt;F1\u0026gt; - normal mode :help - command line mode 웹브라우징 - 사이트 열기 및 이동 :open URL - command line mode o + URL입력 - normal mode (하단 command line에 입력) :tabopen URL - open URL in a new tab :winopen URL - open URL in a new window H - 이전 페이지로 이동 J - 이후 페이지로 이동 페이지 내 이동 및 페이지 키워드 검색 h,j,k,l - 페이지 내 상하좌우 이동 \u0026lt;space\u0026gt;, \u0026lt;Ctrl-f\u0026gt; - 다음 화면 아래 이동 \u0026lt;Ctrl-b\u0026gt; - 이전 화면 위로 이동 0, gg - 페이지 맨 처음으로 G - 페이지 맨 끝으로 / Keyword - 페이지 내에서 Keyword 찾기 n,N - 다음 Keyword, 이전 Keyword 이동 i - 입력(편집) 모드 \u0026lt;Tab\u0026gt; - 페이지 내 아래로 링크이동 \u0026lt;Shift-Tab\u0026gt; - 페이지 내 위로 링크이동 탭간 이동 및 제어 :tabopen URL - 새로운 탭으로 URL 열기 d - 현재 탭 닫기 u - 닫은 탭 다시 열기 J - 이전 탭으로 이동 K - 이후 탭으로 이동 Bookmarks B - 현재 페이지 북마크 추가 gb or gB - 현재 탭 또는 새로운 탭에 북마크 페이지 열고 사이트 연결 Configuration - 설정 Lua 설정 파일 우선 순위 luakit을 실행한 현재 디렉토리 lua 파일이 설치되어 있는 시스템 디렉토리: ex) /usr/lib, /usr/local/lib luakit 설치 파일 위치: /usr/share/luakit/lib/ luakit 사용자 디렉토리: ~/.config/luakit/ 시스템 설정 디렉토리: /etc/xdg/luakit/ 위의 리스트를 확인하려면 luakit 브라우저에서 다음과 같이 확인할 수 있다.\n:lua w:notify(package.path:gsub(\u0026#34;;\u0026#34;,\u0026#34;\\n\u0026#34;)) 일반 사용자 설정 ~/.config/luakit/userconf.lua 설정 사용례 - 웹페이지 내 문자열 복사 명령을 \u0026lt;Ctrl-c\u0026gt;로 수정하기 --- userconf.lua local modes = require \u0026#34;modes\u0026#34; modes.add_binds(\u0026#34;normal\u0026#34;, {{ \u0026#34;\u0026lt;Control-c\u0026gt;\u0026#34;, \u0026#34;Copy selected text.\u0026#34;, function () luakit.selection.clipboard = luakit.selection.primary end }}) -- maps \u0026#34;\u0026lt;Control-p\u0026gt;\u0026#34; to the same action as \u0026#34;gT\u0026#34; (go to previous tab), and -- keeps \u0026#34;gT\u0026#34; binded as well modes.remap_binds(\u0026#34;normal\u0026#34;, { {\u0026#34;\u0026lt;Control-p\u0026gt;\u0026#34;, \u0026#34;gT\u0026#34;, true} }) Tips 현재 페이지의 URL을 복사하려면 - 하단 URL 표시를 3-click 하여 \u0026lt;Ctrl-c\u0026gt; 테마를 바꾸려면 테마를 가져와 theme.lua로 심볼릭 링크해서 사용한다. $ cd ~/.config/luakit/ $ git clone https://github.com/twnaing/base16-luakit.git $ ln -s base16-luakit/themes/base16-gruvbox-dark-soft.lua theme.lua $ cp /etc/xdg/luakit/rc.lua ~/.config/luakit/ $ luakit \u0026amp; 다크모드 설정 :settings application.prefer_dark_mode -\u0026gt; enabled 설정 후 브라우저 재실행\n문제해결 다크모드: 현재 최신버전 2.3 (Ubuntu Package Version), 2.3.3 (Source Build Version) 모두 darkmode 가 되지 않는다. 설정을 하고 재실행 해도 안된다. 화면 초기에 white flash 현상은 webkit 자체에서 초기 화이트 랜더링으로 설계되어서 당장 없애기는 불가능하다. youtube의 영상도 동작하지 않음. 플레이에 적당한 브라우저가 아니라고 나온다. 물론 libgstreamer를 설치해 주었지만 소용이 없다. 이 점만 개선되면 더 이상 바랄게 없으나 페이지마다 눈이 부셔서 오래 웹서핑을 하고 문서 등을 참고할 때 피곤하다. 당문간 firefox와 병행해서 써야겠다. Links Luakit Quick Start https://luakit.github.io/docs/pages/03-quick-start-guide.html Luakit FAQ https://luakit.github.io/docs/pages/02-faq.html ","permalink":"https://neosolaris.github.io/posts/luakit/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eA fast, extensible, and customizable web browser\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e빠르고 다양한 확장과 설정이 가능한 웹 브라우저\u003c/li\u003e\n\u003cli\u003eLua 기반 설정으로 개인환경을 구축하기에도 좋다.\u003c/li\u003e\n\u003cli\u003evi(m)을 사용하는 데 익숙하다면 더욱 편리하게 사용할 수 있다.\u003c/li\u003e\n\u003cli\u003e가령, vi와 같이 normal, command line, insert mode를 제공한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eUbuntu, Debian\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install luakit\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"build---ubuntudebian\"\u003eBuild - Ubuntu/Debian\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePre Requirement\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install libgtk-3-dev libwebkit2gtk-4.0-dev libgstreamer1.0-dev\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eBuild\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003egit clone https://github.com/luakit/luakit.git\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ecd luakit\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003emake\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo make install  # /usr/local/bin\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"quick-start-guide\"\u003eQuick-start Guide\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eUsing Luakit\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luakit -h\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luakit google.com\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e주요 명령어\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ei — insert mode.\n: — command mode.\nCtrl-z — passthrough mode.\no — open URL.\nt — open URL in new tab.\nw — open URL in new window.\nd/Ctrl-w — close tab.\nD/ZQ — close window.\nZZ — save session and close window.\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e도움말 및 관련 문서 보기\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;F1\u0026gt;\u003c/code\u003e - normal mode\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:help\u003c/code\u003e - command line mode\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e웹브라우징 - 사이트 열기 및 이동\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e:open URL\u003c/code\u003e - command line mode\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eo\u003c/code\u003e + URL입력 - normal mode (하단 command line에 입력)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:tabopen URL\u003c/code\u003e - open URL in a new tab\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:winopen URL\u003c/code\u003e - open URL in a new window\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eH\u003c/code\u003e - 이전 페이지로 이동\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eJ\u003c/code\u003e - 이후 페이지로 이동\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e페이지 내 이동 및 페이지 키워드 검색\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eh\u003c/code\u003e,\u003ccode\u003ej\u003c/code\u003e,\u003ccode\u003ek\u003c/code\u003e,\u003ccode\u003el\u003c/code\u003e - 페이지 내 상하좌우 이동\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;space\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026lt;Ctrl-f\u0026gt;\u003c/code\u003e - 다음 화면 아래 이동\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;Ctrl-b\u0026gt;\u003c/code\u003e - 이전 화면 위로 이동\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e0\u003c/code\u003e, \u003ccode\u003egg\u003c/code\u003e - 페이지 맨 처음으로\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eG\u003c/code\u003e - 페이지 맨 끝으로\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/ Keyword\u003c/code\u003e - 페이지 내에서 Keyword 찾기\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003en\u003c/code\u003e,\u003ccode\u003eN\u003c/code\u003e - 다음 Keyword, 이전 Keyword 이동\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ei\u003c/code\u003e - 입력(편집) 모드\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;Tab\u0026gt;\u003c/code\u003e - 페이지 내 아래로 링크이동\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;Shift-Tab\u0026gt;\u003c/code\u003e - 페이지 내 위로 링크이동\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e탭간 이동 및 제어\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e:tabopen URL\u003c/code\u003e - 새로운 탭으로 URL 열기\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ed\u003c/code\u003e - 현재 탭 닫기\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eu\u003c/code\u003e - 닫은 탭 다시 열기\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eJ\u003c/code\u003e - 이전 탭으로 이동\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eK\u003c/code\u003e - 이후 탭으로 이동\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eBookmarks\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eB\u003c/code\u003e - 현재 페이지 북마크 추가\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003egb\u003c/code\u003e or \u003ccode\u003egB\u003c/code\u003e - 현재 탭 또는 새로운 탭에 북마크 페이지 열고 사이트 연결\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"configuration---설정\"\u003eConfiguration - 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLua 설정 파일 우선 순위\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eluakit을 실행한 현재 디렉토리\u003c/li\u003e\n\u003cli\u003elua 파일이 설치되어 있는 시스템 디렉토리: ex) \u003ccode\u003e/usr/lib\u003c/code\u003e, \u003ccode\u003e/usr/local/lib\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eluakit 설치 파일 위치: \u003ccode\u003e/usr/share/luakit/lib/\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eluakit 사용자 디렉토리: \u003ccode\u003e~/.config/luakit/\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e시스템 설정 디렉토리: \u003ccode\u003e/etc/xdg/luakit/\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e위의 리스트를 확인하려면 luakit 브라우저에서 다음과 같이 확인할 수 있다.\u003c/p\u003e","title":"Luakit - lua 기반 웹브라우저"},{"content":"Intro Tutorial Sam Command Language Links sam structural regular expression http://doc.cat-v.org/bell_labs/structural_regexps/se.pdf sam command tutorial http://doc.cat-v.org/bell_labs/sam_lang_tutorial/sam_tut.pdf ","permalink":"https://neosolaris.github.io/posts/vis-sre/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003ch2 id=\"tutorial-sam-command-language\"\u003eTutorial Sam Command Language\u003c/h2\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003esam structural regular expression \u003ca href=\"http://doc.cat-v.org/bell_labs/structural_regexps/se.pdf\"\u003ehttp://doc.cat-v.org/bell_labs/structural_regexps/se.pdf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003esam command tutorial \u003ca href=\"http://doc.cat-v.org/bell_labs/sam_lang_tutorial/sam_tut.pdf\"\u003ehttp://doc.cat-v.org/bell_labs/sam_lang_tutorial/sam_tut.pdf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Vis - Structural Regular Expressions"},{"content":"Intro vi를 계승하면서도 현재적이고 새로운 코드, 심플하면서도 효과적인 에디터를 지향 sam 과 structual regular expression 을 도입 효과적인 코드 하이라이팅 - Parsing Expression Grammars (Lua LPeg) lua Api 제공으로 확장가능 - vim, nvim과는 다르게 vim 설정법을 사용하지 않음 vimscipt 사용하지 않음, luajit도 사용하지 않음 설치 용량이 1MB 내외 (물론 lua5.3도 함께 설치해야한다.) 장점과 단점 장점\n가볍고 빠르다. 기본 명령은 vim의 확장 명령이 아닌 vi의 것을 사용한다. Structual regular expression 지원 lua 확장 제공. utf-8 지원 단점\nvim 고유 명령 및 vimscript를 사용하지 않는다. (장점일 수도) vim에서 사용하던 각종 플러그인과 기능을 대부분 지원하지 않는다. vimscript및 문법을 사용하지 않는다. (단점으로 볼수도) encryption, compression, tar, zip, ftp, http, ssh 지원 안함. 단, 플러그인으로 보완할 수 있다. Install Requirement - 설치 요구사항: 패키지로 설치하는 것이 편리\nlibtermkey curses (recommended) Lua \u0026gt;= 5.2 (for Lua API Support) LPeg \u0026gt;= 0.12 (for syntax highlighting) TRE (optional for more memory efficient regex search) Source Compile\n$ git clone https://github.com/martanne/vis $ cd vis $ ./configure \u0026amp;\u0026amp; make \u0026amp;\u0026amp; sudo make install Package Install - Ubuntu $ sudo apt install vis Package Install - Alpine # apk add vis Setup /usr/share/vis/visrc.lua - 설정 파일 샘플 /usr/share/vis/lexers/ - lexers files /usr/share/vis/plugins/ - plugins written in lua /usr/share/vis/themes/ - themes written in lua /etc/vis/visrc.lua - root sertup file ~/.config/vis/visrc.lua - user setup file $ mkdir -p ~/.config/vis $ vis ~/.config/vis/visrc.lua $ vis hello.c :help visrc.lua 설정 예 require(\u0026#39;vis\u0026#39;) vis.events.subscribe(vis.events.INIT, function() -- Your global configuration options vis:command(\u0026#39;set change-256-colors off\u0026#39;) --keyboard shortcuts-- vis:command(\u0026#39;map insert \u0026lt;C-s\u0026gt; \u0026lt;Escape\u0026gt;:w\u0026lt;Enter\u0026gt;\u0026#39;) vis:command(\u0026#39;map normal \u0026lt;C-s\u0026gt; :w\u0026lt;Enter\u0026gt;\u0026#39;) vis:command(\u0026#39;map! insert \u0026lt;M-C-h\u0026gt; \u0026lt;Escape\u0026gt;dbi\u0026#39;) end) vis.events.subscribe(vis.events.WIN_OPEN, function(win) -- Your per window configuration options e.g. vis:command(\u0026#39;set number\u0026#39;) vis:command(\u0026#39;set relativenumbers\u0026#39;) vis:command(\u0026#39;set tabwidth 2\u0026#39;) vis:command(\u0026#39;set expandtab\u0026#39;) vis:command(\u0026#39;set autoindent\u0026#39;) vis:command(\u0026#39;set cursorline\u0026#39;) vis:command(\u0026#39;set colorcolumn\u0026#39;) vis:command(\u0026#39;set ignorecase\u0026#39;) vis:command(\u0026#39;set syntax\u0026#39;) end) Usage - 기본 명령어 command options $ vis -v # Print version information and exit $ vis [+command] [--] [files...] Modes\nnormal operator pending insert replace visual Undo/Redo\nu - undo C-r - redo g-, :earlier - restore text earlier g+, :later - restore text later Marks\n\u0026quot; - default mark '^ - active selections when leaving visual mode 'a-'z - general purpose marks No marks across files are supported. Marks are not preserved over editing sessions Jump list\ng\u0026lt; - jump backward g\u0026gt; - jump forward g\u0026lt; - save currently active selections Registers Registers are named list of text. Uninitialzed register slots default to the empty string.\n\u0026quot;\u0026quot; - default register \u0026quot;a-\u0026quot;z - general purpose registers \u0026quot;A-\u0026quot;Z - append to corresponding general purpose registers \u0026quot;*,\u0026quot;+ - system clipboard integration via shell script vis-clipboard \u0026quot;0 - yank register, most recently yanked range \u0026quot;1-\u0026quot;9,\u0026quot;\u0026amp; - sub expression matches of most recent x or y command \u0026quot;/ - search register, most recently used search pattern \u0026quot;: - command register, most recentyl executed command \u0026quot;_ - black hole(/dev/null) register, ignore content is always empty \u0026quot;# - selection number(readonly) If no explicit register is specified the default register is used. Macros\nEncoding, Tab and Newline handling\nUTF-8 encoded with \\n line endings legacy encodings or non-Unix line endigs: user iconv, dos2unix \u0026lt;Tab\u0026gt; can optionally be expanded to a configurable number of spaces. Mouse Support\nThe mouse is currently not used at all VI(M) KEY BINDINGS vi(m)과 거의 같은 키정의를 제공한다. 특별한 경우가 아니라면 큰 문제 없다.\nOperators\nc - change, delete range and enter insert mode d - delete, cut range to register \u0026lt; - shift-left, decrease indent \u0026gt; - shift-right, increase indent y - yank, copy range to register = - format, filter range through fmt gu - make lowercase gU - make uppercase g~ - swap case J - join lines, insert spaces in between gJ - join lines remove any delimiting white spaces p - put register content after cursor P - put register content before cursor Motions Motions take an initial file position and transform it to a destination file position, thereby defining a range.\n0 start of line b previous start of a word B previous start of a WORD $ end of line e next end of a word E next end of a WORD F⟨char⟩ to next occurrence of ⟨char⟩ to the left f⟨char⟩ to next occurrence of ⟨char⟩ to the right ^ first non-blank of line g0 begin of display line g$ end of display line ge previous end of a word gE previous end of a WORD gg begin of file G goto line or end of file gj display line down gk display line up gh codepoint left gl codepoint right gH byte left gL byte right g_ last non-blank of line gm middle of display line g| goto column h char left H goto top/home line of window j line down k line up l char right L goto bottom/last line of window % match bracket, quote or backtick } next paragraph ) next sentence N repeat last search backwards n repeat last search forward [{ previous start of block ]} next start of block [( previous start of parentheses pair ]) next start of parentheses pair { previous paragraph ( previous sentence ; repeat last to/till movement , repeat last to/till movement but in opposite direction # search word under selection backwards * search word under selection forwards T⟨char⟩ till before next occurrence of ⟨char⟩ to the left t⟨char⟩ till before next occurrence of ⟨char⟩ to the right ?pattern to next match of pattern in backward direction /pattern to next match of pattern in forward direction w next start of a word W next start of a WORD Text objects w word W WORD s sentence p paragraph [, ], (, ), {, }, \u0026lt;, \u0026gt;, \u0026#34;, \u0026#39;, ` block enclosed by these symbols gn matches the last used search term in forward direction gN matches the last used search term in backward direction al current line il current line without leading and trailing white spaces Multiple Selections VI(M) COMMANDS File and Window management :new 새로운 빈창 열기 (수평) :vnew 새로운 빈창 열기 (수직) Runtime key mappings Keyboard Layout specific Mappings Undo/Redo SET OPTIONS SAM Structural Regular Expression Commands 이것이야말로 lua API와 함께 vis를 사용하는 이유라 할 것이다. 따로 문서를 정리할 예정이며 충분한 연습이 필요하다.\nvis sre - Vis Sam Structural Regular Expressions Plugin Install and Setup TIPS vis에서는 line wrap 설정이 따로 없고 default로 적용된다. Links Github vis - https://github.com/martanne/vis vis-plugins - https://github.com/martanne/vis/wiki/Plugins vis-plugins - https://erf.github.io/vis-plugins/ sam - http://sam.cat-v.org/ structural regexps - http://doc.cat-v.org/bell_labs/structural_regexps/ sam lang tutorial - http://doc.cat-v.org/bell_labs/sam_lang_tutorial/ ","permalink":"https://neosolaris.github.io/posts/vis/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003evi를 계승하면서도 현재적이고 새로운 코드, 심플하면서도 효과적인 에디터를 지향\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../http://sam.cat-v.org/\"\u003esam\u003c/a\u003e 과 structual regular expression 을 도입\u003c/li\u003e\n\u003cli\u003e효과적인 코드 하이라이팅 - Parsing Expression Grammars (Lua LPeg)\u003c/li\u003e\n\u003cli\u003elua Api 제공으로 확장가능 - vim, \u003ca href=\"../nvim\"\u003envim\u003c/a\u003e과는 다르게 vim 설정법을 사용하지 않음\u003c/li\u003e\n\u003cli\u003evimscipt 사용하지 않음, luajit도 사용하지 않음\u003c/li\u003e\n\u003cli\u003e설치 용량이 1MB 내외 (물론 lua5.3도 함께 설치해야한다.)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"장점과-단점\"\u003e장점과 단점\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e장점\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e가볍고 빠르다.\u003c/li\u003e\n\u003cli\u003e기본 명령은 vim의 확장 명령이 아닌 vi의 것을 사용한다.\u003c/li\u003e\n\u003cli\u003eStructual regular expression 지원\u003c/li\u003e\n\u003cli\u003elua 확장 제공.\u003c/li\u003e\n\u003cli\u003eutf-8 지원\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e단점\u003c/p\u003e","title":"Vis - Combining Modal Editing with Structual Regular Expressions"},{"content":"기본 사용법 $ docker images # 도커 이미지 리스트 확인 $ docker images -all # 히든 이미지까지 모두 보기 $ docker rmi \u0026lt;ID\u0026gt; # image ID로 제거 $ docker rmi -f \u0026lt;ID\u0026gt; # image ID로 강제로 제거 Docker none image 정리하기 $ docker container prune # 컨테이너 모두 종료 $ docker image prune # \u0026lt;none\u0026gt; 이미지 모두 제거 $ docker system pruen # 한 번에 처리 ","permalink":"https://neosolaris.github.io/posts/docker-images-remove/","summary":"\u003ch2 id=\"기본-사용법\"\u003e기본 사용법\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker images  \u003cspan class=\"c1\"\u003e# 도커 이미지 리스트 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker images -all  \u003cspan class=\"c1\"\u003e# 히든 이미지까지 모두 보기\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker rmi \u0026lt;ID\u0026gt;  \u003cspan class=\"c1\"\u003e# image ID로 제거\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker rmi -f \u0026lt;ID\u0026gt;  \u003cspan class=\"c1\"\u003e# image ID로 강제로 제거\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"docker-none-image-정리하기\"\u003eDocker none image 정리하기\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker container prune  \u003cspan class=\"c1\"\u003e# 컨테이너 모두 종료\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker image prune   \u003cspan class=\"c1\"\u003e# \u0026lt;none\u0026gt; 이미지 모두 제거\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker system pruen  \u003cspan class=\"c1\"\u003e# 한 번에 처리\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Docker Images Remove - 도커 이미지 제거"},{"content":"Intro busybox는 작고 가볍고 빠른 POSIX 표준 유틸 모음이다. docker에서 여러 가지로 응용해서 사용할 수 있다. 응용 임베디드 시스템에 빌드하기 Kubernates에 init container로 사용하기 HTTP 웹서버로 돌리기 가상컨테이너 볼륨서버(스토리지)로 사용하기 기본 사용례 busybox 최신버전 이미지 받고 실행 $ docker run -it --rm busybox busybox + myapp : myapp은 리눅스환경에서 정적컴파일한 바이너리 $ cat Dockerfile # Write Dockerfile FROM busybox COPY ./my-static-binary /my-static-binary CMD [\u0026#34;/my-static-binary\u0026#34;] $ docker build -t busybox-myapp . # Build Image $ docker run -t --rm busybox-myapp # Run Container busybox + httpserver : 웹서버동작(httpserver는 static compile binary) $ cat Dockerfile # Write Dockerfile FROM busybox COPY ./httpserver /home/ CMD /home/httpserver $ docker build -t go-server . # Build Image $ docker run -p 8080:8080 --rm -it go-server # Run Container $ curl -v http://localhost:8080/ # Test Busybox에 관하여 놀랍게도 busybox는 httpd를 내장하고 있다. 물론 대규모 처리는 곤란하다. 내장된 grep도 기본 기능만 있다. 대용량 파일 검색을 써야한다면 효율이 좋지 않으므로 gnu grep을 얹어서 사용하는 것이 좋다. busybox는 glibc, musl 등을 지원하는 버전이 있다. 이를 활용하면 여러개의 프로그램을 넣어야할 때 공유라이브러리를 활용할 수 있어 효율적이다. alpine 리눅스가 busybox + musl + os env 이므로 자신만의 이미지를 제작하는 것도 가능하다. 기본적인 utf-8이 지원되지만 출력만 문제가 없는 것으로 보인다. sh, echo, vi 도 가볍게 쓰기는 좋으나 utf-8 한글입력이 안된다. 이를 보완하기 위해서는 bash, echo, vi를 정적컴파일 바이너리로 대체 또는 도커허브(DockerHub)의 toybox를 사용하는 것이다. utf-8 입출력을 모두 지원한다. 심지어 사이즈가 더 작다. utf-8의 입출력 환경이 모두 필요하다면 toybox를 사용하는 것이 더 낫다. busybox(약1.2MB)나 toybox(약764K)는 정말 가볍게 실행하고 배포할 수 있는 환경이다. 결론적으로 이것에 대한 활용은 개발환경이나 큰규모의 실행환경보다는 작고 가벼운 환경에서 효율적인 운용이 필요할 때 사용하면 좋을 것 같다. Links How to Use th Busybox Docker Official Image https://www.docker.com/blog/use-cases-and-tips-for-using-the-busybox-docker-official-image/ Using the BusyBox Docker Image for Building Applications : A Complete Guide https://www.sohamkamani.com/docker/busybox-guide/ ","permalink":"https://neosolaris.github.io/posts/docker-busybox/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../busybox\"\u003ebusybox\u003c/a\u003e는 작고 가볍고 빠른 POSIX 표준 유틸 모음이다.\u003c/li\u003e\n\u003cli\u003edocker에서 여러 가지로 응용해서 사용할 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"응용\"\u003e응용\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e임베디드 시스템에 빌드하기\u003c/li\u003e\n\u003cli\u003eKubernates에 init container로 사용하기\u003c/li\u003e\n\u003cli\u003eHTTP 웹서버로 돌리기\u003c/li\u003e\n\u003cli\u003e가상컨테이너 볼륨서버(스토리지)로 사용하기\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"기본-사용례\"\u003e기본 사용례\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ebusybox 최신버전 이미지 받고 실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker run -it --rm busybox\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ebusybox + myapp : myapp은 리눅스환경에서 정적컴파일한 바이너리\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat Dockerfile  \u003cspan class=\"c1\"\u003e# Write Dockerfile\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eFROM busybox\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eCOPY ./my-static-binary /my-static-binary\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eCMD [\u0026#34;/my-static-binary\u0026#34;]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker build -t busybox-myapp .  \u003cspan class=\"c1\"\u003e# Build Image\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker run -t --rm busybox-myapp  \u003cspan class=\"c1\"\u003e# Run Container\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ebusybox + httpserver : 웹서버동작(httpserver는 static compile binary)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat Dockerfile  \u003cspan class=\"c1\"\u003e# Write Dockerfile\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eFROM busybox\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eCOPY ./httpserver /home/\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eCMD /home/httpserver\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker build -t go-server .  \u003cspan class=\"c1\"\u003e# Build Image\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker run -p 8080:8080 --rm -it go-server \u003cspan class=\"c1\"\u003e# Run Container\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e curl -v http://localhost:8080/  \u003cspan class=\"c1\"\u003e# Test\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"busybox에-관하여\"\u003eBusybox에 관하여\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e놀랍게도 busybox는 httpd를 내장하고 있다. 물론 대규모 처리는 곤란하다.\u003c/li\u003e\n\u003cli\u003e내장된 grep도 기본 기능만 있다. 대용량 파일 검색을 써야한다면 효율이 좋지 않으므로 gnu grep을 얹어서 사용하는 것이 좋다.\u003c/li\u003e\n\u003cli\u003ebusybox는 glibc, musl 등을 지원하는 버전이 있다.\u003c/li\u003e\n\u003cli\u003e이를 활용하면 여러개의 프로그램을 넣어야할 때 공유라이브러리를 활용할 수 있어 효율적이다.\u003c/li\u003e\n\u003cli\u003ealpine 리눅스가 busybox + musl + os env 이므로 자신만의 이미지를 제작하는 것도 가능하다.\u003c/li\u003e\n\u003cli\u003e기본적인 utf-8이 지원되지만 출력만 문제가 없는 것으로 보인다.\u003c/li\u003e\n\u003cli\u003esh, echo, vi 도 가볍게 쓰기는 좋으나 utf-8 한글입력이 안된다.\u003c/li\u003e\n\u003cli\u003e이를 보완하기 위해서는 bash, echo, vi를 정적컴파일 바이너리로 대체\u003c/li\u003e\n\u003cli\u003e또는 도커허브(DockerHub)의 toybox를 사용하는 것이다. utf-8 입출력을 모두 지원한다. 심지어 사이즈가 더 작다.\u003c/li\u003e\n\u003cli\u003eutf-8의 입출력 환경이 모두 필요하다면 toybox를 사용하는 것이 더 낫다.\u003c/li\u003e\n\u003cli\u003ebusybox(약1.2MB)나 toybox(약764K)는 정말 가볍게 실행하고 배포할 수 있는 환경이다.\u003c/li\u003e\n\u003cli\u003e결론적으로 이것에 대한 활용은 개발환경이나 큰규모의 실행환경보다는 작고 가벼운 환경에서 효율적인 운용이 필요할 때 사용하면 좋을 것 같다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHow to Use th Busybox Docker Official Image\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.docker.com/blog/use-cases-and-tips-for-using-the-busybox-docker-official-image/\"\u003ehttps://www.docker.com/blog/use-cases-and-tips-for-using-the-busybox-docker-official-image/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eUsing the BusyBox Docker Image for Building Applications : A Complete Guide\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.sohamkamani.com/docker/busybox-guide/\"\u003ehttps://www.sohamkamani.com/docker/busybox-guide/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Docker-Busybox"},{"content":" 23-08-08: 버전이 3.18대로 올라오고, Community Repository를 추가하면 패키지로 간단히 설치할 수가 있다. 최적화나 컴파일 자체에 의미를 두지 않는다면 패키지로 설치하자. PREINSTALL clang 및 luajit 및 개발 툴 설치 필수: build-base, clang, clang-extra-tools(clangd), cmake, luajit, luajit-dev # apk add --no-cache build-base clang clang-extra-tools lld compiler-rt compiler-rt-static cmake git luajit luajit-dev bash bash-completion grep rlwrap bat fd curl wget rsync sqlite jq tree ninja 설치 - alpine 3.16.3 현재 기본 패키지 없음 # git clone https://github.com/ninja-build/ninja \u0026amp;\u0026amp; cd ninja # cmake -Bbuild-cmake # cmake --build build-cmake # ./build-cmake/ninja_test # cp ./build-cmake/ninja /usr/local/bin/ # which ninja # PATH 확인 lua-language-server 설치 # cd /usr/local/ # git clone --depth=1 https://github.com/sumneko/lua-language-server # cd lua-language-server # git submodule update --depth 1 --init --recursive # cd 3rd/luamake # ./compile/install.sh # cd ../.. # ./3rd/luamake/luamake rebuild # ./bin/lua-language-server --version # cat\u0026lt;\u0026lt;EOF \u0026gt; /usr/local/bin/lua-language-server #!/usr/bin/env bash exec \u0026#34;/usr/local/lua-language-server/bin/lua-language-server\u0026#34; \u0026#34;$@\u0026#34; EOF # chmod 755 /usr/local/bin/lua-language-server # which lua-language-server # PATH 확인 clangd 설치 clangd는 c,c++을 지원한다. clangd는 clang-extra-tools 패키지에 포함되어 있다. Links ninja build howto https://github.com/ninja-build/ninja lua-language-server - Getting Started https://github.com/sumneko/lua-language-server/wiki/Getting-Started#command-line ","permalink":"https://neosolaris.github.io/posts/alpine-lua-language-server/","summary":"\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 23-08-08: 버전이 3.18대로 올라오고, Community Repository를 추가하면 패키지로 간단히\n설치할 수가 있다. 최적화나 컴파일 자체에 의미를 두지 않는다면 패키지로 설치하자.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"preinstall\"\u003ePREINSTALL\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eclang 및 luajit 및 개발 툴 설치\u003c/li\u003e\n\u003cli\u003e필수: build-base, clang, clang-extra-tools(clangd), cmake, luajit, luajit-dev\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e apk add --no-cache build-base clang clang-extra-tools lld compiler-rt compiler-rt-static cmake git luajit luajit-dev bash bash-completion grep rlwrap bat fd curl wget rsync sqlite jq tree\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eninja 설치 - alpine 3.16.3 현재 기본 패키지 없음\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e git clone https://github.com/ninja-build/ninja \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ninja\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e cmake -Bbuild-cmake\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e cmake --build build-cmake\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e ./build-cmake/ninja_test\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e cp ./build-cmake/ninja /usr/local/bin/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e which ninja   \u003cspan class=\"c1\"\u003e# PATH 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lua-language-server-설치\"\u003elua-language-server 설치\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e /usr/local/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e git clone  --depth\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e https://github.com/sumneko/lua-language-server\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e lua-language-server\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e git submodule update --depth \u003cspan class=\"m\"\u003e1\u003c/span\u003e --init --recursive\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e 3rd/luamake\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e ./compile/install.sh\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ../..\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e ./3rd/luamake/luamake rebuild\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e ./bin/lua-language-server --version\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e cat\u0026lt;\u0026lt;EOF \u0026gt; /usr/local/bin/lua-language-server\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e!/usr/bin/env bash\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eexec \u0026#34;/usr/local/lua-language-server/bin/lua-language-server\u0026#34; \u0026#34;$@\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e chmod \u003cspan class=\"m\"\u003e755\u003c/span\u003e /usr/local/bin/lua-language-server\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e which lua-language-server  \u003cspan class=\"c1\"\u003e# PATH 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"clangd-설치\"\u003eclangd 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eclangd는 \u003ccode\u003ec\u003c/code\u003e,\u003ccode\u003ec++\u003c/code\u003e을 지원한다.\u003c/li\u003e\n\u003cli\u003eclangd는 clang-extra-tools 패키지에 포함되어 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eninja build howto\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ninja-build/ninja\"\u003ehttps://github.com/ninja-build/ninja\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003elua-language-server - Getting Started\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/sumneko/lua-language-server/wiki/Getting-Started#command-line\"\u003ehttps://github.com/sumneko/lua-language-server/wiki/Getting-Started#command-line\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Alpine - Lua Language Server Install"},{"content":"INTRO Requirement: Docker Hub registration Requirement: Docker install on local login and create and push images to docker hub Docker Login $ docker login Username: neosolaris Password: xxxxxxx Login Succeeded Create Sample image create project dir and files $ mkdir myproject \u0026amp;\u0026amp; cd myproject $ vim server.js $ vim Dockerfile server.js var http = require(\u0026#39;http\u0026#39;); var handleRequest = function(request, response) { console.log(\u0026#39;Received request for URL: \u0026#39; + request.url); response.writeHead(200); response.end(\u0026#39;Hello World!\u0026#39;); }; var www = http.createServer(handleRequest); www.listen(8080); Dockerfile FROM node:6.9.2 EXPOSE 8080 COPY server.js . CMD node server.js 이미지 빌드 명령 실행 후 브라우저에서 http://localhost:8080 확인 $ docker build -t neosolaris/hello-nodejs:v1 . #사용자명/저장소명:태그명 $ docker images # 빌드이미지 확인 $ docker run -d -p 8080:8080 -t neosolaris/hello-nodejs:v1 # 테스트 컨테이너 종료 $ docker ps # 현재 컨테이너들 확인 $ docker stop \u0026lt;Container ID\u0026gt; # 해당 컨테이너 종료 이미지 업로드 $ docker push neosolaris/hello-nodejs:v1 #사용자명/저장소명:태그명 Image 업로드는 도커허브에서 확인: https://hub.docker.com/u/neosolaris Links https://snowdeer.github.io/docker/2018/02/14/docker-push-image-to-docker-hub/ ","permalink":"https://neosolaris.github.io/posts/docker-example/","summary":"\u003ch2 id=\"intro\"\u003eINTRO\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRequirement: Docker Hub registration\u003c/li\u003e\n\u003cli\u003eRequirement: Docker install on local\u003c/li\u003e\n\u003cli\u003elogin and create and push images to docker hub\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"docker-login\"\u003eDocker Login\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker login\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eUsername: neosolaris\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ePassword: xxxxxxx\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eLogin Succeeded\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-sample-image\"\u003eCreate Sample image\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ecreate project dir and files\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mkdir myproject \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e myproject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim server.js\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim Dockerfile\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eserver.js\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003erequire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;http\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ehandleRequest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Received request for URL: \u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nx\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ewriteHead\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nx\"\u003eresponse\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Hello World!\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ewww\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nx\"\u003ehttp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecreateServer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003ehandleRequest\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ewww\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elisten\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e8080\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eDockerfile\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eFROM node:6.9.2\nEXPOSE 8080\nCOPY server.js .\nCMD node server.js\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"이미지-빌드\"\u003e이미지 빌드\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e명령 실행 후 브라우저에서 \u003ca href=\"http://localhost:8080\"\u003ehttp://localhost:8080\u003c/a\u003e 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker build -t neosolaris/hello-nodejs:v1 .  \u003cspan class=\"c1\"\u003e#사용자명/저장소명:태그명\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker images  \u003cspan class=\"c1\"\u003e# 빌드이미지 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker run -d -p 8080:8080 -t neosolaris/hello-nodejs:v1  \u003cspan class=\"c1\"\u003e# 테스트\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e컨테이너 종료\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker ps  \u003cspan class=\"c1\"\u003e# 현재 컨테이너들 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker stop \u0026lt;Container ID\u0026gt;  \u003cspan class=\"c1\"\u003e# 해당 컨테이너 종료\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"이미지-업로드\"\u003e이미지 업로드\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker push neosolaris/hello-nodejs:v1  \u003cspan class=\"c1\"\u003e#사용자명/저장소명:태그명\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eImage 업로드는 도커허브에서 확인: \u003ca href=\"https://hub.docker.com/u/neosolaris\"\u003ehttps://hub.docker.com/u/neosolaris\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://snowdeer.github.io/docker/2018/02/14/docker-push-image-to-docker-hub/\"\u003ehttps://snowdeer.github.io/docker/2018/02/14/docker-push-image-to-docker-hub/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Docker Example - 사용례"},{"content":"Intro 도커 이미지 원격 저장소 만들어 놓은 이미지를 업로드 및 다운로드 활용 회원가입 https://hub.docker.com - 계정 및 이메일 등록 : 공개용(개인)은 무료 hub.docker.com 접속 후 회원가입 Email Confirm (자신의 이메일에서 인증) 도커허브 로그인 저장소 생성하고 로컬에서 빌드한 이미지 올리기 로그인 후 Repository 생성 ex) 사용자명/저장소명:태그명 neosolaris/mdev:debian-luajit doocker client(my local pc)에서 다음과 같이 올린다. $ docker login # hub에 회원가입한 id, password 등록 $ docker images # 내 이미지 확인 (mdev:debian-luajit이라 가정) $ docker tag mdev:debian-luajit neosolaris/mdev:debian-luajit $ docker push neosolaris/mdev:debian-luajit #사용자명/저장소명:태그명 hub.docker.com 접속 후 repository 확인 위 과정 중 도커허브에서 저장소를 직접 만들지 않아도 local에서 로그인되어 있다면 docker push로 가능하다. 이미지 다운로드 도커허브에서 자신이 원하는 이미지 또는 자신이 만든 이미지를 다운받는다. $ docker pull gcc:bullseye # 공식 debian-bullseye-gcc 환경 이미지 $ docker neosolaris/mdev:debian-luajit # 내 프로젝트 이미지 Links https://hub.docker.com ","permalink":"https://neosolaris.github.io/posts/dockerhub/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e도커 이미지 원격 저장소\u003c/li\u003e\n\u003cli\u003e만들어 놓은 이미지를 업로드 및 다운로드 활용\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"회원가입\"\u003e회원가입\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://hub.docker.com\"\u003ehttps://hub.docker.com\u003c/a\u003e - 계정 및 이메일 등록 : 공개용(개인)은 무료\u003c/li\u003e\n\u003cli\u003ehub.docker.com 접속 후 회원가입\u003c/li\u003e\n\u003cli\u003eEmail Confirm (자신의 이메일에서 인증)\u003c/li\u003e\n\u003cli\u003e도커허브 로그인\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"저장소-생성하고-로컬에서-빌드한-이미지-올리기\"\u003e저장소 생성하고 로컬에서 빌드한 이미지 올리기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e로그인 후 Repository 생성\n\u003cul\u003e\n\u003cli\u003eex) 사용자명/저장소명:태그명 neosolaris/mdev:debian-luajit\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003edoocker client(my local pc)에서 다음과 같이 올린다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker login  \u003cspan class=\"c1\"\u003e# hub에 회원가입한 id, password 등록\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker images \u003cspan class=\"c1\"\u003e# 내 이미지 확인 (mdev:debian-luajit이라 가정)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker tag mdev:debian-luajit  neosolaris/mdev:debian-luajit\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker push neosolaris/mdev:debian-luajit  \u003cspan class=\"c1\"\u003e#사용자명/저장소명:태그명\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ehub.docker.com 접속 후 repository 확인\u003c/li\u003e\n\u003cli\u003e위 과정 중 도커허브에서 저장소를 직접 만들지 않아도 local에서 로그인되어 있다면 \u003ccode\u003edocker push\u003c/code\u003e로 가능하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"이미지-다운로드\"\u003e이미지 다운로드\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e도커허브에서 자신이 원하는 이미지 또는 자신이 만든 이미지를 다운받는다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker pull gcc:bullseye   \u003cspan class=\"c1\"\u003e# 공식 debian-bullseye-gcc 환경 이미지\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker neosolaris/mdev:debian-luajit  \u003cspan class=\"c1\"\u003e# 내 프로젝트 이미지\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://hub.docker.com\"\u003ehttps://hub.docker.com\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"DockerHub - 도커허브 소개 및 활용"},{"content":"Intro 프로젝트폴더를 만들고 개발 Dockerfile을 해당 프로젝트에 작성한다. 한라인씩 확인하며 이미지를 빌드한다. 빌드한 이미지를 컨테이너를 실행해서 확인한다. Example Lemo Apps for Luajit 프로젝트 폴더를 만들고 Dockerfile을 생성한다. $ mkdir myproject \u0026amp;\u0026amp; cd myproject $ vim Dockerfile 생성된 Dockerfile FROM nickblah/luajit:2.1.0-beta3-buster ## Default root Env Setup First WORKDIR /root RUN \\ echo \u0026#39;set -o vi\u0026#39; \u0026gt;\u0026gt; .bashrc ## LEMO Program Set WORKDIR /usr/local COPY lemo ./lemo RUN \\ echo \u0026#39;exec \u0026#34;/usr/local/lemo/lib/main.lua\u0026#34; \u0026#34;$@\u0026#34;\u0026#39; \u0026gt; ./bin/lemo \u0026amp;\u0026amp;\\ chmod 755 ./bin/lemo Image Build $ docker build -t buster:lemo . # 빌드 $ docker images # 빌드한 이미지 확인 $ docker run --rm -it buster:lemo bash # 이미지를 컨테이너 실행 및 테스트 Links https://docs.docker.com/engine/reference/builder https://www.44bits.io/ko/post/easy-deploy-with-docker ","permalink":"https://neosolaris.github.io/posts/docker-build/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e프로젝트폴더를 만들고 개발\u003c/li\u003e\n\u003cli\u003eDockerfile을 해당 프로젝트에 작성한다.\u003c/li\u003e\n\u003cli\u003e한라인씩 확인하며 이미지를 빌드한다.\u003c/li\u003e\n\u003cli\u003e빌드한 이미지를 컨테이너를 실행해서 확인한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"example-lemo-apps-for-luajit\"\u003eExample Lemo Apps for Luajit\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e프로젝트 폴더를 만들고 Dockerfile을 생성한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mkdir myproject \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e myproject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim Dockerfile\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e생성된 Dockerfile\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eFROM nickblah/luajit:2.1.0-beta3-buster\n\n## Default root Env Setup First\nWORKDIR /root\nRUN \\\n  echo \u0026#39;set -o vi\u0026#39; \u0026gt;\u0026gt; .bashrc\n\n## LEMO Program Set\nWORKDIR /usr/local\nCOPY lemo ./lemo\nRUN \\\n  echo \u0026#39;exec \u0026#34;/usr/local/lemo/lib/main.lua\u0026#34; \u0026#34;$@\u0026#34;\u0026#39; \u0026gt; ./bin/lemo \u0026amp;\u0026amp;\\\n  chmod 755 ./bin/lemo\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"image-build\"\u003eImage Build\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker build -t buster:lemo .  \u003cspan class=\"c1\"\u003e# 빌드\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker images  \u003cspan class=\"c1\"\u003e# 빌드한 이미지 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker run --rm -it buster:lemo bash  \u003cspan class=\"c1\"\u003e# 이미지를 컨테이너 실행 및 테스트\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.docker.com/engine/reference/builder\"\u003ehttps://docs.docker.com/engine/reference/builder\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.44bits.io/ko/post/easy-deploy-with-docker\"\u003ehttps://www.44bits.io/ko/post/easy-deploy-with-docker\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"docker-build 도커이미지 빌드"},{"content":"Docker 데몬 서비스 설정 패키지를 설치할 경우 자동으로 등록되지만 실패할 경우 다음과 같다. $ sudo systemctl status docker # 서비스 Active 확인실패 $ sudo systemctl enable docker # 부팅시 서비스 자동 실행 설정 $ sudo systemctl start docker # 서비스 실행 $ sudo systemctl restart docker # 서비스 재실행 $ sudo systemctl status docker # 서비스 동작확인 Docker를 일반 사용자 권한으로 변경 항상 docker를 사용할 때 sudo를 사용하므로 번거롭다. $ sudo usermod -aG docker ${USER} # 이후 로그아웃하거나 재부팅 $ sudo reboot $ groups # 그룹에 docker가 있는 지 확인 $ docker ps -a # sudo 없이 명령 실행 Docker 로컬 디렉토리 변경 /var/lib/docker가 기본 디렉토리이다. /var는 보통 root 파티션이므로 사용중 공간문제가 발생할 수 있다. /data/docker라는 충분한 공간으로 변경한다면 다음과 같다. 우분투나 데비안 기준이고 docker 20.10.21 버전의 예이다. 이 설정은 docker 설치 초기에 해야한다. (그렇지 않다면 백업 필수) $ sudo systemctl stop docker # 서비스 중지 $ sudo systemctl status docker # 서비스 상태 확인 $ sudo cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/docker/daemon.json { \u0026#34;graph\u0026#34;: \u0026#34;/data/docker\u0026#34; } EOF $ sudo rm -rf /var/lib/docker # 기존 디렉토리 제거 $ sudo systemctl start # 서비스 실행 $ docker info | grep \u0026#39;Docker Root Dir\u0026#39; # 디렉토리 변경 확인 Docker Root Dir: /data/docker $ ln -s /data/docker /var/lib/docker # 호환을 위해 링크를 생성 ","permalink":"https://neosolaris.github.io/posts/docker-setup/","summary":"\u003ch2 id=\"docker-데몬-서비스-설정\"\u003eDocker 데몬 서비스 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e패키지를 설치할 경우 자동으로 등록되지만 실패할 경우 다음과 같다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl status docker  \u003cspan class=\"c1\"\u003e# 서비스 Active 확인실패\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e docker  \u003cspan class=\"c1\"\u003e# 부팅시 서비스 자동 실행 설정\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl start docker  \u003cspan class=\"c1\"\u003e# 서비스 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl restart docker  \u003cspan class=\"c1\"\u003e# 서비스 재실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl status docker  \u003cspan class=\"c1\"\u003e# 서비스 동작확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"docker를-일반-사용자-권한으로-변경\"\u003eDocker를 일반 사용자 권한으로 변경\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e항상 docker를 사용할 때 \u003ccode\u003esudo\u003c/code\u003e를 사용하므로 번거롭다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo usermod -aG docker \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eUSER\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 이후 로그아웃하거나 재부팅\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo reboot\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e groups  \u003cspan class=\"c1\"\u003e# 그룹에 docker가 있는 지 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker ps -a  \u003cspan class=\"c1\"\u003e# sudo 없이 명령 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"docker-로컬-디렉토리-변경\"\u003eDocker 로컬 디렉토리 변경\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e/var/lib/docker\u003c/code\u003e가 기본 디렉토리이다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/var\u003c/code\u003e는 보통 root 파티션이므로 사용중 공간문제가 발생할 수 있다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e/data/docker\u003c/code\u003e라는 충분한 공간으로 변경한다면 다음과 같다.\u003c/li\u003e\n\u003cli\u003e우분투나 데비안 기준이고 \u003ccode\u003edocker 20.10.21\u003c/code\u003e 버전의 예이다.\u003c/li\u003e\n\u003cli\u003e이 설정은 docker 설치 초기에 해야한다. (그렇지 않다면 백업 필수)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl stop docker  \u003cspan class=\"c1\"\u003e# 서비스 중지\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl status docker  \u003cspan class=\"c1\"\u003e# 서비스 상태 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/docker/daemon.json   \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    \u0026#34;graph\u0026#34;: \u0026#34;/data/docker\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo rm -rf /var/lib/docker  \u003cspan class=\"c1\"\u003e# 기존 디렉토리 제거\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl start  \u003cspan class=\"c1\"\u003e# 서비스 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e docker info \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep \u003cspan class=\"s1\"\u003e\u0026#39;Docker Root Dir\u0026#39;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 디렉토리 변경 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e Docker Root Dir: /data/docker\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ln -s /data/docker /var/lib/docker  \u003cspan class=\"c1\"\u003e# 호환을 위해 링크를 생성\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Docker Setup - 설정"},{"content":"Ubuntu 22.04 Install 기존 패키지로 설치 - 낮은 버전(1.5-2) $ sudo apt update $ sudo apt install docker docker-engine docker.io containerd runc 저장소로 최신 버전 설치 (20.10.21) - docker-ce만 설치해도 된다. $ sudo apt update $ sudo apt install ca-certificates curl gnupg lsb-release -y $ sudo mkdir -p /etc/apt/keyrings $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg $ echo \\ \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null $ sudo apt update $ sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y Script Install $ curl -fsSL https://get.docker.com -o get-docker.sh $ DRY_RUN=1 sudo sh ./get-docker.sh Test $ sudo docker --version # 버전 확인 $ sudo systemctl status docker # 서비스 Active 확인 $ sudo docker run hello-world # 테스트 $ sudo docker ps -a # 프로세스 fhrm ghkrdls Uninstall $ sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-compose-plugin -y Links https://docs.docker.com/engine/reference/builder https://linuxhint.com/install-docker-ubuntu-22-04 https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-22-04 ","permalink":"https://neosolaris.github.io/posts/docker-install/","summary":"\u003ch2 id=\"ubuntu-2204-install\"\u003eUbuntu 22.04 Install\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e기존 패키지로 설치 - 낮은 버전(1.5-2)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install docker docker-engine docker.io containerd runc\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e저장소로 최신 버전 설치 (20.10.21) - \u003ccode\u003edocker-ce\u003c/code\u003e만 설치해도 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install ca-certificates curl gnupg lsb-release -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo mkdir -p /etc/apt/keyrings\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e curl -fsSL https://download.docker.com/linux/ubuntu/gpg \u003cspan class=\"p\"\u003e|\u003c/span\u003e sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003e  \u0026#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e  $(lsb_release -cs) stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"script-install\"\u003eScript Install\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e curl -fsSL https://get.docker.com -o get-docker.sh\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nv\"\u003eDRY_RUN\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e sudo sh ./get-docker.sh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"test\"\u003eTest\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo docker --version  \u003cspan class=\"c1\"\u003e# 버전 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl status docker  \u003cspan class=\"c1\"\u003e# 서비스 Active 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo docker run hello-world  \u003cspan class=\"c1\"\u003e# 테스트\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo docker ps -a  \u003cspan class=\"c1\"\u003e# 프로세스 fhrm ghkrdls\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"uninstall\"\u003eUninstall\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-compose-plugin -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.docker.com/engine/reference/builder\"\u003ehttps://docs.docker.com/engine/reference/builder\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://linuxhint.com/install-docker-ubuntu-22-04\"\u003ehttps://linuxhint.com/install-docker-ubuntu-22-04\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-22-04\"\u003ehttps://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-22-04\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Docker Install"},{"content":"Intro docker는 응용프로그램 개발을 위한 소프트웨어 플랫폼이다. Linux 기반에서 독립된 컨테이너(하나의 프로세스) 형태로 동작한다. go 언어로 개발되었다. 가상OS와는 다르게 가볍고 빠르다. 빌드된 이미지를 언제 어디에서는 docker를 통해 문제 없이 실행할 수 있다. 자신만의 개발환경을 이미지로 구축해 놓으면 개발 컴퓨터가 달라져도 동일한 환경에서 개발할 수 있다. 실행환경을 이미지로 만들어 놓으면 사용자가 동일한 환경에서 문제없이 실행할 수 있다. Docker 설치 및 기본 사용법 docker install - Docker 설치 docker setup - Docker 설정 docker build - Dockerfile 작성 dockerhub - Docker Hub와 회원 가입 docker example - Docker Example: 사용례 Docker Tips docker run cmd entrypoint - Docker run, cmd, entrypoint 차이 docker images remove - Docker Image 제거 Docker 응용 docker busybox - 도커 busybox 활용 docker windows - 윈도우즈에서 도커 설치 및 사용 Links https://hub.docker.com/ https://www.sobyte.net/post/2022-04/docker-copy/ https://docs.docker.com/engine/reference/builder/ ","permalink":"https://neosolaris.github.io/posts/docker/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003edocker는 응용프로그램 개발을 위한 소프트웨어 플랫폼이다.\u003c/li\u003e\n\u003cli\u003eLinux 기반에서 독립된 컨테이너(하나의 프로세스) 형태로 동작한다.\u003c/li\u003e\n\u003cli\u003ego 언어로 개발되었다.\u003c/li\u003e\n\u003cli\u003e가상OS와는 다르게 가볍고 빠르다.\u003c/li\u003e\n\u003cli\u003e빌드된 이미지를 언제 어디에서는 docker를 통해 문제 없이 실행할 수 있다.\u003c/li\u003e\n\u003cli\u003e자신만의 개발환경을 이미지로 구축해 놓으면 개발 컴퓨터가 달라져도 동일한 환경에서 개발할 수 있다.\u003c/li\u003e\n\u003cli\u003e실행환경을 이미지로 만들어 놓으면 사용자가 동일한 환경에서 문제없이 실행할 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"docker-설치-및-기본-사용법\"\u003eDocker 설치 및 기본 사용법\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../docker-install\"\u003edocker install\u003c/a\u003e - Docker 설치\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../docker-setup\"\u003edocker setup\u003c/a\u003e - Docker 설정\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../docker-build\"\u003edocker build\u003c/a\u003e - Dockerfile 작성\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../dockerhub\"\u003edockerhub\u003c/a\u003e - Docker Hub와 회원 가입\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../docker-example\"\u003edocker example\u003c/a\u003e - Docker Example: 사용례\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"docker-tips\"\u003eDocker Tips\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../docker-run-cmd-entrypoint\"\u003edocker run cmd entrypoint\u003c/a\u003e - Docker run, cmd, entrypoint 차이\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../docker-images-remove\"\u003edocker images remove\u003c/a\u003e - Docker Image 제거\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"docker-응용\"\u003eDocker 응용\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../docker-busybox\"\u003edocker busybox\u003c/a\u003e - 도커 busybox 활용\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../docker-windows\"\u003edocker windows\u003c/a\u003e - 윈도우즈에서 도커 설치 및 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://hub.docker.com/\"\u003ehttps://hub.docker.com/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.sobyte.net/post/2022-04/docker-copy/\"\u003ehttps://www.sobyte.net/post/2022-04/docker-copy/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.docker.com/engine/reference/builder/\"\u003ehttps://docs.docker.com/engine/reference/builder/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Docker - 소프트웨어 개발 플랫폼"},{"content":"Intro 결론은 lua cjson이 가장 빠르다. 그 다음이 lunajson dkjson은 순수 lua파일이고 단일 파일이다. 또 다른 하나는 json.lua 이다. 빠르다고 하는데\u0026hellip; 비교적 최신이다. cjson은 빠르나 모듈 컴파일이 필요하고 lunajson은 다음으로 빠르고 순수 lua파일이지만 여러 개의 파일로 분리되어 있다. dkjson은 셋 중 가장 퍼포먼스가 낮으나 단일 파일이다. 상황에 따라 적절히 사용하다. Links https://github.com/grafi-tt/lunajson http://dkolf.de/src/dkjson-lua.fsl/home https://github.com/rxi/json.lua https://somedudesays.com/2019/12/using-json-with-lua ","permalink":"https://neosolaris.github.io/posts/lua-json/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e결론은 lua cjson이 가장 빠르다. 그 다음이 lunajson\u003c/li\u003e\n\u003cli\u003edkjson은 순수 lua파일이고 단일 파일이다.\u003c/li\u003e\n\u003cli\u003e또 다른 하나는 json.lua 이다. 빠르다고 하는데\u0026hellip; 비교적 최신이다.\u003c/li\u003e\n\u003cli\u003ecjson은 빠르나 모듈 컴파일이 필요하고\u003c/li\u003e\n\u003cli\u003elunajson은 다음으로 빠르고 순수 lua파일이지만 여러 개의 파일로 분리되어 있다.\u003c/li\u003e\n\u003cli\u003edkjson은 셋 중 가장 퍼포먼스가 낮으나 단일 파일이다.\u003c/li\u003e\n\u003cli\u003e상황에 따라 적절히 사용하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/grafi-tt/lunajson\"\u003ehttps://github.com/grafi-tt/lunajson\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://dkolf.de/src/dkjson-lua.fsl/home\"\u003ehttp://dkolf.de/src/dkjson-lua.fsl/home\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rxi/json.lua\"\u003ehttps://github.com/rxi/json.lua\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://somedudesays.com/2019/12/using-json-with-lua\"\u003ehttps://somedudesays.com/2019/12/using-json-with-lua\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"JSON - Lua Module"},{"content":" ftcsv 추천 ","permalink":"https://neosolaris.github.io/posts/lua-csv/","summary":"\u003cul\u003e\n\u003cli\u003eftcsv 추천\u003c/li\u003e\n\u003c/ul\u003e","title":"CSV - Lua Module"},{"content":"Intro json파일을 sqlite3에 import하는 방법 json -\u0026gt; csv -\u0026gt; sqlite3 순서로 진행한다. jq, sqlite3가 사전에 설치되어 있어야 한다. jq는 경량 명령라인 json 관리 프로그램이다. Requirement $ sudo apt install sqlite3 $ sudo apt install jq Getting the CSV $ cat data.json {\u0026#34;uri\u0026#34;:\u0026#34;/\u0026#34;,\u0026#34;user_agent\u0026#34;:\u0026#34;example1\u0026#34;} {\u0026#34;uri\u0026#34;:\u0026#34;/foobar\u0026#34;,\u0026#34;user_agent\u0026#34;:\u0026#34;example1\u0026#34;} {\u0026#34;uri\u0026#34;:\u0026#34;/\u0026#34;,\u0026#34;user_agent\u0026#34;:\u0026#34;example2\u0026#34;} {\u0026#34;uri\u0026#34;:\u0026#34;/foobar\u0026#34;,\u0026#34;user_agent\u0026#34;:\u0026#34;example3\u0026#34;} $ head -1 data.json | jq -r \u0026#39;keys | @csv\u0026#39; \u0026#34;uri\u0026#34;,\u0026#34;user_agent\u0026#34; $ jq -r \u0026#39;map(tostring) | @csv\u0026#39; \u0026lt; data.json \u0026#34;/\u0026#34;,\u0026#34;example1\u0026#34; \u0026#34;/foobar\u0026#34;,\u0026#34;example1\u0026#34; \u0026#34;/\u0026#34;,\u0026#34;example2\u0026#34; \u0026#34;/foobar\u0026#34;,\u0026#34;example3\u0026#34; $ % (head -1 data.json | jq -r \u0026#39;keys | @csv\u0026#39; \u0026amp;\u0026amp; jq -r \u0026#39;map(tostring) | @csv\u0026#39; \u0026lt; data.json) \u0026gt; data.csv Loading it into sqlite3 $ sqlite3 somedata.db sqlite\u0026gt; .mode csv sqlite\u0026gt; .import data.csv my_table sqlite\u0026gt; select * from my_table where ... Links https://stackoverflow.com/questions/46407770/how-to-convert-a-json-file-to-an-sqlite-database\n","permalink":"https://neosolaris.github.io/posts/json-to-csv-to-sqlite3/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ejson파일을 sqlite3에 import하는 방법\u003c/li\u003e\n\u003cli\u003ejson -\u0026gt; csv -\u0026gt; sqlite3 순서로 진행한다.\u003c/li\u003e\n\u003cli\u003ejq, sqlite3가 사전에 설치되어 있어야 한다.\u003c/li\u003e\n\u003cli\u003ejq는 경량 명령라인 json 관리 프로그램이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"requirement\"\u003eRequirement\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install sqlite3\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install jq\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"getting-the-csv\"\u003eGetting the CSV\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat data.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e{\u0026#34;uri\u0026#34;:\u0026#34;/\u0026#34;,\u0026#34;user_agent\u0026#34;:\u0026#34;example1\u0026#34;}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e{\u0026#34;uri\u0026#34;:\u0026#34;/foobar\u0026#34;,\u0026#34;user_agent\u0026#34;:\u0026#34;example1\u0026#34;}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e{\u0026#34;uri\u0026#34;:\u0026#34;/\u0026#34;,\u0026#34;user_agent\u0026#34;:\u0026#34;example2\u0026#34;}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e{\u0026#34;uri\u0026#34;:\u0026#34;/foobar\u0026#34;,\u0026#34;user_agent\u0026#34;:\u0026#34;example3\u0026#34;}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e head -1 data.json \u003cspan class=\"p\"\u003e|\u003c/span\u003e jq -r \u003cspan class=\"s1\"\u003e\u0026#39;keys | @csv\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u0026#34;uri\u0026#34;,\u0026#34;user_agent\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e jq -r \u003cspan class=\"s1\"\u003e\u0026#39;map(tostring) | @csv\u0026#39;\u003c/span\u003e \u0026lt; data.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u0026#34;/\u0026#34;,\u0026#34;example1\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u0026#34;/foobar\u0026#34;,\u0026#34;example1\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u0026#34;/\u0026#34;,\u0026#34;example2\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u0026#34;/foobar\u0026#34;,\u0026#34;example3\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e % \u003cspan class=\"o\"\u003e(\u003c/span\u003ehead -1 data.json \u003cspan class=\"p\"\u003e|\u003c/span\u003e jq -r \u003cspan class=\"s1\"\u003e\u0026#39;keys | @csv\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e jq -r \u003cspan class=\"s1\"\u003e\u0026#39;map(tostring) | @csv\u0026#39;\u003c/span\u003e \u0026lt; data.json\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u0026gt; data.csv\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"loading-it-into-sqlite3\"\u003eLoading it into sqlite3\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sqlite3 somedata.db\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .mode csv\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .import data.csv my_table\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; select * from my_table where ...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://stackoverflow.com/questions/46407770/how-to-convert-a-json-file-to-an-sqlite-database\"\u003ehttps://stackoverflow.com/questions/46407770/how-to-convert-a-json-file-to-an-sqlite-database\u003c/a\u003e\u003c/p\u003e","title":"Json to sqlite3 import howto"},{"content":"Intro csv 파일을 sqlite3 기본기능으로 불러 테이블에 저장할 수 있다. sqlite3의 interactive, command mode 사용법 Howto $ cd data/ $ sqlite3 mydata.db # 저장할 db를 정하고 실행 sqlite\u0026gt; .mode csv # csv모드로 전환 sqlite\u0026gt; .import data.csv mytable # mytable 테이블로 data.csv를 변환 sqlite\u0026gt; .dbinfo # db 정보확인 sqlite\u0026gt; .tables # 테이블 확인 sqlite\u0026gt; .schema mytable # mytable의 스키마 확인 sqlite\u0026gt; .mode column # 컬럼표시 sqlite\u0026gt; .headers on # 헤더표시 sqlite\u0026gt; select * from mytable where ... # 테이블 쿼리 sqlite\u0026gt; .q # 종료 $ ls -l mydata.db # DB사이즈 확인 명령라인에서 확인할 수도 있다. $ sqlite3 mydata.db -header -column \u0026#34;select x from y;\u0026#34; ","permalink":"https://neosolaris.github.io/posts/csv-to-sqlite3/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ecsv 파일을 sqlite3 기본기능으로 불러 테이블에 저장할 수 있다.\u003c/li\u003e\n\u003cli\u003esqlite3의 interactive, command mode 사용법\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"howto\"\u003eHowto\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e data/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sqlite3 mydata.db  \u003cspan class=\"c1\"\u003e# 저장할 db를 정하고 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .mode csv  # csv모드로 전환 \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .import data.csv mytable  # mytable 테이블로 data.csv를 변환\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .dbinfo  # db 정보확인\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .tables  # 테이블 확인\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .schema mytable  # mytable의 스키마 확인\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .mode column  # 컬럼표시\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .headers on  # 헤더표시\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; select * from mytable where ...  # 테이블 쿼리 \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esqlite\u0026gt; .q  # 종료\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ls -l mydata.db  \u003cspan class=\"c1\"\u003e# DB사이즈 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e명령라인에서 확인할 수도 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sqlite3 mydata.db  -header -column  \u003cspan class=\"s2\"\u003e\u0026#34;select x from y;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"CVS to Sqlite3"},{"content":"정주성 - 백석\n산(山)턱 원두막은 뷔였나 불빛이 외롭다 헝겊심지에 아즈까리 기름의 쪼는 소리가 들리는 듯하다. 잠자리 조을든 문허진 성(城)터 반디불이 난다 파란 혼(魂)들 같다 어데서 말있는 듯이 크다란 산(山)새 한 마리 어두운 골짜기로 난다 헐리다 남은 성문(城門)이 한울빛 같이 훤하다 날이 밝으면 또 메기수염의 늙은이가 청배를 팔러 올 것이다. 정주성 - 정주는 평안북도 서남부의 해안지대에 위치한 곳으로 백석의 고향이다. 이승훈이 세운 오산학교가 이곳에 있었다. 이중환의 \u0026lt;택리지\u0026gt;의 평안북도 편을 보면, 청천강 이북에는 무예를 숭상하는데 오직 정주만은 과거에 오른 인사가 많았다고 한다. 정주성은 정주읍에 있는 조선시대 성곽이다. 석성(石城)으로 높이가 2~5미터에 이른다. 뷔였나 - \u0026lsquo;비었나\u0026rsquo;의 고어. 아즈까리 - \u0026lsquo;아주까리\u0026rsquo;의 평북 방언. 문허진 - \u0026lsquo;무너진\u0026rsquo;의 고어. 어데서 말 있는 듯이 - 어디서 말소리가 나는 듯이. 한울 - 하늘. 청배 - 청리靑梨. 청실리靑實梨. 청술레. 배의 일종으로 일찍 익으며 빛이 푸르고 물기가 많다. ","permalink":"https://neosolaris.github.io/posts/%EC%A0%95%EC%A3%BC%EC%84%B1/","summary":"\u003cp\u003e\u003ccode\u003e정주성 - 백석\u003c/code\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e산(山)턱 원두막은 뷔였나 불빛이 외롭다\n헝겊심지에 아즈까리 기름의 쪼는 소리가 들리는 듯하다.\n \n잠자리 조을든 문허진 성(城)터\n반디불이 난다 파란 혼(魂)들 같다\n어데서 말있는 듯이 크다란 산(山)새 한 마리 어두운 골짜기로 난다\n \n헐리다 남은 성문(城門)이\n한울빛 같이 훤하다\n날이 밝으면 또 메기수염의 늙은이가 청배를 팔러 올 것이다.\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e정주성 - 정주는 평안북도 서남부의 해안지대에 위치한 곳으로 백석의 고향이다. 이승훈이 세운 오산학교가 이곳에 있었다. 이중환의 \u0026lt;택리지\u0026gt;의 평안북도 편을 보면, 청천강 이북에는 무예를 숭상하는데 오직 정주만은 과거에 오른 인사가 많았다고 한다. 정주성은 정주읍에 있는 조선시대 성곽이다. 석성(石城)으로 높이가 2~5미터에 이른다.\u003c/li\u003e\n\u003cli\u003e뷔였나 - \u0026lsquo;비었나\u0026rsquo;의 고어.\u003c/li\u003e\n\u003cli\u003e아즈까리 - \u0026lsquo;아주까리\u0026rsquo;의 평북 방언.\u003c/li\u003e\n\u003cli\u003e문허진 - \u0026lsquo;무너진\u0026rsquo;의 고어.\u003c/li\u003e\n\u003cli\u003e어데서 말 있는 듯이 - 어디서 말소리가 나는 듯이.\u003c/li\u003e\n\u003cli\u003e한울 - 하늘.\u003c/li\u003e\n\u003cli\u003e청배 - 청리靑梨. 청실리靑實梨. 청술레. 배의 일종으로 일찍 익으며 빛이 푸르고 물기가 많다.\u003c/li\u003e\n\u003c/ul\u003e","title":"정주성 - 백석"},{"content":" 언제 완독할 지 모르겠으나 오랜 숙원인 천문학의 첫걸음을 내딛는다. 무엇인가 구현해 볼려해도 개념이 부족하니 역시 공부가 필요하다. 밤하늘의 별을 보는 것도 좋지만 사연을 알고 보는 것이 좋을 것 같다. 우리는 모두 별에서 왔다는 말에 공감하면서\u0026hellip; 서론 천체 천문학의 역할 천문학의 연구대상 천체 우주의 크기 구면 천문학 구면 삼각법 지구 천구 지평좌표계 적도좌표계 천체의 뜨고 지는 시간 황도좌표계 은하좌표계 좌표의 섭동 위치 천문학 별자리(星座) 성표와 성도 항성시과 태양시 천문학적인 시간계 역서 관측과 기기 대기를 통한 관측 광학망원경 검출기와 천문기기 전파망원경 다른 파장 영역 에너지의 다른 형태 측광의 개념과 등급 강도, 플럭스밀도와 광도 겉보기등급 등급계 절대등급 소광과 광학적 두계 복사 기작 원자와 분자의 복사 수소원자 선윤곽 양자수, 선택규칙, 원자의 준위에 따른 개수분포 분자 스펙트럼 연속 스펙트럼 흑체복사 온도 다른 복사 기작들 복사전달 천체역학 운동방정식 운동방적식의 해 궤도방정식과 케플러의 제1법칙 궤도요소 케플러 제2법칙 및 제3법칙 여러 천체로 이루어진 계 궤도결정 궤도상에서의 위치 탈출속도 비리알 정리 진스한계 태양계 태양계 천체의 분류 행성의 배치 지구의 궤도와 태양의 가시성 달의 궤도 일식과 엄폐 행성의 구조 및 표면 대기와 자기권 반사율 행성의 측광, 편광 및 분광 행성의 열복사 태양계의 기원 니스 모형 태양계 천체 수성 금성 지구와 달 목성 토성 천왕성 해왕성 왜소항성 태양계의 소천체 소행성 혜성 유성체 행성간 먼지 및 다른 입장 항성의 스펙트럼 스펙트럼의 측정 하버드 분광분류 여키스 분광분류 특이 스펙트럼 헤르츠스프룽-러셀도 모형대기 관측은 무엇을 제공하는가? 쌍성계와 항성의 질량 안시쌍성 측성쌍성 분광쌍성 측광쌍성 항성 내부 구조 내부 평형조건 기체의 물리적 상태 항성의 에너지원 항성 모형 항성의 진화 진화의 시간척도 주계열로 수축 주계열 단계 거성 단계 진화의 죄종단계 근접쌍성의 진화 관측과 비교 원소의 기원 태양 내부 구조 태양 대기 태양활동 태양풍과 우주 기상 변광성 분류 맥동변광성 폴발변광성 초신성 밀집성 백색왜성 중성자별 블랙홀 X-선 쌍성계 성간물질 성간티끌 성간가스 성간분자 원시성의 형성 행성상성운 초신성 잔해 우리은하의 뜨거운 코로나 우주선과 성간자기장 성단과 성협 성협 산개성단 구상성단 우리은하 거리 측정 방법 별의 통계학 우리은하의 회전 우리은하의 구조를 이루는 성분 우리은하의 형성과 진화 은하 은하의 분류 광도와 질량 은하의 구조 은하 역학 별의 나이와 은하의 원소함량비 은하의 시스템 활동은하와 퀘이사 은하의 기원과 진화 우주론 우주론적 관측 사실 우주론원리 균질-등방 우주의 모형 프리드만 모형 우주론 검증법 우주의 역사 구조의 형성 우주의 미래 천문생물학 생명이란 무엇인가 생명의 화학 생명의 필수 요건 위험 요소 생명의 기원 우리가 화성인이란 말인가 태양계의 생명 외계 생명 탐지 SETI-외계지적생명체 탐사 외계 문명권의 수 외계행성 외계행성계 관찰 방법 외계행성의 성질 ","permalink":"https://neosolaris.github.io/posts/%EA%B8%B0%EB%B3%B8%EC%B2%9C%EB%B6%84%ED%95%99/","summary":"\u003cul\u003e\n\u003cli\u003e언제 완독할 지 모르겠으나 오랜 숙원인 천문학의 첫걸음을 내딛는다.\u003c/li\u003e\n\u003cli\u003e무엇인가 구현해 볼려해도 개념이 부족하니 역시 공부가 필요하다.\u003c/li\u003e\n\u003cli\u003e밤하늘의 별을 보는 것도 좋지만 사연을 알고 보는 것이 좋을 것 같다.\u003c/li\u003e\n\u003cli\u003e우리는 모두 별에서 왔다는 말에 공감하면서\u0026hellip;\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"서론\"\u003e서론\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e천체\u003c/li\u003e\n\u003cli\u003e천문학의 역할\u003c/li\u003e\n\u003cli\u003e천문학의 연구대상 천체\u003c/li\u003e\n\u003cli\u003e우주의 크기\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"구면-천문학\"\u003e구면 천문학\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e구면 삼각법\u003c/li\u003e\n\u003cli\u003e지구\u003c/li\u003e\n\u003cli\u003e천구\u003c/li\u003e\n\u003cli\u003e지평좌표계\u003c/li\u003e\n\u003cli\u003e적도좌표계\u003c/li\u003e\n\u003cli\u003e천체의 뜨고 지는 시간\u003c/li\u003e\n\u003cli\u003e황도좌표계\u003c/li\u003e\n\u003cli\u003e은하좌표계\u003c/li\u003e\n\u003cli\u003e좌표의 섭동\u003c/li\u003e\n\u003cli\u003e위치 천문학\u003c/li\u003e\n\u003cli\u003e별자리(星座)\u003c/li\u003e\n\u003cli\u003e성표와 성도\u003c/li\u003e\n\u003cli\u003e항성시과 태양시\u003c/li\u003e\n\u003cli\u003e천문학적인 시간계\u003c/li\u003e\n\u003cli\u003e역서\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"관측과-기기\"\u003e관측과 기기\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e대기를 통한 관측\u003c/li\u003e\n\u003cli\u003e광학망원경\u003c/li\u003e\n\u003cli\u003e검출기와 천문기기\u003c/li\u003e\n\u003cli\u003e전파망원경\u003c/li\u003e\n\u003cli\u003e다른 파장 영역\u003c/li\u003e\n\u003cli\u003e에너지의 다른 형태\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"측광의-개념과-등급\"\u003e측광의 개념과 등급\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e강도, 플럭스밀도와 광도\u003c/li\u003e\n\u003cli\u003e겉보기등급\u003c/li\u003e\n\u003cli\u003e등급계\u003c/li\u003e\n\u003cli\u003e절대등급\u003c/li\u003e\n\u003cli\u003e소광과 광학적 두계\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"복사-기작\"\u003e복사 기작\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e원자와 분자의 복사\u003c/li\u003e\n\u003cli\u003e수소원자\u003c/li\u003e\n\u003cli\u003e선윤곽\u003c/li\u003e\n\u003cli\u003e양자수, 선택규칙, 원자의 준위에 따른 개수분포\u003c/li\u003e\n\u003cli\u003e분자 스펙트럼\u003c/li\u003e\n\u003cli\u003e연속 스펙트럼\u003c/li\u003e\n\u003cli\u003e흑체복사\u003c/li\u003e\n\u003cli\u003e온도\u003c/li\u003e\n\u003cli\u003e다른 복사 기작들\u003c/li\u003e\n\u003cli\u003e복사전달\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"천체역학\"\u003e천체역학\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e운동방정식\u003c/li\u003e\n\u003cli\u003e운동방적식의 해\u003c/li\u003e\n\u003cli\u003e궤도방정식과 케플러의 제1법칙\u003c/li\u003e\n\u003cli\u003e궤도요소\u003c/li\u003e\n\u003cli\u003e케플러 제2법칙 및 제3법칙\u003c/li\u003e\n\u003cli\u003e여러 천체로 이루어진 계\u003c/li\u003e\n\u003cli\u003e궤도결정\u003c/li\u003e\n\u003cli\u003e궤도상에서의 위치\u003c/li\u003e\n\u003cli\u003e탈출속도\u003c/li\u003e\n\u003cli\u003e비리알 정리\u003c/li\u003e\n\u003cli\u003e진스한계\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"태양계\"\u003e태양계\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e태양계 천체의 분류\u003c/li\u003e\n\u003cli\u003e행성의 배치\u003c/li\u003e\n\u003cli\u003e지구의 궤도와 태양의 가시성\u003c/li\u003e\n\u003cli\u003e달의 궤도\u003c/li\u003e\n\u003cli\u003e일식과 엄폐\u003c/li\u003e\n\u003cli\u003e행성의 구조 및 표면\u003c/li\u003e\n\u003cli\u003e대기와 자기권\u003c/li\u003e\n\u003cli\u003e반사율\u003c/li\u003e\n\u003cli\u003e행성의 측광, 편광 및 분광\u003c/li\u003e\n\u003cli\u003e행성의 열복사\u003c/li\u003e\n\u003cli\u003e태양계의 기원\u003c/li\u003e\n\u003cli\u003e니스 모형\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"태양계-천체\"\u003e태양계 천체\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e수성\u003c/li\u003e\n\u003cli\u003e금성\u003c/li\u003e\n\u003cli\u003e지구와 달\u003c/li\u003e\n\u003cli\u003e목성\u003c/li\u003e\n\u003cli\u003e토성\u003c/li\u003e\n\u003cli\u003e천왕성\u003c/li\u003e\n\u003cli\u003e해왕성\u003c/li\u003e\n\u003cli\u003e왜소항성\u003c/li\u003e\n\u003cli\u003e태양계의 소천체\u003c/li\u003e\n\u003cli\u003e소행성\u003c/li\u003e\n\u003cli\u003e혜성\u003c/li\u003e\n\u003cli\u003e유성체\u003c/li\u003e\n\u003cli\u003e행성간 먼지 및 다른 입장\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"항성의-스펙트럼\"\u003e항성의 스펙트럼\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e스펙트럼의 측정\u003c/li\u003e\n\u003cli\u003e하버드 분광분류\u003c/li\u003e\n\u003cli\u003e여키스 분광분류\u003c/li\u003e\n\u003cli\u003e특이 스펙트럼\u003c/li\u003e\n\u003cli\u003e헤르츠스프룽-러셀도\u003c/li\u003e\n\u003cli\u003e모형대기\u003c/li\u003e\n\u003cli\u003e관측은 무엇을 제공하는가?\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"쌍성계와-항성의-질량\"\u003e쌍성계와 항성의 질량\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e안시쌍성\u003c/li\u003e\n\u003cli\u003e측성쌍성\u003c/li\u003e\n\u003cli\u003e분광쌍성\u003c/li\u003e\n\u003cli\u003e측광쌍성\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"항성-내부-구조\"\u003e항성 내부 구조\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e내부 평형조건\u003c/li\u003e\n\u003cli\u003e기체의 물리적 상태\u003c/li\u003e\n\u003cli\u003e항성의 에너지원\u003c/li\u003e\n\u003cli\u003e항성 모형\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"항성의-진화\"\u003e항성의 진화\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e진화의 시간척도\u003c/li\u003e\n\u003cli\u003e주계열로 수축\u003c/li\u003e\n\u003cli\u003e주계열 단계\u003c/li\u003e\n\u003cli\u003e거성 단계\u003c/li\u003e\n\u003cli\u003e진화의 죄종단계\u003c/li\u003e\n\u003cli\u003e근접쌍성의 진화\u003c/li\u003e\n\u003cli\u003e관측과 비교\u003c/li\u003e\n\u003cli\u003e원소의 기원\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"태양\"\u003e태양\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e내부 구조\u003c/li\u003e\n\u003cli\u003e태양 대기\u003c/li\u003e\n\u003cli\u003e태양활동\u003c/li\u003e\n\u003cli\u003e태양풍과 우주 기상\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"변광성\"\u003e변광성\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e분류\u003c/li\u003e\n\u003cli\u003e맥동변광성\u003c/li\u003e\n\u003cli\u003e폴발변광성\u003c/li\u003e\n\u003cli\u003e초신성\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"밀집성\"\u003e밀집성\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e백색왜성\u003c/li\u003e\n\u003cli\u003e중성자별\u003c/li\u003e\n\u003cli\u003e블랙홀\u003c/li\u003e\n\u003cli\u003eX-선 쌍성계\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"성간물질\"\u003e성간물질\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e성간티끌\u003c/li\u003e\n\u003cli\u003e성간가스\u003c/li\u003e\n\u003cli\u003e성간분자\u003c/li\u003e\n\u003cli\u003e원시성의 형성\u003c/li\u003e\n\u003cli\u003e행성상성운\u003c/li\u003e\n\u003cli\u003e초신성 잔해\u003c/li\u003e\n\u003cli\u003e우리은하의 뜨거운 코로나\u003c/li\u003e\n\u003cli\u003e우주선과 성간자기장\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"성단과-성협\"\u003e성단과 성협\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e성협\u003c/li\u003e\n\u003cli\u003e산개성단\u003c/li\u003e\n\u003cli\u003e구상성단\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"우리은하\"\u003e우리은하\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e거리 측정 방법\u003c/li\u003e\n\u003cli\u003e별의 통계학\u003c/li\u003e\n\u003cli\u003e우리은하의 회전\u003c/li\u003e\n\u003cli\u003e우리은하의 구조를 이루는 성분\u003c/li\u003e\n\u003cli\u003e우리은하의 형성과 진화\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"은하\"\u003e은하\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e은하의 분류\u003c/li\u003e\n\u003cli\u003e광도와 질량\u003c/li\u003e\n\u003cli\u003e은하의 구조\u003c/li\u003e\n\u003cli\u003e은하 역학\u003c/li\u003e\n\u003cli\u003e별의 나이와 은하의 원소함량비\u003c/li\u003e\n\u003cli\u003e은하의 시스템\u003c/li\u003e\n\u003cli\u003e활동은하와 퀘이사\u003c/li\u003e\n\u003cli\u003e은하의 기원과 진화\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"우주론\"\u003e우주론\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e우주론적 관측 사실\u003c/li\u003e\n\u003cli\u003e우주론원리\u003c/li\u003e\n\u003cli\u003e균질-등방 우주의 모형\u003c/li\u003e\n\u003cli\u003e프리드만 모형\u003c/li\u003e\n\u003cli\u003e우주론 검증법\u003c/li\u003e\n\u003cli\u003e우주의 역사\u003c/li\u003e\n\u003cli\u003e구조의 형성\u003c/li\u003e\n\u003cli\u003e우주의 미래\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"천문생물학\"\u003e천문생물학\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e생명이란 무엇인가\u003c/li\u003e\n\u003cli\u003e생명의 화학\u003c/li\u003e\n\u003cli\u003e생명의 필수 요건\u003c/li\u003e\n\u003cli\u003e위험 요소\u003c/li\u003e\n\u003cli\u003e생명의 기원\u003c/li\u003e\n\u003cli\u003e우리가 화성인이란 말인가\u003c/li\u003e\n\u003cli\u003e태양계의 생명\u003c/li\u003e\n\u003cli\u003e외계 생명 탐지\u003c/li\u003e\n\u003cli\u003eSETI-외계지적생명체 탐사\u003c/li\u003e\n\u003cli\u003e외계 문명권의 수\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"외계행성\"\u003e외계행성\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e외계행성계\u003c/li\u003e\n\u003cli\u003e관찰 방법\u003c/li\u003e\n\u003cli\u003e외계행성의 성질\u003c/li\u003e\n\u003c/ol\u003e","title":"기본 천문학 - Fundamental Astronomy"},{"content":" 에피쿠로스(Epikouros: 기원전341~271) 그리스 아테네 철학자 헬레니즘 시대, 에피쿠로스학파의 창시자, 쾌락주의 철학 여기에서 쾌락은 정신적 평화를 의미하지 물질적, 욕망적 쾌락은 아니다. 죽음에 대하여 죽음은 우리에게 아무것도 아니라고 생각하는 습관을 들이도록 하게. 좋은 것과 나쁜 것은 모두 감각에 달려 있지만, 죽음은 감각의 상실이기 때문이다. 따라서 죽음이 우리에게 아무것도 아니라는 올바른 인식은 우리로 하여금 죽게 되어 있는 삶을 즐길 수 있게 해준다. 그것은 삶에 무한한 시간을 부여함으로써가 아니라, 불사에 대한 동경을 제거함으로써 그렇게 하는 것이다. (..중략..)\n우리가 살아 있을 때는 죽음이 우리 곁에 와 있지 않고, 죽음이 우리 곁에 와 있을 때는 우리가 존재하지 않기 때문이다. 그러므로 죽음은 살아 있는 자들과도 관계가 없고 죽은 자들과도 관계가 없다. 왜냐하면 살아 있는 자들에게는 죽음이 존재하지 않고, 죽은 자들은 그들 자신이 더 이상 존재하지 않기 때문이다.\n에피쿠로스의 역설 신은 악을 막을 의지는 있지만, 능력이 없는 것인가? 그렇다면 그는 전능하지 않은 것이다.\n악을 막을 능력은 있는데 의지가 없는 것인가? 그렇다면 그는 악한 것이다.\n악을 막을 능력도 있고 의지도 있는 것인가? 그렇다면 도대체 이 세상의 악은 어디에 기인한 것인가?\n악을 막을 능력도, 의지도 없는 것인가? 그렇다면 왜 그를 신이라 불러야 하는가?\n","permalink":"https://neosolaris.github.io/posts/%EC%97%90%ED%94%BC%EC%BF%A0%EB%A1%9C%EC%8A%A4%EC%9D%98-%EC%97%AD%EC%84%A4/","summary":"\u003cul\u003e\n\u003cli\u003e에피쿠로스(Epikouros: 기원전341~271) 그리스 아테네 철학자\u003c/li\u003e\n\u003cli\u003e헬레니즘 시대, 에피쿠로스학파의 창시자, 쾌락주의 철학\u003c/li\u003e\n\u003cli\u003e여기에서 쾌락은 정신적 평화를 의미하지 물질적, 욕망적 쾌락은 아니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"죽음에-대하여\"\u003e죽음에 대하여\u003c/h2\u003e\n\u003cp\u003e죽음은 우리에게 아무것도 아니라고 생각하는 습관을 들이도록 하게. 좋은 것과 나쁜 것은 모두 감각에 달려 있지만, 죽음은 감각의 상실이기 때문이다. 따라서 죽음이 우리에게 아무것도 아니라는 올바른 인식은 우리로 하여금 죽게 되어 있는 삶을 즐길 수 있게 해준다. 그것은 삶에 무한한 시간을 부여함으로써가 아니라, 불사에 대한 동경을 제거함으로써 그렇게 하는 것이다. (..중략..)\u003c/p\u003e","title":"에피쿠로스의 역설"},{"content":" 지은이: 고대 수메르인 문명 점토판 유적 번역: 김산해 여관 주인의 충고 길가메시여, 당신은 생명을 찾을 수 없을 것입니다. 신들이 인간을 만들 때 인간에게 죽음도 함께 붙여 주었지요. 생명만은 그들이 보살피도록 남겨 두었습니다. 좋은 음식으로 배를 채우십시오. 밤낮으로 춤추며 즐기십시오. 잔치를 벌이고 기뻐하십시오. 깨끗한 옷을 입고 물로 목욕하며 당신 손을 잡아줄 자식을 낳고 아내를 당신 품안에 꼬옥 품어주세요. 왜나하면 이것또한 인간의 운명이니까요\n시적인 번역 그대가 찾는 생명을 그대는 결코 찾을 수 없을진대. 신들이 인간을 창조했을 때 그들은 죽음을 인간의 몫으로 정하고 생명은 자신들의 몫으로 남겼기 때문이라네 길가메시여, 그대 배나 채우게 낮이나 밤이나 즐기며, 하루하루를 즐거움에 넘치게 하게. 낮이나 밤이나 춤추고 노래하고, 그리고 새 옷을 입고 그대의 머리를 감고 목욕하며, 그대의 손을 잡고 있는 아이를 보며, 그대의 아내를 껴안아 즐겁게 하라. 이러한 일들만이 인간이 가질 관심이로다. 의연한 죽음 그렇다하여 슬퍼해서도, 절망해서도, 의기소침해서도 안 된다. 너는 이것이 인간이 갖고 있는 고난의 길임을 분명히 들었을 것이다. 너는 이것이 너의 탯줄이 잘려진 순간부터 품고 있었던 일임을 분명히 들었을 것이다. 인간의 가장 어두운 날이 이제 너를 기다린다. 인간의 가장 고독한 장소가 이제 너를 기다린다. 멈추지 않는 밀물의 파도가 이제 너를 기다린다. 피할 수 없는 전투가 이제 너를 기다린다. 그로 인한 작은 접전이 이제 너를 기다린다. 그러나 너는 분노로 얽힌 마음을 갖고 저승에 가서는 안 된다.\n","permalink":"https://neosolaris.github.io/posts/%EA%B8%B8%EA%B0%80%EB%A9%94%EC%89%AC-%EC%84%9C%EC%82%AC%EC%8B%9C/","summary":"\u003cul\u003e\n\u003cli\u003e지은이: 고대 수메르인 문명 점토판 유적\u003c/li\u003e\n\u003cli\u003e번역: 김산해\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"여관-주인의-충고\"\u003e여관 주인의 충고\u003c/h2\u003e\n\u003cp\u003e길가메시여, 당신은 생명을 찾을 수 없을 것입니다. 신들이 인간을 만들 때 인간에게 죽음도 함께 붙여 주었지요. 생명만은 그들이 보살피도록 남겨 두었습니다. 좋은 음식으로 배를 채우십시오. 밤낮으로 춤추며 즐기십시오. 잔치를 벌이고 기뻐하십시오. 깨끗한 옷을 입고 물로 목욕하며 당신 손을 잡아줄 자식을 낳고 아내를 당신 품안에 꼬옥 품어주세요. 왜나하면 이것또한 인간의 운명이니까요\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e시적인 번역\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e그대가 찾는 생명을 그대는 결코 찾을 수 없을진대.\n\n신들이 인간을 창조했을 때\n\n그들은 죽음을 인간의 몫으로 정하고\n\n생명은 자신들의 몫으로 남겼기 때문이라네\n\n길가메시여, 그대 배나 채우게\n\n낮이나 밤이나 즐기며,\n\n하루하루를 즐거움에 넘치게 하게.\n\n낮이나 밤이나 춤추고 노래하고,\n\n그리고 새 옷을 입고\n\n그대의 머리를 감고 목욕하며, 그대의 손을 잡고 있는 아이를 보며,\n\n그대의 아내를 껴안아 즐겁게 하라.\n\n이러한 일들만이 인간이 가질 관심이로다.\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"의연한-죽음\"\u003e의연한 죽음\u003c/h2\u003e\n\u003cp\u003e그렇다하여 슬퍼해서도, 절망해서도, 의기소침해서도 안 된다. 너는 이것이 인간이 갖고 있는 고난의 길임을 분명히 들었을 것이다. 너는 이것이 너의 탯줄이 잘려진 순간부터 품고 있었던 일임을 분명히 들었을 것이다. 인간의 가장 어두운 날이 이제 너를 기다린다. 인간의 가장 고독한 장소가 이제 너를 기다린다. 멈추지 않는 밀물의 파도가 이제 너를 기다린다. 피할 수 없는 전투가 이제 너를 기다린다. 그로 인한 작은 접전이 이제 너를 기다린다. 그러나 너는 분노로 얽힌 마음을 갖고 저승에 가서는 안 된다.\u003c/p\u003e","title":"최초의 신화 - 길가메쉬 서사시"},{"content":" 원저: The Hitchhiker\u0026rsquo;s Guide to the Galaxy 저자: 더글러스 애덤스 Douglas Adams 몇가지 인상적인 구절을 정리해 본다. 이 행성을 떠나는 법 나사NASA에 전화하라. 전화번호는 (713) 483-3111이다. 당신이 지금 당장 떠나는게 굉장히 중요한 일이라고 설명하라.\n그 사람들이 협조하지 않으면, 백악관ㅡ(202) 456-1414ㅡ에 있는 아무 친구에게나 전화해서, 나사에 있는 사람들에게 말 좀 해달라고 하라.\n백악관에 친구가 하나도 없으면, 크렘린에 전화하라(0107-095-295-9051로 전화해 국제 교환수에게 크렘린을 대달라고 하라). 그 사람들도 백악관에 친구가 없기는 마찬가지지만(적어도 남들한테 대놓고 말할 수 있는 친구는 없다), 영향력은 좀 있는 것 같다. 그러니까 시도해볼 만하다.\n그것도 안 되면, 교황에게 전화해 어떻게 하면 좋겠느냐고 물어보라. 교황의 전화번호는 011-39-6-6982다. 내가 듣기에 교황의 교환수는 절대로 잘못하는 일이 없다고 한다(가톨릭에서 교황은 \u0026lsquo;절대무류(無謬)infallible\u0026rsquo;라고 간주되는데 이를 두고 장난을 치고 있다ㅡ옮긴이주).\n이 시도가 모두 실패로 돌아가면, 신호를 해서 지나가는 비행접시를 정지시킨 다음, 전화 요금 청구서가 날아들기 전에 이 행성을 벗어나는 게 엄청나게 중요한 일이라고 설명하라.\n지구 행성의 문제 저 멀리 시대에 뒤처진 은하계 서쪽 소용돌이의 끝, 지도에도 나와 있지 않은 그 변두리 지역에 아무도 주목하지 않는 작은 노란색 항성이 하나 있다.\n이 항성에서 대략 구천팔백만 마일 떨어진 곳에 시시하기 그지없는 작은 청록색 행성이 공전하고 있는데, 이 행성에 사는 원숭이 후손인 생명체들은 어찌나 원시적인지 아직도 전자 시계가 꽤나 대단한 아이디어라고 생각하고 있을 정도다.\n이 행성에는 문제가 하나 있는데 - 아니, 있었는데 -, 이 행성에 사는 사람들 대다수가 대부분의 시간 동안 불행했다는 것이다. 이 문제에 대해 수많은 해결책이 제시되었는데, 이 해결책들은 대부분 주로 작은 녹색 종잇조각들의 움직임과 관련된 것이었다. 그건 좀 이상한 일이다. 왜냐하면, 대체로 볼 때, 불행한 것은 그 작은 녹색 종잇조각들이 아니었기 때문이다.\n그래서 그 문제는 해결되지 않고 그냥 남아 있었다. 많은 사람들이 비열했고, 그들 대다수는 비참하게 살았다. 심지어 전자 시계를 차고 있는 사람들까지도 말이다.\n애당초 사람들이 나무에서 내려온 것 자체가 엄청난 실수였다는 의견이 점점 더 확산되었다. 게다가 어떤 사람들은 심지어 나무에 올라간 것조차 잘못된 일이었으며, 아무도 바다에서 나오지 말았어야 했다고도 말했다.\n모든 관점 보텍스 \u0026lsquo;모든 관점 보텍스\u0026rsquo;는 추정적 물질 분석의 원리에 의해 전 우주의 상을 만들어낸다.\n좀더 설명해보자면, 우주의 모든 물질 조각들은 우주의 다른 모든 물질 조각들에 의해 어떤 식으로든 영향을 받기 때문에, 이론상으로는 모든 창조물을 추정해내는 것이 가능한, 즉 모든 태양, 모든 행성, 그것들의 궤도, 그것들의 성분, 그것들의 경제 및 사회사를, 가경 케이크 한 조각으로부터 추정해낼 수 있는 것이다.\n\u0026lsquo;모든 관점 보텍스\u0026rsquo;를 발명한 사람의 기본적인 목적은 아내를 괴롭히는 것이었다.\n트린 트라굴라 - 이것이 그의 이름이었다 - 는 몽상가에, 사상가였으며, 명상적인 철학자였다. 혹은, 그의 아내의 말마따나 바보 천치였다.\n그녀는 남편이 우주 공간을 바라보거나, 안전핀의 역학에 대해 숙고하거나, 케이크 조각을 분광 그래프로 분석하는 데 말도 안 되게 엄청난 시간을 소비한다며 쉴 새 없이 바가지를 긁곤 했다.\n\u0026ldquo;균형 감각을 좀 가져요!\u0026rdquo; 그녀는 이렇게 말하곤 했다. 때로는 하루에 서른여덟 번이나 이런 말을 했다.\n그래서 그는 \u0026lsquo;모든 관점 보텍스\u0026rsquo;를 만들었다. 그저 아내에게 한번 보여주기 위해서였다.\n그는 이 기계 한쪽 끝에 케이크 한 조각으로부터 추정한 현실 세계 전체를 연결하고 다른 쪽 끝에는 아내를 연결했다. 그리고 그가 기계를 작동시키자, 그의 아내는 한순간에 무한한 우주 전체와 그 속에서의 자기 자신을 바라보게 되었다.\n트린 트라굴라는 전율했다. 그 충격으로 그녀의 두뇌가 완전히 소멸하고야 만 것이다. 하지만 만족스럽게도 그는 자신이 다음과 같은 사실을 결정적으로 증명해냈다는 사실을 깨달았다. 즉, 이렇게 엄청난 규모의 우주에서 생명이 존재하려면 절대로 균형 감각을 가져서는 안 된다는 것이었다.\n","permalink":"https://neosolaris.github.io/posts/%EC%9D%80%ED%95%98%EC%88%98%EB%A5%BC-%EC%97%AC%ED%96%89%ED%95%98%EB%8A%94-%ED%9E%88%EC%B9%98%ED%95%98%EC%9D%B4%EC%BB%A4%EB%A5%BC-%EC%9C%84%ED%95%9C-%EC%95%88%EB%82%B4%EC%84%9C/","summary":"\u003cul\u003e\n\u003cli\u003e원저: The Hitchhiker\u0026rsquo;s Guide to the Galaxy\u003c/li\u003e\n\u003cli\u003e저자: 더글러스 애덤스 Douglas Adams\u003c/li\u003e\n\u003cli\u003e몇가지 인상적인 구절을 정리해 본다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"이-행성을-떠나는-법\"\u003e이 행성을 떠나는 법\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e나사NASA에 전화하라. 전화번호는 (713) 483-3111이다. 당신이 지금 당장 떠나는게 굉장히 중요한 일이라고 설명하라.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e그 사람들이 협조하지 않으면, 백악관ㅡ(202) 456-1414ㅡ에 있는 아무 친구에게나 전화해서, 나사에 있는 사람들에게 말 좀 해달라고 하라.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e백악관에 친구가 하나도 없으면, 크렘린에 전화하라(0107-095-295-9051로 전화해 국제 교환수에게 크렘린을 대달라고 하라). 그 사람들도 백악관에 친구가 없기는 마찬가지지만(적어도 남들한테 대놓고 말할 수 있는 친구는 없다), 영향력은 좀 있는 것 같다. 그러니까 시도해볼 만하다.\u003c/p\u003e","title":"은하수를 여행하는 히치하이커를 위한 안내서"},{"content":"Install $ sudo apt install rtorrent Usage $ cd ~/Downloads # 현재 폴더로 다운로드됨 $ rtorrent \u0026lt;torrent_filename\u0026gt;.torrent # 다운로드 Control + q # 종료 Links https://www.usessionbuddy.com/post/How-to-setup-and-use-rtorrent-on-Linux/\n","permalink":"https://neosolaris.github.io/posts/rtorrent/","summary":"\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install rtorrent\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ~/Downloads   \u003cspan class=\"c1\"\u003e# 현재 폴더로 다운로드됨\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rtorrent \u0026lt;torrent_filename\u0026gt;.torrent  \u003cspan class=\"c1\"\u003e# 다운로드\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eControl + q        # 종료\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.usessionbuddy.com/post/How-to-setup-and-use-rtorrent-on-Linux/\"\u003ehttps://www.usessionbuddy.com/post/How-to-setup-and-use-rtorrent-on-Linux/\u003c/a\u003e\u003c/p\u003e","title":"Rtorrent - 설치 및 사용법"},{"content":"Intro LuaFun 정의 - LuaJit Hight Performance Functional Programming Library luajit의 내장함수를 확장하여 다양한 프로그래밍을 돕는다. 하나씩 공부해서 활용하면 매우 강력한 툴이 될 것이다. Usage 기본 사용법 $ git clone https://github.com/luafun/luafun.git $ cd luafun $ luajit -i \u0026gt; -- Functional style \u0026gt; require \u0026#34;fun\u0026#34; () \u0026gt; -- calculate sum(x for x^2 in 1..n) \u0026gt; n = 100 \u0026gt; print(reduce(operator.add, 0, map(function(x) return x^2 end, range(n)))) 328350 \u0026gt; -- Object-oriented style \u0026gt; local fun = require \u0026#34;fun\u0026#34; \u0026gt; -- calculate sum(x for x^2 in 1..n) \u0026gt; print(fun.range(n):map(function(x) return x^2 end):reduce(operator.add, 0)) 328350 Using the Library Links github https://github.com/luafun/luafun Document https://luafun.github.io/ ","permalink":"https://neosolaris.github.io/posts/luafun/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLuaFun 정의 - LuaJit Hight Performance Functional Programming Library\u003c/li\u003e\n\u003cli\u003eluajit의 내장함수를 확장하여 다양한 프로그래밍을 돕는다.\u003c/li\u003e\n\u003cli\u003e하나씩 공부해서 활용하면 매우 강력한 툴이 될 것이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e기본 사용법\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/luafun/luafun.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e luafun\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luajit -i \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e -- Functional style\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e require \u003cspan class=\"s2\"\u003e\u0026#34;fun\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e -- calculate sum\u003cspan class=\"o\"\u003e(\u003c/span\u003ex \u003cspan class=\"k\"\u003efor\u003c/span\u003e x^2 in 1..n\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e100\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e print\u003cspan class=\"o\"\u003e(\u003c/span\u003ereduce\u003cspan class=\"o\"\u003e(\u003c/span\u003eoperator.add, 0, map\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efunction\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003ex\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e x^2 end, range\u003cspan class=\"o\"\u003e(\u003c/span\u003en\u003cspan class=\"o\"\u003e))))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e328350\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e -- Object-oriented style\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003elocal\u003c/span\u003e \u003cspan class=\"nv\"\u003efun\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e require \u003cspan class=\"s2\"\u003e\u0026#34;fun\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e -- calculate sum\u003cspan class=\"o\"\u003e(\u003c/span\u003ex \u003cspan class=\"k\"\u003efor\u003c/span\u003e x^2 in 1..n\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e print\u003cspan class=\"o\"\u003e(\u003c/span\u003efun.range\u003cspan class=\"o\"\u003e(\u003c/span\u003en\u003cspan class=\"o\"\u003e)\u003c/span\u003e:map\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003efunction\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003ex\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e x^2 end\u003cspan class=\"o\"\u003e)\u003c/span\u003e:reduce\u003cspan class=\"o\"\u003e(\u003c/span\u003eoperator.add, 0\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e328350\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"using-the-library\"\u003eUsing the Library\u003c/h2\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003egithub \u003ca href=\"https://github.com/luafun/luafun\"\u003ehttps://github.com/luafun/luafun\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocument \u003ca href=\"https://luafun.github.io/\"\u003ehttps://luafun.github.io/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"LuaFun - LuaJit Functional"},{"content":"Intro luaJit용 Lua File System 모듈 ffi를 이용한 lfs이며 lua의 lfs 모듈과 똑같다. 파일시스템을 다루는 확장 모듈이다. 리눅스 전용이다. 윈도우즈용은 아래 깃허브에 가면 안내가 있다. 설치 luarocks를 사용하거나 직접 다운로드하여 사용 Links Github https://github.com/spacewander/luafilesystem ","permalink":"https://neosolaris.github.io/posts/lfs-ffi/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eluaJit용 Lua File System 모듈\u003c/li\u003e\n\u003cli\u003effi를 이용한 lfs이며 lua의 lfs 모듈과 똑같다.\u003c/li\u003e\n\u003cli\u003e파일시스템을 다루는 확장 모듈이다.\u003c/li\u003e\n\u003cli\u003e리눅스 전용이다. 윈도우즈용은 아래 깃허브에 가면 안내가 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설치\"\u003e설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../luarocks\"\u003eluarocks\u003c/a\u003e를 사용하거나 직접 다운로드하여 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGithub \u003ca href=\"https://github.com/spacewander/luafilesystem\"\u003ehttps://github.com/spacewander/luafilesystem\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Lfs-ffi - LuaJit FFI Lua File System"},{"content":"Intro FITS 데이터 분석 및 이미지 처리 도구 집합 NOAO(National Optical astronomy Observatory)에서 개발 현재 오픈소스로 공개하여 iraf community 가 관리하고 있다. 주로 관측천문학 분야에서 활용되고 있다. 파이썬으로 랩핑한 pyraf가 있다. 컴파일과 패키지 설치 두 가지가 있다. (패키지 설치 권장) 현재 많은 소프트웨어들이 나와있으나 타언어로 랩핑하였거나 인터페이스만 바꾸어 라이브러리를 그대로 사용하고 있다. 일종의 고전이라고 볼 수 있겠다. Install Packages Ubuntu18.x 이후부터 패키지 제공 $ sudo apt install xterm xgterm # terminal for iraf $ sudo apt install saods9 # ds9 FITS Viewer for iraf $ sudo apt install iraf iraf-dev iraf-noao iraf-noao-dev iraf-wcstools iraf-rvsao Install From Source Download Source\nInstall Packages for compile IRAF\n$ sudo apt install gcc make flex $ sudo apt install libcurl4-openssl-dev libexpat-dev libreadline-dev $ sudo apt install xgterm xterm # 둘 중 하나 선택해서 설치 $ sudo apt install ds9 # FITS View and Edit Tool (Tcl/Tk기반) xgterm -fg ivory -bg black -font 9*15bold \u0026amp; 이런식으로 사용\nInitial Setup $ tar xvfz iraf-2.17.tar.gz $ cd iraf-2.17 $ ./install -\u0026gt; iraf의 설치 경로를 정해준다. default: ~/.iraf/ -\u0026gt; xgterm을 디폴트로 설정 Compile : 컴파일까지 내 놋북에서 약 7분 정도 소요 $ . ~/.bashrc # 쉘환경 재설정 (setup for iraf) $ make linux64 $ make sysgen 2\u0026gt;\u0026amp;1 | tee build.log $ ./test/run_tests # 테스트 After Install $ cd /data/IRAF/M50 # goto fits data folder $ mkiraf # 초기파일 생성 cl\u0026gt; help # 도움말 cl\u0026gt; logout # 나가기 문제는 cl 사용이 조금 불편하다는 것이다. readline이 적용되지 않는 것 같다. github community 에서 릴리즈 등을 확인해 보자 터미널 실행 패키지 설치의 경우 mkiraf 명령을 사용하지 않아도 된다.\n실행하기\n$ irafcl -x # 현재 터미널에서 실행 $ xterm -fn 10*20 -e irafcl \u0026amp; # xterm 또는 xgterm에서 실행 $ xterm -fn 10*20 -e irafcl \u0026amp; ds9 \u0026amp; # ds9와 함께 사용 폰트가 너무 작고 사용이 불편하다. 다음과 같이 조정해서 alias로 사용 $ vim ~/.bashrc ... alias irafcl=\u0026#39;xterm -bg black -fg gray -fa \u0026#34;Monospace\u0026#34; -fs 10 -geometry 80x50 -e irafcl \u0026amp; ds9 \u0026amp;\u0026#39; :wq $ . ~/.bashrc $ irafcl 기본 사용법 $ irafcl el\u0026gt; help # 메뉴 도움말 dataio - Data format conversion package (RFITS, etc.) images - General image processing package language - The command language itself lists - List processing package local - The template local package obsolete - Obsolete tasks noao - The NOAO optical astronomy packages plot - Plot package proto - Prototype or interim tasks softools - Software tools package system - System utilities package utilities - Miscellaneous utilities package el\u0026gt; logout # 나가기 HOWTO 이제 해야할 것은 FITS 파일 포맷과 이를 분석하는 것이다. 샘플이 있어야하고 이를 토대로 한걸음씩 나아가야한다. 아래 링크의 문서를 순서대로 참고하면 되겠다. 좀 오래된 것들도 있으니 감안해서 참고한다. IRAF를 이용한 측광 자료 전처리 - 서울대 천문학부 A Beginner\u0026rsquo;s Guide to Using IRAF - IRAF Other Documents Links https://yumingfu.space/tech/iraf-installation/ https://www.bilibili.com/read/cv16854077 https://maravelias.info/2011/03/installing-iraf-in-ubuntu/ 여기 깃허브에 우분투20.04 설치스크립트가 있다. https://gist.github.com/JacobHilbert ","permalink":"https://neosolaris.github.io/posts/iraf/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../fits\"\u003eFITS\u003c/a\u003e 데이터 분석 및 이미지 처리 도구 집합\u003c/li\u003e\n\u003cli\u003eNOAO(National Optical astronomy Observatory)에서 개발\u003c/li\u003e\n\u003cli\u003e현재 오픈소스로 공개하여 \u003ca href=\"../https://iraf-community.github.io\"\u003eiraf community\u003c/a\u003e 가 관리하고 있다.\u003c/li\u003e\n\u003cli\u003e주로 관측천문학 분야에서 활용되고 있다.\u003c/li\u003e\n\u003cli\u003e파이썬으로 랩핑한 \u003ca href=\"../pyraf\"\u003epyraf\u003c/a\u003e가 있다.\u003c/li\u003e\n\u003cli\u003e컴파일과 패키지 설치 두 가지가 있다. (패키지 설치 권장)\u003c/li\u003e\n\u003cli\u003e현재 많은 소프트웨어들이 나와있으나 타언어로 랩핑하였거나 인터페이스만 바꾸어 라이브러리를 그대로 사용하고 있다.\u003c/li\u003e\n\u003cli\u003e일종의 고전이라고 볼 수 있겠다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install-packages\"\u003eInstall Packages\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eUbuntu18.x 이후부터 패키지 제공\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install xterm xgterm \u003cspan class=\"c1\"\u003e# terminal for iraf \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install saods9       \u003cspan class=\"c1\"\u003e# ds9 FITS Viewer for iraf\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install iraf iraf-dev iraf-noao iraf-noao-dev iraf-wcstools iraf-rvsao\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"install-from-source\"\u003eInstall From Source\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"../https://github.com/iraf-community/iraf/archive/refs/tags/v2.17.tar.gz\"\u003eDownload Source\u003c/a\u003e\u003c/p\u003e","title":"IRAF - Image Reduction and Analysis Facility"},{"content":"Intro 그간 과학자들이 사용해왔던 fits 관련 툴들을 바이딩하고 통합한 모듈이다. anaconda에서 기본 설치된다. 이를 이용하는 것이 의존성을 신경 쓰지 않고 쉽게 사용하는 방법이다. 그러나 anaconda는 1.6기가 정도 된다. 엄청나다. Links 천문학 데이터 파일 형식 FITS 파일형식 다루기 ","permalink":"https://neosolaris.github.io/posts/astropy/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e그간 과학자들이 사용해왔던 fits 관련 툴들을 바이딩하고 통합한 모듈이다.\u003c/li\u003e\n\u003cli\u003eanaconda에서 기본 설치된다.\u003c/li\u003e\n\u003cli\u003e이를 이용하는 것이 의존성을 신경 쓰지 않고 쉽게 사용하는 방법이다.\u003c/li\u003e\n\u003cli\u003e그러나 anaconda는 1.6기가 정도 된다. 엄청나다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://himbopsa.tistory.com/33\"\u003e천문학 데이터 파일 형식 FITS 파일형식 다루기\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Astropy - 파이썬 천문학 모듈"},{"content":"Intro 천문사진 주로 FITS 전처리 프로그램 version 4 부터 리눅스를 지원한다. 입문자가 쉽게 사용할 수 있도록 만들었다. GUI 뿐만 아니라 자동화를 위한 CLI가 제공된다. 내부 사용 라이브러리는 fitsio가 사용된다. Judy Schmidt도 전처리 프로그램으로 이것을 쓴다. Install 홈페이지에서 다운로드 및 설치 가능하다.\nUbuntu, Debian\n$ sudo apt install libvips #cfitsio도 필요하나 의존성으로 깔린다. $ sudo dpkg -i fitsliberator_4.x.x_amd64.deb $ export PATH=$PATH:/opt/FITS\\ Liberator/fitscli/linux/ Usage 다음을 우선적으로 공부하고 나머지는 홈페이지를 방문하자.\nQuick Start Guide v4 https://noirlab.edu/public/media/archives/techdocs/pdf/techdoc024.pdf Links Home https://noirlab.edu/public/products/fitsliberator/ FITS Liberator CLI https://gitlab.com/noirlab/fits-liberator-cli FITS Liberator GUI https://gitlab.com/noirlab/fits-liberator-gui ","permalink":"https://neosolaris.github.io/posts/fits-liberator/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e천문사진 주로 FITS 전처리 프로그램\u003c/li\u003e\n\u003cli\u003eversion 4 부터 리눅스를 지원한다.\u003c/li\u003e\n\u003cli\u003e입문자가 쉽게 사용할 수 있도록 만들었다.\u003c/li\u003e\n\u003cli\u003eGUI 뿐만 아니라 자동화를 위한 CLI가 제공된다.\u003c/li\u003e\n\u003cli\u003e내부 사용 라이브러리는 \u003ca href=\"../fitsio\"\u003efitsio\u003c/a\u003e가 사용된다.\u003c/li\u003e\n\u003cli\u003eJudy Schmidt도 전처리 프로그램으로 이것을 쓴다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"../https://noirlab.edu/public/products/fitsliberator\"\u003e홈페이지\u003c/a\u003e에서 다운로드 및 설치 가능하다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUbuntu, Debian\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install libvips  \u003cspan class=\"c1\"\u003e#cfitsio도 필요하나 의존성으로 깔린다.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo dpkg -i fitsliberator_4.x.x_amd64.deb\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003ePATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$PATH\u003c/span\u003e:/opt/FITS\u003cspan class=\"se\"\u003e\\ \u003c/span\u003eLiberator/fitscli/linux/\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cp\u003e다음을 우선적으로 공부하고 나머지는 홈페이지를 방문하자.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eQuick Start Guide v4\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://noirlab.edu/public/media/archives/techdocs/pdf/techdoc024.pdf\"\u003ehttps://noirlab.edu/public/media/archives/techdocs/pdf/techdoc024.pdf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHome \u003ca href=\"https://noirlab.edu/public/products/fitsliberator/\"\u003ehttps://noirlab.edu/public/products/fitsliberator/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFITS Liberator CLI \u003ca href=\"https://gitlab.com/noirlab/fits-liberator-cli\"\u003ehttps://gitlab.com/noirlab/fits-liberator-cli\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFITS Liberator GUI \u003ca href=\"https://gitlab.com/noirlab/fits-liberator-gui\"\u003ehttps://gitlab.com/noirlab/fits-liberator-gui\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Fits-Liberator"},{"content":"Intro pyraf는 iraf 의 파이썬 커뮤니티 버전이다. 기존의 많은 사용자 인터페이스를 개선하고 파이썬 코드를 쓸수있다. 천문학자들은 iraf -\u0026gt; pyraf -\u0026gt; astropy 로 옮겨가는 추세다. 전통적인 iraf 사용자라면 pyraf가 개선된 환경이다. 새로운 입문자라면 astropy 로 시작하는 것이 좋겠다. Install 요구사항: python3, iraf Install Pre Packages $ sudo apt install iraf python3-pyraf Links pyraf home: https://iraf-community.github.io/pyraf.html tutorial: https://pyraf.readthedocs.io/en/latest/ github: https://github.com/iraf-community/pyraf ","permalink":"https://neosolaris.github.io/posts/pyraf/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003epyraf는 \u003ca href=\"../iraf\"\u003eiraf\u003c/a\u003e 의 파이썬 커뮤니티 버전이다.\u003c/li\u003e\n\u003cli\u003e기존의 많은 사용자 인터페이스를 개선하고 파이썬 코드를 쓸수있다.\u003c/li\u003e\n\u003cli\u003e천문학자들은 \u003ccode\u003eiraf -\u0026gt; pyraf -\u0026gt; astropy\u003c/code\u003e 로 옮겨가는 추세다.\u003c/li\u003e\n\u003cli\u003e전통적인 \u003ca href=\"../iraf\"\u003eiraf\u003c/a\u003e 사용자라면 pyraf가 개선된 환경이다.\u003c/li\u003e\n\u003cli\u003e새로운 입문자라면 \u003ca href=\"../astropy\"\u003eastropy\u003c/a\u003e 로 시작하는 것이 좋겠다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e요구사항: python3, iraf\u003c/li\u003e\n\u003cli\u003eInstall Pre Packages\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install iraf python3-pyraf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003epyraf home:  \u003ca href=\"https://iraf-community.github.io/pyraf.html\"\u003ehttps://iraf-community.github.io/pyraf.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003etutorial: \u003ca href=\"https://pyraf.readthedocs.io/en/latest/\"\u003ehttps://pyraf.readthedocs.io/en/latest/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003egithub: \u003ca href=\"https://github.com/iraf-community/pyraf\"\u003ehttps://github.com/iraf-community/pyraf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Pyraf - Python iraf"},{"content":" 이것 또한 현재 관리되고 있지 않다. astropy에 통합되어 관리된다. 결론은 파이썬에서는 astropy만 집중하면 된다. ","permalink":"https://neosolaris.github.io/posts/pyfits/","summary":"\u003cul\u003e\n\u003cli\u003e이것 또한 현재 관리되고 있지 않다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../astropy\"\u003eastropy\u003c/a\u003e에 통합되어 관리된다.\u003c/li\u003e\n\u003cli\u003e결론은 파이썬에서는 \u003ca href=\"../astropy\"\u003eastropy\u003c/a\u003e만 집중하면 된다.\u003c/li\u003e\n\u003c/ul\u003e","title":"Pyfits - Python FITS Module"},{"content":"Intro fits를 편집하기 위한 C 라이브러리 모음 python, ruby, perl, lua 등의 wrapper가 다양하게 존재한다. Lua-ffi-bindings: fitsio.lua 깃허브: https://github.com/thenumbernine/lua-ffi-bindings 요구사항: Luajit, fitsio library 사용법: 아래 quick start quide 참고 $ sudo apt install libfitsio-dev $ git clone https://github.com/thenumbernine/lua-ffi-bindings.git $ cd lua-ffi-bindings 그런데 너무 오래된 소스이다. 2009 거기다 ffi-binding해서 사용하는 예제도 없다. pfits는 역시 오래 되었고, pyfits도 astropy로 통합되었다. 이런 것이 있었다 하고 넘어가자. 파이썬 사용자라면 astropy를 사용하는 것이 좋겠다. 아 루아로는 갈길이 멀다. 하지만 현재 astropy나 fits liberator도 내부에는 이 라이브러리를 쓴다. Links Home: https://heasarc.gsfc.nasa.gov/fitsio/ quick start guide https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html ","permalink":"https://neosolaris.github.io/posts/fitsio/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003efits를 편집하기 위한 C 라이브러리 모음\u003c/li\u003e\n\u003cli\u003epython, ruby, perl, lua 등의 wrapper가 다양하게 존재한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"lua-ffi-bindings-fitsiolua\"\u003eLua-ffi-bindings: fitsio.lua\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e깃허브: \u003ca href=\"https://github.com/thenumbernine/lua-ffi-bindings\"\u003ehttps://github.com/thenumbernine/lua-ffi-bindings\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e요구사항: Luajit, fitsio library\u003c/li\u003e\n\u003cli\u003e사용법: 아래 quick start quide 참고\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install libfitsio-dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/thenumbernine/lua-ffi-bindings.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e lua-ffi-bindings\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e그런데 너무 오래된 소스이다. 2009\u003c/li\u003e\n\u003cli\u003e거기다 ffi-binding해서 사용하는 예제도 없다.\u003c/li\u003e\n\u003cli\u003epfits는 역시 오래 되었고, pyfits도 astropy로 통합되었다.\u003c/li\u003e\n\u003cli\u003e이런 것이 있었다 하고 넘어가자.\u003c/li\u003e\n\u003cli\u003e파이썬 사용자라면 astropy를 사용하는 것이 좋겠다.\u003c/li\u003e\n\u003cli\u003e아 루아로는 갈길이 멀다.\u003c/li\u003e\n\u003cli\u003e하지만 현재 \u003ca href=\"../astropy\"\u003eastropy\u003c/a\u003e나 \u003ca href=\"../fits-liberator\"\u003efits liberator\u003c/a\u003e도 내부에는 이 라이브러리를 쓴다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHome: \u003ca href=\"https://heasarc.gsfc.nasa.gov/fitsio/\"\u003ehttps://heasarc.gsfc.nasa.gov/fitsio/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003equick start guide \u003ca href=\"https://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html\"\u003ehttps://heasarc.gsfc.nasa.gov/docs/software/fitsio/quick/quick.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"fitsio - FITS IO C Library"},{"content":"Intro FITS는 Flexible Image Transport System로 오픈 표준 디지털 파일 포맷이다. 주로 천문사진에 사용되는 포맷이다. 천문관측 사진을 직접 촬영하고 편집해도 된다. 그러나 FITS는 개인의 비용과 노력으로 얻을 수 없는 고사양 고품질의 사진과 포맷을 제공한다. 천문사진에 관심이 있다면 FITS 포맷을 잘 알아야 하는 이유가 있다. 천체를 연구하고 공개된 데이터를 이용하여 은하를 시각적으로 완성하는 일 이를 위해 FITS에 대해 알아보고 어떻게 다루어야 하는지를 정리한다. 파일 포맷 단순한 이미지만을 다루는 포맷이 아니라 여러 정보를 함께 넣을 수 있다. 기본 구조는 Primary Header + SCI(header:data) + ERR(header:data) DQ(header:data) 로 되어 있다. 하나의 파일에 여러 종류의 데이터를 담을 수 있다. 스펙트럼이나 광도곡선, 데이터 큐브 등의 관련 정보를 담을 수 있다. 즉, 하나의 천체를 관측하면 하나의 파일에 여러개의 프레임으로 데이터를 저장할 수 있다. Header: 천체의 관측기, 관측날짜, 노출시간, CCD의 사양 등 Data: 이미지 픽셀값, 천체의 flux값, 관측시간, 관측 파장 등 비유를 들자면 어떤 천체를 관측할 때 한 종이에 그림을 그리고 좌표나 기타 정보를 같이 기록해 두는 것과 같다. 확장자: .fits, .fit, .fts 편집 소프트웨어 siril - FITS Edit: 천문사진 전처리 또는 이미지 프로세싱 소프트웨어 iraf, - 미국 천문관측기관(NOAO)의 천문사진 프로세싱: clang gimp - 그래픽툴, FITS 편집 가능 photoshop - 그래픽툴, FITS 편집 가능, 유료, 윈도우즈 전용 imagej - FIT 편집 통합 툴 fits liberator - 유럽, 나사에서 사용하는 전처리 툴(ubuntu:libfitsio) FITS LIBRARY astropy - pyfits 포함 천문관측 모듈: anaconda 기본 모듈 pyraf - 미국 천문관측기관(NOAO)의 천문사진 프로세싱: python pyfits - fits 편집 모듈: python fitsio - fits 라이브러리: clang 보기 소프트웨어 fv - FITS Viewer: 오래된 툴, 조금 촌스럽다. gimp - 그래픽툴, 파일보기 및 다른 포맷 변환 ds9 - FITS Viewer (ubuntu:saods9) Guides Here\u0026rsquo;s how to edit James Webb Space Telescope images: Judy Schmidt 인터뷰 https://www.space.com/james-webb-space-telescope-image-editing FITS Liberator User Guide https://esahubble.org/static/projects/fits_liberator/v301files/userguide.pdf NEW IRAF ABC (IRAF를 이용한 측광 자료 전처리) https://astro.kias.re.kr/~hshwang/NEW_IRAF_ABC.pdf Links FITS HOME - https://fits.gsfc.nasa.gov/ FITS i/o libraries - https://fits.gsfc.nasa.gov/fits_libraries.html 위키백과 FITS - https://en.wikipedia.org/wiki/FITS Fits 관련 소프트웨어 리스트 - https://fits.gsfc.nasa.gov/fits_viewer.html Short Introduction of Image Processing https://noirlab.edu/public/media/archives/techdocs/pdf/techdoc027.pdf ","permalink":"https://neosolaris.github.io/posts/fits/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFITS는 Flexible Image Transport System로 오픈 표준 디지털 파일 포맷이다.\u003c/li\u003e\n\u003cli\u003e주로 천문사진에 사용되는 포맷이다.\u003c/li\u003e\n\u003cli\u003e천문관측 사진을 직접 촬영하고 편집해도 된다.\u003c/li\u003e\n\u003cli\u003e그러나 FITS는 개인의 비용과 노력으로 얻을 수 없는 고사양 고품질의 사진과 포맷을 제공한다.\u003c/li\u003e\n\u003cli\u003e천문사진에 관심이 있다면 FITS 포맷을 잘 알아야 하는 이유가 있다.\u003c/li\u003e\n\u003cli\u003e천체를 연구하고 공개된 데이터를 이용하여 은하를 시각적으로 완성하는 일\u003c/li\u003e\n\u003cli\u003e이를 위해 FITS에 대해 알아보고 어떻게 다루어야 하는지를 정리한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"파일-포맷\"\u003e파일 포맷\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e단순한 이미지만을 다루는 포맷이 아니라 여러 정보를 함께 넣을 수 있다.\u003c/li\u003e\n\u003cli\u003e기본 구조는 \u003ccode\u003ePrimary Header\u003c/code\u003e + \u003ccode\u003eSCI(header:data)\u003c/code\u003e + \u003ccode\u003eERR(header:data) DQ(header:data)\u003c/code\u003e 로 되어 있다.\u003c/li\u003e\n\u003cli\u003e하나의 파일에 여러 종류의 데이터를 담을 수 있다.\u003c/li\u003e\n\u003cli\u003e스펙트럼이나 광도곡선, 데이터 큐브 등의 관련 정보를 담을 수 있다.\u003c/li\u003e\n\u003cli\u003e즉, 하나의 천체를 관측하면 하나의 파일에 여러개의 프레임으로 데이터를 저장할 수 있다.\u003c/li\u003e\n\u003cli\u003eHeader: 천체의 관측기, 관측날짜, 노출시간, CCD의 사양 등\u003c/li\u003e\n\u003cli\u003eData: 이미지 픽셀값, 천체의 flux값, 관측시간, 관측 파장 등\u003c/li\u003e\n\u003cli\u003e비유를 들자면 어떤 천체를 관측할 때 한 종이에 그림을 그리고 좌표나 기타 정보를 같이 기록해 두는 것과 같다.\u003c/li\u003e\n\u003cli\u003e확장자: \u003ccode\u003e.fits\u003c/code\u003e, \u003ccode\u003e.fit\u003c/code\u003e, \u003ccode\u003e.fts\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"편집-소프트웨어\"\u003e편집 소프트웨어\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../siril\"\u003esiril\u003c/a\u003e - FITS Edit: 천문사진 전처리 또는 이미지 프로세싱 소프트웨어\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../iraf\"\u003eiraf\u003c/a\u003e, - 미국 천문관측기관(NOAO)의 천문사진 프로세싱: clang\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../gimp\"\u003egimp\u003c/a\u003e - 그래픽툴, FITS 편집 가능\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../photoshop\"\u003ephotoshop\u003c/a\u003e - 그래픽툴, FITS 편집 가능, 유료, 윈도우즈 전용\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../imagej\"\u003eimagej\u003c/a\u003e - FIT 편집 통합 툴\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../fits-liberator\"\u003efits liberator\u003c/a\u003e - 유럽, 나사에서 사용하는 전처리 툴(ubuntu:libfitsio)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"fits-library\"\u003eFITS LIBRARY\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../astropy\"\u003eastropy\u003c/a\u003e - pyfits 포함 천문관측 모듈: anaconda 기본 모듈\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../pyraf\"\u003epyraf\u003c/a\u003e - 미국 천문관측기관(NOAO)의 천문사진 프로세싱: python\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../pyfits\"\u003epyfits\u003c/a\u003e - fits 편집 모듈: python\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../fitsio\"\u003efitsio\u003c/a\u003e - fits 라이브러리: clang\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"보기-소프트웨어\"\u003e보기 소프트웨어\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../fv\"\u003efv\u003c/a\u003e - FITS Viewer: 오래된 툴, 조금 촌스럽다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../gimp\"\u003egimp\u003c/a\u003e - 그래픽툴, 파일보기 및 다른 포맷 변환\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../ds9\"\u003eds9\u003c/a\u003e - FITS Viewer (ubuntu:saods9)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"guides\"\u003eGuides\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHere\u0026rsquo;s how to edit James Webb Space Telescope images: Judy Schmidt 인터뷰\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.space.com/james-webb-space-telescope-image-editing\"\u003ehttps://www.space.com/james-webb-space-telescope-image-editing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eFITS Liberator User Guide\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://esahubble.org/static/projects/fits_liberator/v301files/userguide.pdf\"\u003ehttps://esahubble.org/static/projects/fits_liberator/v301files/userguide.pdf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eNEW IRAF ABC (IRAF를 이용한 측광 자료 전처리)\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://astro.kias.re.kr/~hshwang/NEW_IRAF_ABC.pdf\"\u003ehttps://astro.kias.re.kr/~hshwang/NEW_IRAF_ABC.pdf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFITS HOME - \u003ca href=\"https://fits.gsfc.nasa.gov/\"\u003ehttps://fits.gsfc.nasa.gov/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFITS i/o libraries - \u003ca href=\"https://fits.gsfc.nasa.gov/fits_libraries.html\"\u003ehttps://fits.gsfc.nasa.gov/fits_libraries.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e위키백과 FITS - \u003ca href=\"https://en.wikipedia.org/wiki/FITS\"\u003ehttps://en.wikipedia.org/wiki/FITS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFits 관련 소프트웨어 리스트 - \u003ca href=\"https://fits.gsfc.nasa.gov/fits_viewer.html\"\u003ehttps://fits.gsfc.nasa.gov/fits_viewer.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eShort Introduction of Image Processing \u003ca href=\"https://noirlab.edu/public/media/archives/techdocs/pdf/techdoc027.pdf\"\u003ehttps://noirlab.edu/public/media/archives/techdocs/pdf/techdoc027.pdf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"FITS - Flexible Image Transport System"},{"content":"Intro FITS (Flexible Image Transport System) 파일 포맷을 보거나 편집할 수 있는 프로그램 fits 포맷은 주로 천문사진에서 사용되는 포맷이다. 리눅스의 경우 직접 다운로드 받는 것보다 패키지로 설치하는 것이 좋다. Install ubuntu install $ sudo apt install wish ftools-fv $ fv Links Fits 파일 포맷을 보거나 편집 가능한 모든 프로그램을 소개하고 있다. NASA FITS : https://fits.gsfc.nasa.gov/fits_viewer.html ","permalink":"https://neosolaris.github.io/posts/fv/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../fits\"\u003eFITS\u003c/a\u003e (Flexible Image Transport System) 파일 포맷을 보거나 편집할 수 있는 프로그램\u003c/li\u003e\n\u003cli\u003efits 포맷은 주로 천문사진에서 사용되는 포맷이다.\u003c/li\u003e\n\u003cli\u003e리눅스의 경우 직접 다운로드 받는 것보다 패키지로 설치하는 것이 좋다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eubuntu install\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install wish ftools-fv \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e fv\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFits 파일 포맷을 보거나 편집 가능한 모든 프로그램을 소개하고 있다.\u003c/li\u003e\n\u003cli\u003eNASA FITS : \u003ca href=\"https://fits.gsfc.nasa.gov/fits_viewer.html\"\u003ehttps://fits.gsfc.nasa.gov/fits_viewer.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"FV - Fits file Viewer"},{"content":"Intro simpleitk는 오픈소스로서 주로 의료, 천문에서 사진을 프로세싱하는 툴킷이다. 주로 python을 사용하는데 설치와 사용이 너무 지저분하고 번거롭다. lua를 사용하는 방법을 알아 보았다. 설치는 luarocks 패키지 매니저를 사용하였고 api형태로 컴파일해서 사용한다. Install Python Package Install $ pip install SimpleITK $ pip install SimpleITK-SimpleElastix $ vim test.py import SimpleITK as sitk Lua Package Install : version 2.2.0 $ luarocks search simpleitk # 패키지 검색 $ luarocks install --local simpleitk # 로컬`~/.luarocks`에 설치 $ vim test.lua Links Quick Start: https://simpleitk.readthedocs.io/en/master/gettingStarted.html Github Page: https://github.com/SimpleITK/SimpleITKLuaRock Python SimpleITK Howto: https://bo-10000.tistory.com/61 ","permalink":"https://neosolaris.github.io/posts/simpleitk/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003esimpleitk는 오픈소스로서 주로 의료, 천문에서 사진을 프로세싱하는 툴킷이다.\u003c/li\u003e\n\u003cli\u003e주로 python을 사용하는데 설치와 사용이 너무 지저분하고 번거롭다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../lua\"\u003elua\u003c/a\u003e를 사용하는 방법을 알아 보았다.\u003c/li\u003e\n\u003cli\u003e설치는 \u003ca href=\"../luarocks\"\u003eluarocks\u003c/a\u003e 패키지 매니저를 사용하였고 api형태로 컴파일해서\n사용한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePython Package Install\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e pip install SimpleITK\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e pip install SimpleITK-SimpleElastix\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim test.py\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"nn\"\u003eSimpleITK\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"nn\"\u003esitk\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eLua Package Install : version 2.2.0\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks search simpleitk           \u003cspan class=\"c1\"\u003e# 패키지 검색\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks install --local simpleitk  \u003cspan class=\"c1\"\u003e# 로컬`~/.luarocks`에 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim test.lua\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eQuick Start: \u003ca href=\"https://simpleitk.readthedocs.io/en/master/gettingStarted.html\"\u003ehttps://simpleitk.readthedocs.io/en/master/gettingStarted.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGithub Page: \u003ca href=\"https://github.com/SimpleITK/SimpleITKLuaRock\"\u003ehttps://github.com/SimpleITK/SimpleITKLuaRock\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePython SimpleITK Howto: \u003ca href=\"https://bo-10000.tistory.com/61\"\u003ehttps://bo-10000.tistory.com/61\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"SimpleITK - Open Source Multi-dimensional Image Analysis"},{"content":"저 허무의 기슭으로 나는 가네 이 자유로운 영혼 강물로 흘러 내 들꽃으로 피어 바람에 흩날려도 서러워 않으리. 아무도 오지 않는 길에 저 외로운 새야 저문 서편 하늘 끝까지 날아가렴. 외쳐부르던 기쁨의 노래 간 곳 없고 또 혼자가 되어 나는 가네. 새벽은 찾아오리니 불멸의 이름으로 덧없는 방랑의 별이 뜨고 또.. 사라져갈뿐.. 먼 지평의 아침이 크고 염원의 새가 울면 천국 길을 열어다오 저.. 하늘로 간다.. 나비 - 김두수 https://www.youtube.com/watch?v=dFV6eYwrMao 들꽃 - 김두수 https://www.youtube.com/watch?v=Mx95-1VpA2w ","permalink":"https://neosolaris.github.io/posts/%EB%B3%B4%ED%97%A4%EB%AF%B8%EC%95%88/","summary":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e저 허무의 기슭으로 나는 가네\n이 자유로운 영혼 강물로 흘러\n내 들꽃으로 피어 바람에 흩날려도\n서러워 않으리. \n아무도 오지 않는 길에 저 외로운 새야\n저문 서편 하늘 끝까지 날아가렴.\n외쳐부르던 기쁨의 노래 간 곳 없고\n또 혼자가 되어 나는 가네.\n새벽은 찾아오리니 불멸의 이름으로\n덧없는 방랑의 별이 뜨고 또..\n사라져갈뿐..\n먼 지평의 아침이 크고 \n염원의 새가 울면\n천국 길을 열어다오 저..\n하늘로 간다..\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/NS1u4GzygIc?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003chr\u003e\n\u003cul\u003e\n\u003cli\u003e나비 - 김두수\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=dFV6eYwrMao\"\u003ehttps://www.youtube.com/watch?v=dFV6eYwrMao\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e들꽃 - 김두수\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=Mx95-1VpA2w\"\u003ehttps://www.youtube.com/watch?v=Mx95-1VpA2w\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"보헤미안 - 김두수"},{"content":" 강허달림의 가창력은 말 할 것도 없고 연주도 정말 수준급이다. 다만 가사가 곡에 애써 얹히기 위해 모호하고 무리스러운 단어들이 많은 것 같다. 그러나 곡 전체가 주는 이미지가 분위기가 모든 것을 덮고도 남는다. 기다림은 설레임이다. 그런 내가 참 바보같다. 반딧불 춤추던 곳에 앉아 밤새껏 웃음을 나눴지 휘둥그레진 눈빛 사이로 들어오는 찬란한 빛의 움직임 조차 하염없이 가다보면 어느새 한웅큼 손에 쥐어진 세상들 설레임들 그 누가 널 보았던가 왜 숨길 수없이 드러내던지 빼곡히 들어찬 숨결조차 버거우면 살짝 여밀듯이 보일듯이 너를 보여줘 그럼 아니 또다른 무지개가 널 반길지 난 그저 나였을 뿐이고 넌 그저 너였을 뿐이니 너도 나도 나도 너도 너나 할것 없는 세상에 생각에 최선에 말들에 웃음에 이미 별볼일 없는 것들이진 않아 기다림속에서도 활짝 웃을수 있겠지 아무렇지 않은 듯 흘려버린 시간들 공간들도 얘기할수 있게 또 그래 기다림이란 설레임이야 말없이 보내주고 기쁠수 있다는건 바보 같으니 바보같으니 바보 같으니 바보같으니 바보 같으니 바보같으니 바보 같으니.... 외로운 사람들 - 강허달림 (이정선 작사/작곡) https://www.youtube.com/watch?v=kKXH5nlFEno\u0026amp;list=RDbZAohJDiln4\u0026amp;index=3 ","permalink":"https://neosolaris.github.io/posts/%EA%B8%B0%EB%8B%A4%EB%A6%BC%EC%84%A4%EB%A0%88%EC%9E%84/","summary":"\u003cul\u003e\n\u003cli\u003e강허달림의 가창력은 말 할 것도 없고 연주도 정말 수준급이다.\u003c/li\u003e\n\u003cli\u003e다만 가사가 곡에 애써 얹히기 위해 모호하고 무리스러운 단어들이 많은 것 같다.\u003c/li\u003e\n\u003cli\u003e그러나 곡 전체가 주는 이미지가 분위기가 모든 것을 덮고도 남는다.\u003c/li\u003e\n\u003cli\u003e기다림은 설레임이다. 그런 내가 참 바보같다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e반딧불 춤추던 곳에 앉아 밤새껏 웃음을 나눴지\n휘둥그레진 눈빛 사이로 들어오는\n찬란한 빛의 움직임 조차 하염없이 가다보면\n어느새 한웅큼 손에 쥐어진 세상들 설레임들\n그 누가 널 보았던가 왜 숨길 수없이 드러내던지\n빼곡히 들어찬 숨결조차 버거우면\n살짝 여밀듯이 보일듯이 너를 보여줘\n그럼 아니 또다른 무지개가 널 반길지\n난 그저 나였을 뿐이고 넌 그저 너였을 뿐이니\n너도 나도 나도 너도\n너나 할것 없는 세상에 생각에 최선에 말들에 웃음에\n이미 별볼일 없는 것들이진 않아\n기다림속에서도 활짝 웃을수 있겠지\n아무렇지 않은 듯 흘려버린 시간들 공간들도\n얘기할수 있게 또 그래 기다림이란 설레임이야\n말없이 보내주고 기쁠수 있다는건\n바보 같으니 바보같으니\n바보 같으니 바보같으니\n바보 같으니 바보같으니 바보 같으니....\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/bZAohJDiln4?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\n\u003chr\u003e\n\u003cul\u003e\n\u003cli\u003e외로운 사람들 - 강허달림 (이정선 작사/작곡)\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/watch?v=kKXH5nlFEno\u0026amp;list=RDbZAohJDiln4\u0026amp;index=3\"\u003ehttps://www.youtube.com/watch?v=kKXH5nlFEno\u0026amp;list=RDbZAohJDiln4\u0026amp;index=3\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"기다림, 설레임 - 강허달림"},{"content":" 눈이 올 때면 슈베르트의 겨울나그네와 함께 꼭 듣는 곡이다. 옛 명인들의 구수하고 담백한 것과는 다르게 음색이 맑고 청아하다. 이 곡은 그가 생애 후반에 발표한 곡이고 그래서 더욱 완성도가 높다. 현대적 감각과 산조의 전통 가락이 잘 어우러져 춘설의 풍경이 아름답게 펼쳐진다. 이제는 고인이 되신 명인을 다시 한 번 기리고 좋은 곡을 남겨 주신 것에 감사 드린다. 00:00 조용한 아침 (Calm Morning) 01:10 평화롭게 (Peacefully) 03:53 신비롭게 (Mysteriously) 05:36 익살스럽게 (Humorously) ","permalink":"https://neosolaris.github.io/posts/%EC%B6%98%EC%84%A4/","summary":"\u003cul\u003e\n\u003cli\u003e눈이 올 때면 슈베르트의 겨울나그네와 함께 꼭 듣는 곡이다.\u003c/li\u003e\n\u003cli\u003e옛 명인들의 구수하고 담백한 것과는 다르게 음색이 맑고 청아하다.\u003c/li\u003e\n\u003cli\u003e이 곡은 그가 생애 후반에 발표한 곡이고 그래서 더욱 완성도가 높다.\u003c/li\u003e\n\u003cli\u003e현대적 감각과 산조의 전통 가락이 잘 어우러져 춘설의 풍경이 아름답게 펼쳐진다.\u003c/li\u003e\n\u003cli\u003e이제는 고인이 되신 명인을 다시 한 번 기리고 좋은 곡을 남겨 주신 것에 감사 드린다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e00:00 조용한 아침 (Calm Morning)\n01:10 평화롭게 (Peacefully)\n03:53 신비롭게 (Mysteriously)\n05:36 익살스럽게 (Humorously)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ca href=\"http://www.youtube.com/watch?v=Ts2SOQBbTPs\" title=\"춘설-황병기\"\u003e\u003cimg alt=\"춘설-황병기\" loading=\"lazy\" src=\"../http://img.youtube.com/vi/Ts2SOQBbTPs/0.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e","title":"춘설 - 황병기"},{"content":" 세월호 희생자들을 기념하여 Bruskers Guitar Duo 가 연주한 작품. Youtube에서 발견한 가장 아름다운 아리랑 연주가 아닐까 한다. 선별 기준은 역시 내게 감동을 주는가이다. ","permalink":"https://neosolaris.github.io/posts/%EC%95%84%EB%A6%AC%EB%9E%91/","summary":"\u003cul\u003e\n\u003cli\u003e세월호 희생자들을 기념하여 Bruskers Guitar Duo 가 연주한 작품.\u003c/li\u003e\n\u003cli\u003eYoutube에서 발견한 가장 아름다운 아리랑 연주가 아닐까 한다.\u003c/li\u003e\n\u003cli\u003e선별 기준은 역시 내게 감동을 주는가이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"http://www.youtube.com/watch?v=Ts2SOQBbTPs\" title=\"Arirang Bruskers Guitar Duo\"\u003e\u003cimg alt=\"Arirang Bruskers Guitar Duo\" loading=\"lazy\" src=\"../http://img.youtube.com/vi/JCEQkaUBIaM/0.jpg\"\u003e\u003c/a\u003e\u003c/p\u003e","title":"아리랑 - Bruskers Guitar Duo"},{"content":" 2023-08-11: rlwarp + readline을 활용한 키워드 완성 기능 추가 Intro 코딩을 하기 전 또는 빠른 확인을 위해 인터엑티브 모드를 사용 간단한 테스트나 몇가지 실험을 해보는 용도로서 좋다. ilua를 사용하면 jupyter console, notebook 등으로 확장할 수 있다. Execute String $ lua -e \u0026#39;print(\u0026#34;hello world\u0026#34;)\u0026#39; hello world Interactive Mode lua -i 또는 luajit -i 로 interactive mode로 진입 -i 옵션이 없어도 진입 가능 local 변수가 다음 라인에서 인식되지 않는다. 사용할 때 주의 $ lua -i -- 또는 luajit -i \u0026gt; local a = \u0026#39;hello world\u0026#39; -- local 변수 설정 \u0026gt; print(a) -- print nil -- 결과: nil \u0026gt; a = \u0026#39;hello world\u0026#39; -- Global 변수 설정 \u0026gt; print(a) -- print hello world -- 결과: hello world \u0026gt; os.exit() -- 종료: 또는 Ctrl+d, Ctrl+c Opening Lua File \u0026gt; f = assert(loadfile(\u0026#39;foo.lua\u0026#39;) -- lua파일 로드 \u0026gt; f() -- 실행 \u0026gt; dofile(\u0026#39;foo.lua\u0026#39;) -- 로드 및 실행 \u0026gt; m = require(\u0026#39;mymodule\u0026#39;) -- mymodule.lua 모듈 로드 \u0026gt; m.parse() -- 모듈내 함수 실행 Load Libary Example -- file \u0026#39;lib1.lua\u0026#39; function norm(x,y) local n2 = x^2 + y^2 return math.sqrt(n2) end function twice(x) return 2*x end \u0026gt; dofile(\u0026#39;lib1.lua\u0026#39;) -- load your library \u0026gt; n = norm(3.4, 1.0) -- using lib1.lua functions \u0026gt; print(twice(n)) -- using twice functions Command Line Arguments (-- /dev/null 옵션 주목) $ lua -i -- /dev/null one two three \u0026gt; print(arg[1]) -- one \u0026gt; print(arg[2]) -- two \u0026gt; print(arg[3]) -- three \u0026gt; print(arg[0]) -- /dev/null Lua, LuaJit line completion like in bash bash에서 line completion과 유사한 기능을 구현 rlwrap 활용 - -a:always-readline,-c:complete-filenames,-e:extra-char-after-completion $ sudo apt install rlwrap $ alias luajit=\u0026#39;rlwrap -ac -e \u0026#34;\u0026#34; -pRed luajit\u0026#39; # add this line to ~/.bashrc $ luajit \u0026gt; = 2 + 2 4 \u0026gt; = 2 + 2 --\u0026gt; 화살키를 이용하여 상위 명령라인을 불러 올 수 있다. rlwarp의 readline을 활용한 명령어 완성: Dictionary 파일을 만들고 사용. $ echo \u0026#34;print local assert string ...\u0026#34; \u0026gt; ~/.luadict $ alias luajit=\u0026#39;rlwrap -b \u0026#34;\u0026#34; -f $HOME/.luadic -pRed -ca -e \u0026#34;\u0026#34; luajit\u0026#39; $ luajit \u0026gt; ass(-\u0026gt; Press Tab Key anc Check) iLua : with Jupyter Jupyter의 막강한 지원아래 콘솔형 인터엑티브를 사용할 수 있다. 코드완성 및 vi edit mode 그리고 변수를 직접 출력가능하다. 물론 특성상 local 변수는 역시 지원되지 않는다. 현재로서는 그렇다. ~/.local 이하에 jupyter 및 ilua가 설치된다. 아래처럼 vi edit mode를 사용하면 더욱 편리하다. $ pip install ilua $ echo \u0026#34;c.ZMQTerminalInteractiveShell.editing_mode=\u0026#39;vi\u0026#39;\u0026#34; \u0026gt; ~/.jupyter/jupyter_console_config.py $ jupyter console -h # help $ jupyter kernelspec list # 내장 커널 스펙 확인 $ ~/.local/bin/ilua -i lua[jit] # 실행 $ echo \u0026#34;alias ilua=\u0026#39;ilua -i luajit\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bashrc # luajit 전용 alias $ source ~/.bashrc $ ilua Links https://www.lua.org/pil/1.1.html https://www.tutorialspoint.com/command-line-arguments-in-lua https://lua-users.org/wiki/InteractiveLua https://github.com/guysv/ilua https://jupyter-console.readthedocs.io/en/latest/config_options.html ","permalink":"https://neosolaris.github.io/posts/lua-interactive/","summary":"\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2023-08-11: rlwarp + readline을 활용한 키워드 완성 기능 추가\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e코딩을 하기 전 또는 빠른 확인을 위해 인터엑티브 모드를 사용\u003c/li\u003e\n\u003cli\u003e간단한 테스트나 몇가지 실험을 해보는 용도로서 좋다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eilua\u003c/code\u003e를 사용하면 jupyter console, notebook 등으로 확장할 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"execute-string\"\u003eExecute String\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e lua -e \u003cspan class=\"s1\"\u003e\u0026#39;print(\u0026#34;hello world\u0026#34;)\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ehello world\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"interactive-mode\"\u003eInteractive Mode\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003elua -i\u003c/code\u003e 또는 \u003ccode\u003eluajit -i\u003c/code\u003e 로 interactive mode로 진입\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e-i\u003c/code\u003e 옵션이 없어도 진입 가능\u003c/li\u003e\n\u003cli\u003elocal 변수가 다음 라인에서 인식되지 않는다. 사용할 때 주의\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-cosole\" data-lang=\"cosole\"\u003e$ lua -i                   -- 또는 luajit -i\n\u0026gt; local a = \u0026#39;hello world\u0026#39;  -- local 변수 설정\n\u0026gt; print(a)                 -- print\nnil                        -- 결과: nil\n\n\u0026gt; a = \u0026#39;hello world\u0026#39;        -- Global 변수 설정\n\u0026gt; print(a)                 -- print\nhello world                -- 결과: hello world\n\n\u0026gt; os.exit()                -- 종료: 또는 Ctrl+d, Ctrl+c\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eOpening Lua File\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e assert\u003cspan class=\"o\"\u003e(\u003c/span\u003eloadfile\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;foo.lua\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e  -- lua파일 로드\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e f\u003cspan class=\"o\"\u003e()\u003c/span\u003e                             -- 실행\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e dofile\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;foo.lua\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e               -- 로드 및 실행\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003em\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e require\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;mymodule\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e         -- mymodule.lua 모듈 로드\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e m.parse\u003cspan class=\"o\"\u003e()\u003c/span\u003e                       -- 모듈내 함수 실행\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eLoad Libary Example\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- file \u0026#39;lib1.lua\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003enorm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kd\"\u003elocal\u003c/span\u003e \u003cspan class=\"n\"\u003en2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kr\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003emath.sqrt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003en2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003etwice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kr\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kr\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e dofile\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;lib1.lua\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e     -- load your library\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e norm\u003cspan class=\"o\"\u003e(\u003c/span\u003e3.4, 1.0\u003cspan class=\"o\"\u003e)\u003c/span\u003e     -- using lib1.lua functions\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e print\u003cspan class=\"o\"\u003e(\u003c/span\u003etwice\u003cspan class=\"o\"\u003e(\u003c/span\u003en\u003cspan class=\"o\"\u003e))\u003c/span\u003e        -- using twice functions\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eCommand Line Arguments (\u003ccode\u003e-- /dev/null\u003c/code\u003e 옵션 주목)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e lua -i -- /dev/null one two three\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e print\u003cspan class=\"o\"\u003e(\u003c/span\u003earg\u003cspan class=\"o\"\u003e[\u003c/span\u003e1\u003cspan class=\"o\"\u003e])\u003c/span\u003e -- one\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e print\u003cspan class=\"o\"\u003e(\u003c/span\u003earg\u003cspan class=\"o\"\u003e[\u003c/span\u003e2\u003cspan class=\"o\"\u003e])\u003c/span\u003e -- two\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e print\u003cspan class=\"o\"\u003e(\u003c/span\u003earg\u003cspan class=\"o\"\u003e[\u003c/span\u003e3\u003cspan class=\"o\"\u003e])\u003c/span\u003e -- three\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e print\u003cspan class=\"o\"\u003e(\u003c/span\u003earg\u003cspan class=\"o\"\u003e[\u003c/span\u003e0\u003cspan class=\"o\"\u003e])\u003c/span\u003e -- /dev/null\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lua-luajit-line-completion-like-in-bash\"\u003eLua, LuaJit line completion like in bash\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ebash에서 line completion과 유사한 기능을 구현\u003c/li\u003e\n\u003cli\u003erlwrap 활용 - \u003ccode\u003e-a:always-readline\u003c/code\u003e,\u003ccode\u003e-c:complete-filenames\u003c/code\u003e,\u003ccode\u003e-e:extra-char-after-completion\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install rlwrap\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ealias\u003c/span\u003e \u003cspan class=\"nv\"\u003eluajit\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;rlwrap -ac -e \u0026#34;\u0026#34; -pRed luajit\u0026#39;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# add this line to ~/.bashrc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luajit\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e + \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e4\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e + \u003cspan class=\"m\"\u003e2\u003c/span\u003e  --\u0026gt; 화살키를 이용하여 상위 명령라인을 불러 올 수 있다.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003erlwarp의 readline을 활용한 명령어 완성: Dictionary 파일을 만들고 사용.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;print local assert string ...\u0026#34;\u003c/span\u003e \u0026gt; ~/.luadict\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ealias\u003c/span\u003e \u003cspan class=\"nv\"\u003eluajit\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;rlwrap -b \u0026#34;\u0026#34; -f $HOME/.luadic -pRed -ca -e \u0026#34;\u0026#34; luajit\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luajit\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e ass\u003cspan class=\"o\"\u003e(\u003c/span\u003e-\u0026gt; Press Tab Key anc Check\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"ilua--with-jupyter\"\u003eiLua : with Jupyter\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eJupyter의 막강한 지원아래 콘솔형 인터엑티브를 사용할 수 있다.\u003c/li\u003e\n\u003cli\u003e코드완성 및 vi edit mode 그리고 변수를 직접 출력가능하다.\u003c/li\u003e\n\u003cli\u003e물론 특성상 local 변수는 역시 지원되지 않는다. 현재로서는 그렇다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e~/.local\u003c/code\u003e 이하에 jupyter 및 ilua가 설치된다.\u003c/li\u003e\n\u003cli\u003e아래처럼 \u003ccode\u003evi edit mode\u003c/code\u003e를 사용하면 더욱 편리하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e pip install ilua\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;c.ZMQTerminalInteractiveShell.editing_mode=\u0026#39;vi\u0026#39;\u0026#34;\u003c/span\u003e \u0026gt; ~/.jupyter/jupyter_console_config.py\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e jupyter console -h             \u003cspan class=\"c1\"\u003e# help\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e jupyter kernelspec list        \u003cspan class=\"c1\"\u003e# 내장 커널 스펙 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ~/.local/bin/ilua -i lua\u003cspan class=\"o\"\u003e[\u003c/span\u003ejit\u003cspan class=\"o\"\u003e]\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;alias ilua=\u0026#39;ilua -i luajit\u0026#39;\u0026#34;\u003c/span\u003e \u0026gt;\u0026gt; ~/.bashrc  \u003cspan class=\"c1\"\u003e# luajit 전용 alias\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003esource\u003c/span\u003e ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ilua\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.lua.org/pil/1.1.html\"\u003ehttps://www.lua.org/pil/1.1.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.tutorialspoint.com/command-line-arguments-in-lua\"\u003ehttps://www.tutorialspoint.com/command-line-arguments-in-lua\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lua-users.org/wiki/InteractiveLua\"\u003ehttps://lua-users.org/wiki/InteractiveLua\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/guysv/ilua\"\u003ehttps://github.com/guysv/ilua\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://jupyter-console.readthedocs.io/en/latest/config_options.html\"\u003ehttps://jupyter-console.readthedocs.io/en/latest/config_options.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Lua - Interactive Mode"},{"content":" 이 곡의 사연은 나무위키 에 잘 나와 있다. 정말 많은 사람이 불렀지만 내 마음에 깊은 울림을 주는 것을 정리해 본다. 얼굴 - 심봉석 시/ 신귀복 곡 동그라미 그리려다 무심코 그린 얼굴 내 마음 따라 피어나던 하얀 그때 꿈을 풀잎에 연 이슬처럼 빛나던 눈동자 동그랗게 동그랗게 맴돌다 가는 얼굴 동그라미 그리려다 무심코 그린 얼굴 무지개 따라 올라갔던 오색빛 하늘나래 구름 속에 나비처럼 나르던 지난날 동그랗게 동그랗게 맴돌곤 하는 얼굴 소프라노 - 정지원 바리톤 - 김재섭 소프라노 - 신영옥 ","permalink":"https://neosolaris.github.io/posts/%EC%96%BC%EA%B5%B4/","summary":"\u003cul\u003e\n\u003cli\u003e이 곡의 사연은 \u003ca href=\"../https://namu.wiki/w/%EC%96%BC%EA%B5%B4#s-3\"\u003e나무위키\u003c/a\u003e 에 잘 나와 있다.\u003c/li\u003e\n\u003cli\u003e정말 많은 사람이 불렀지만 내 마음에 깊은 울림을 주는 것을 정리해 본다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e얼굴 - 심봉석 시/ 신귀복 곡\n\n동그라미 그리려다 무심코 그린 얼굴\n내 마음 따라 피어나던 하얀 그때 꿈을\n풀잎에 연 이슬처럼 빛나던 눈동자\n동그랗게 동그랗게 맴돌다 가는 얼굴\n\n동그라미 그리려다 무심코 그린 얼굴\n무지개 따라 올라갔던 오색빛 하늘나래\n구름 속에 나비처럼 나르던 지난날\n동그랗게 동그랗게 맴돌곤 하는 얼굴\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e소프라노 - 정지원\n\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/QUViVJwlGLI?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e\n\u003c/p\u003e","title":"얼굴 - 심봉석 시/ 신귀복 곡"},{"content":" 언제나 들으면 가슴이 먹먹해지고 눈물이 나는 곡. 차분하고 조용한 그리고 꾸밈없는 소리에 이내 그리움에 젖어들고 만다. 나의 외로움이 너를 부를 때 - 장필순 널 위한 나의 마음이 이제는 조금씩 식어가고 있어 하지만 잊진 않았지 수많은 겨울들 나를 감싸안던 너의 손을 서늘한 바람이 불어올 때쯤엔 또다시 살아나 그늘진 너의 얼굴이 다시 내게 돌아올 수 없는 걸 알고 있지만 가끔씩 오늘 같은 날 외로움이 널 부를 땐 내 마음 속에 조용히 찾아와줘 널 위한 나의 기억이 이제는 조금 씩 지워지고 있어 하지만 잊진 않았지 힘겨운 어제들 나를 지켜주던 너의 가슴 이렇게 내 맘이 서글퍼질 때면 또다시 살아나 그늘진 너의 얼굴이 다시 내게 돌아올 수 없는 걸 알고 있지만 가끔씩 오늘 같은 날 외로움이 널 부를 땐 내 마음 속에 조용히 찾아와줘 ","permalink":"https://neosolaris.github.io/posts/%EB%82%98%EC%9D%98-%EC%99%B8%EB%A1%9C%EC%9B%80%EC%9D%B4-%EB%84%88%EB%A5%BC-%EB%B6%80%EB%A5%BC%EB%95%8C/","summary":"\u003cul\u003e\n\u003cli\u003e언제나 들으면 가슴이 먹먹해지고 눈물이 나는 곡.\u003c/li\u003e\n\u003cli\u003e차분하고 조용한 그리고 꾸밈없는 소리에 이내 그리움에 젖어들고 만다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e나의 외로움이 너를 부를 때 - 장필순\n\n\n널 위한 나의 마음이 이제는 조금씩 식어가고 있어\n하지만 잊진 않았지 수많은 겨울들\n나를 감싸안던 너의 손을\n서늘한 바람이 불어올 때쯤엔 또다시 살아나\n\n그늘진 너의 얼굴이 다시 내게 돌아올 수 없는 걸 알고 있지만\n가끔씩 오늘 같은 날 외로움이 널 부를 땐\n내 마음 속에 조용히 찾아와줘\n\n널 위한 나의 기억이 이제는 조금 씩 지워지고 있어\n하지만 잊진 않았지 힘겨운 어제들\n나를 지켜주던 너의 가슴\n이렇게 내 맘이 서글퍼질 때면 또다시 살아나\n\n그늘진 너의 얼굴이 다시 내게 돌아올 수 없는 걸 알고 있지만\n가끔씩 오늘 같은 날 외로움이 널 부를 땐\n내 마음 속에 조용히 찾아와줘\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv style=\"position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;\"\u003e\n      \u003ciframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\" loading=\"eager\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/hkZHH0B2CIQ?autoplay=0\u0026amp;controls=1\u0026amp;end=0\u0026amp;loop=0\u0026amp;mute=0\u0026amp;start=0\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;\" title=\"YouTube video\"\u003e\u003c/iframe\u003e\n    \u003c/div\u003e","title":"나의 외로움이 너를 부를 때 - 장필순"},{"content":"TODO 한글 환경 구성하기 대체할 터미널 프로그램 알아보기 또는 기존 것 재 설정 설치 스크립트 또는 요약본 만들기 pacman 사용법 따로 정리 - 상위 문서로 archlinux의 주 용도를 정하고 이에 맞게 구성하고 문서 정리 aur 및 yay 설치 및 사용법 정리: https://linuxhint.com/aur_arch_linux/ Intro 아치리눅스는 설치환경이 터미널에서 시작한다. 하나씩 설치하고 설정해 나가는 방식이다. 다른 배포판과는 다르게 재설치 없이 한 번 설치 후 계속 업데이트 해서 사용한다. 초반에만 기본을 잘 설치하고 조금씩 가꾸는 재미가 있다. 설치 이미지 준비 최신 설치 이미지 다운로드 및 USB 부트 만들기 $ wget http://mirror.anigil.com/archlinux/iso/2022.09.03/archlinux-2022.09.03-x86_64.iso $ lsusb # 자신의 USB 장치 확인 $ sudo dd bs=4M if=archlinux-2022.09.03-x86_64.iso of=/dev/sda 설치할 시스템에 USB 부팅 BIOS 설정: 부팅 순서 조정 후 부팅 자신의 시스템이 BIOS인지 UEFI인지 확인은 다음과 같다. # ls /sys/firmware/efi #디렉토리 존재 여부 확인 Install Arch wifi 설정 # ip link # wifi 장치 및 연결 확인 # iwctl --passphrase \u0026#39;mypassword\u0026#39; station wlan0 connect mywifi-ssid # 연결 # ping google.com # 인터넷 연결 확인 # reflector -–verbose -c “Korea” --sort rate \u0026gt; /etc/pacman.d/mirrorlist # pacman -Syy # update os base 파티션 설정 및 파일 시스템 생성 # lsblk # 내 드라이브 장치 확인 # fdisk -l /dev/sda # 설치 드라이브 파티션 정보 확인 # fdisk /dev/sda # 파티션 설정: sda1(83:Linux)은 root(115GB), sda2(82:Swap) swap(4GB) # mkfs -t ext4 /dev/sda1 # mount /dev/sda1 /mnt # mkdir /mnt/boot # mkswap /dev/sda2 # swapon /dev/sda2 기본 OS를 /mnt에 설치하기 # pacstrap -i /mnt base linux linux-firmware sudo vim Setup # genfstab -U -p /mnt \u0026gt;\u0026gt; /mnt/etc/fstab # fstab 생성 # cat /mnt/etc/fstab # 확인 # arch-chroot /mnt # root를 /mnt로 변경 # ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime # timezone # timedatectl set-ntp true # ntp로 시간 동기화 # hwclock --systohc # 하드웨어 시간도 맞춤 # date # 확인 # vim /etc/locale.gen # en_US.UTF-8, ko_KR.UTF-8 주석 제거 # locale-gen # 로케일 설정 및 파일 생성 # echo LANG=en_US.UTF-8 \u0026gt; /etc/locale.conf # 로케일 설정 # echo \u0026#34;host_name\u0026#34; \u0026gt; /etc/hostname # 호스트명 등록 # cat \u0026lt;\u0026lt;EOF \u0026gt; /etc/hosts # hosts파일 등록 127.0.0.1 localhost ::1 localhost EOF # passwd # root 패스워드 설정 # useradd -m -G wheel -s /bin/bash borisu # 사용자 등록 # passwd borisu # 사용자 패스워드 설정 # vim /etc/sudoers # borisu ALL=(ALL) ALL 추가 # pacman -S grub # grub 패키지 설치 # grub-install /dev/sda # grub 디스크에 설치 # grub-mkconfig -o /boot/grub/grub.cfg # 설정파일 만들기 # ls /boot # 확인 # pacman -S networkmanager # 네트웍 매니저 설치 # systemctl enable NetworkManager # 부팅시 자동 실행 # exit # 나가기 umount -R /mnt # 언마운트 reboot # 재부팅 재부팅 후 네트웍 재설정 최초로 부팅시 한 번만 등록해 주면 된다. $ sudo nmcli dev wifi connect \u0026lt;wifi-ssid\u0026gt; password \u0026lt;\u0026#39;wifi-passowrd\u0026#39;\u0026gt; 추가 패키지 설치 $ sudo pacman -Syu $ sudo pacman -S base-devel man-db man-pages wget neovim KDE 플라즈마 GUI 설치 설치 중에 물어보는 것은 모두 디폴트로 설치 $ sudo pacman -S xorg plasma plasma-wayland-session kde-applications firefox $ sudo systemctl enable sddm # Enable Display Drivers $ sudo reboot # 재부팅 한글 환경 구성 $ sudo pacman -S noto-fonts-cjk ttf-dejavu 참고 사항 가급적 패키지는 pacman으로 설치한다. aur 패키지는 꼭 필요한 경우만 설치하고 관리자로 yay를 쓴다. Links How to Install Arch Linux 2021 https://techofide.com/blogs/how-to-install-arch-linux-2021-installation-guide-techofide/ 아치리눅스 위키 https://wiki.archlinux.org ","permalink":"https://neosolaris.github.io/posts/archlinux-install/","summary":"\u003ch2 id=\"todo\"\u003eTODO\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e 한글 환경 구성하기\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e 대체할 터미널 프로그램 알아보기 또는 기존 것 재 설정\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e 설치 스크립트 또는 요약본 만들기\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e pacman 사용법 따로 정리 - 상위 문서로\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e archlinux의 주 용도를 정하고 이에 맞게 구성하고 문서 정리\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e aur 및 yay 설치 및 사용법 정리: \u003ca href=\"https://linuxhint.com/aur_arch_linux/\"\u003ehttps://linuxhint.com/aur_arch_linux/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아치리눅스는 설치환경이 터미널에서 시작한다.\u003c/li\u003e\n\u003cli\u003e하나씩 설치하고 설정해 나가는 방식이다.\u003c/li\u003e\n\u003cli\u003e다른 배포판과는 다르게 재설치 없이 한 번 설치 후 계속 업데이트 해서 사용한다.\u003c/li\u003e\n\u003cli\u003e초반에만 기본을 잘 설치하고 조금씩 가꾸는 재미가 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설치-이미지-준비\"\u003e설치 이미지 준비\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e최신 설치 이미지 다운로드 및 USB 부트 만들기\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e wget http://mirror.anigil.com/archlinux/iso/2022.09.03/archlinux-2022.09.03-x86_64.iso\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e lsusb  \u003cspan class=\"c1\"\u003e# 자신의 USB 장치 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo dd \u003cspan class=\"nv\"\u003ebs\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e4M \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003earchlinux-2022.09.03-x86_64.iso \u003cspan class=\"nv\"\u003eof\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/dev/sda\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e설치할 시스템에 USB 부팅 BIOS 설정: 부팅 순서 조정 후 부팅\u003c/li\u003e\n\u003cli\u003e자신의 시스템이 BIOS인지 UEFI인지 확인은 다음과 같다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e ls /sys/firmware/efi     \u003cspan class=\"c1\"\u003e#디렉토리 존재 여부 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"install-arch\"\u003eInstall Arch\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ewifi 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e ip link  \u003cspan class=\"c1\"\u003e# wifi 장치 및 연결 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e iwctl --passphrase \u003cspan class=\"s1\"\u003e\u0026#39;mypassword\u0026#39;\u003c/span\u003e station wlan0 connect mywifi-ssid  \u003cspan class=\"c1\"\u003e# 연결\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e ping google.com   \u003cspan class=\"c1\"\u003e# 인터넷 연결 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e reflector -–verbose -c “Korea” --sort rate \u0026gt; /etc/pacman.d/mirrorlist\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e pacman -Syy       \u003cspan class=\"c1\"\u003e# update os base\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e파티션 설정 및 파일 시스템 생성\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e lsblk             \u003cspan class=\"c1\"\u003e# 내 드라이브 장치 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e fdisk -l /dev/sda \u003cspan class=\"c1\"\u003e# 설치 드라이브 파티션 정보 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e fdisk /dev/sda    \u003cspan class=\"c1\"\u003e# 파티션 설정: sda1(83:Linux)은 root(115GB), sda2(82:Swap) swap(4GB)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e mkfs -t ext4 /dev/sda1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e mount /dev/sda1 /mnt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e mkdir /mnt/boot\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e mkswap /dev/sda2\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e swapon /dev/sda2\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e기본 OS를 /mnt에 설치하기\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e pacstrap -i /mnt base linux linux-firmware sudo vim\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"setup\"\u003eSetup\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e genfstab -U -p /mnt \u0026gt;\u0026gt; /mnt/etc/fstab  \u003cspan class=\"c1\"\u003e# fstab 생성\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e cat /mnt/etc/fstab                     \u003cspan class=\"c1\"\u003e# 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e arch-chroot /mnt                       \u003cspan class=\"c1\"\u003e# root를 /mnt로 변경 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime  \u003cspan class=\"c1\"\u003e# timezone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e timedatectl set-ntp \u003cspan class=\"nb\"\u003etrue\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# ntp로 시간 동기화\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e hwclock --systohc         \u003cspan class=\"c1\"\u003e# 하드웨어 시간도 맞춤\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e date                      \u003cspan class=\"c1\"\u003e# 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e vim /etc/locale.gen       \u003cspan class=\"c1\"\u003e# en_US.UTF-8, ko_KR.UTF-8 주석 제거\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e locale-gen                \u003cspan class=\"c1\"\u003e# 로케일 설정 및 파일 생성\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nv\"\u003eLANG\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003een_US.UTF-8 \u0026gt;  /etc/locale.conf      \u003cspan class=\"c1\"\u003e# 로케일 설정\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;host_name\u0026#34;\u003c/span\u003e \u0026gt; /etc/hostname  \u003cspan class=\"c1\"\u003e# 호스트명 등록\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e cat \u0026lt;\u0026lt;EOF \u0026gt; /etc/hosts            \u003cspan class=\"c1\"\u003e# hosts파일 등록\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e127.0.0.1        localhost\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e::1              localhost\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e passwd                    \u003cspan class=\"c1\"\u003e# root 패스워드 설정\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e useradd -m -G wheel -s /bin/bash borisu  \u003cspan class=\"c1\"\u003e# 사용자 등록\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e passwd borisu                            \u003cspan class=\"c1\"\u003e# 사용자 패스워드 설정\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e vim /etc/sudoers                         \u003cspan class=\"c1\"\u003e# borisu ALL=(ALL) ALL 추가 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e pacman -S grub                       \u003cspan class=\"c1\"\u003e# grub 패키지 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e grub-install /dev/sda                \u003cspan class=\"c1\"\u003e# grub 디스크에 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e grub-mkconfig -o /boot/grub/grub.cfg \u003cspan class=\"c1\"\u003e# 설정파일 만들기\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e ls /boot                             \u003cspan class=\"c1\"\u003e# 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e pacman -S networkmanager          \u003cspan class=\"c1\"\u003e# 네트웍 매니저 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e NetworkManager   \u003cspan class=\"c1\"\u003e# 부팅시 자동 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# 나가기\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eumount -R /mnt    # 언마운트\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ereboot            # 재부팅\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"재부팅-후-네트웍-재설정\"\u003e재부팅 후 네트웍 재설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e최초로 부팅시 한 번만 등록해 주면 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo nmcli dev wifi connect \u0026lt;wifi-ssid\u0026gt; password \u0026lt;\u003cspan class=\"s1\"\u003e\u0026#39;wifi-passowrd\u0026#39;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"추가-패키지-설치\"\u003e추가 패키지 설치\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo pacman -Syu\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo pacman -S base-devel man-db man-pages wget neovim \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"kde-플라즈마-gui-설치\"\u003eKDE 플라즈마 GUI 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e설치 중에 물어보는 것은 모두 디폴트로 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo pacman -S xorg plasma plasma-wayland-session kde-applications firefox\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl \u003cspan class=\"nb\"\u003eenable\u003c/span\u003e sddm   \u003cspan class=\"c1\"\u003e# Enable Display Drivers\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo reboot                  \u003cspan class=\"c1\"\u003e# 재부팅\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"한글-환경-구성\"\u003e한글 환경 구성\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo pacman -S noto-fonts-cjk ttf-dejavu\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"참고-사항\"\u003e참고 사항\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e가급적 패키지는 \u003ccode\u003epacman\u003c/code\u003e으로 설치한다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eaur\u003c/code\u003e 패키지는 꼭 필요한 경우만 설치하고 관리자로 \u003ccode\u003eyay\u003c/code\u003e를 쓴다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eHow to Install Arch Linux 2021\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://techofide.com/blogs/how-to-install-arch-linux-2021-installation-guide-techofide/\"\u003ehttps://techofide.com/blogs/how-to-install-arch-linux-2021-installation-guide-techofide/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e아치리눅스 위키 \u003ca href=\"https://wiki.archlinux.org\"\u003ehttps://wiki.archlinux.org\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Archlinux Install - 아치리눅스 설치"},{"content":"Intro love는 lua에서 사용할 수 있는 2D 게임 프레임워크이다. 게임을 만들려는 것은 아니고 2D 그래픽 응용 프로그램을 모색하기 위함. 작은 모의 실험이나 시뮬레이션용으로 사용이 가능하다. 역시 작고 가볍고 빠르다. Install debian/ubuntu package install $ sudo apt install love # 패키지 설치 $ love --version # check version ubuntu ppa install: 최신버전으로 설치 $ sudo add-apt-repository ppa:bartbes/love-stable $ sudo apt update $ sudo apt install love $ love --version Hello World $ mkdir ~/love-test # make dir for love application $ cd ~/love-test # goto dir $ cat \u0026lt;\u0026lt;EOF \u0026gt; main.lua # edit main.lua source file function love.draw() love.graphics.print(\u0026#34;Hello World\u0026#34;, 400, 300) end EOF $ love . # love \u0026lt;path\u0026gt; : 실행 OR $ love ~/love-test # 프로젝트 폴더명 vim nvim 지원 플러그인 sumneko lua-language-server 를 설치하고 설정해 주면 된다.\nvim 또는 nvim에서 기본 설정으로 했을 경우 love2d 3rd 확장으로 지원됨.\n그러나 메모리 및 CPU 로드가 엄청나다. 정교한 설정이 필요하다.\n사용하기에 부족하지만 부가적으로 참고\nlove-api https://github.com/love2d-community/love-api vim-love-docs https://github.com/davisdude/vim-love-docs syntax highlighting, help 등을 지원한다고 나와있다. Atom 지원 플러그인 atom IDE 에서 love-2d api 플러그인이 지원된다. 그러나 atom이 2022년 12월에 플러그인 및 업데이트 지원이 종료된다. 편리하게 사용하려면 vscode를 사용한다. 아래 섹션 참고. Vscode 지원 플러그인 pixelbyte-love2d 를 검색하여 플러그인 설치. 폴더명/main.lua 소스를 만들고 코딩하면 자동완성 및 API 참조 등이 가능. \u0026lsquo;Alt+l` 단축키를 누르면 소스에서 실행된다. 또는 터미널에서 $ love .으로 실행한다. 한글 관련 love.graphics.print 한국어 출력 프로젝트 폴더 내에 아래 폰트파일(gulim.ttc)이 존재해야 한다. 프로젝트 외부의 폴더를 절대경로 또는 상대 경로로 적용할 수 없다. 반드시 프로젝트 폴더 내에서는 상대 경로를 사용할 수 있다. 이유는 플랫폼 독립적으로 프로젝트가 실행되어야 하기 때문이다. function love.load() korfont = love.graphics.newFont(\u0026#34;gulim.ttc\u0026#34;) end function love.draw() love.graphics.setFont(korfont) love.graphics.print(\u0026#39;안녕하세요!\u0026#39;, 400, 300) end Config Files Setup Howto $ vi love2d_project/conf.lua # 설정하기 ... function love.conf(t) t.window.width = 1024 t.window.height = 768 t.window.resizable = false t.modules.joystick = false end ... $ love love2d_project # 적용확인 conf.lua default function love.conf(t) t.identity = nil -- 세이브 디렉토리의 이름 (string) t.version = \u0026#34;0.9.1\u0026#34; -- 게임에서 사용한 LÖVE의 버전 (string) t.console = false -- 옆에 콘솔을 띄움 (boolean, 윈도우즈 전용) t.window.title = \u0026#34;Untitled\u0026#34; -- 게임의 창 제목 (string) t.window.icon = nil -- 윈도우 아이콘으로 사용할 이미지 파일의 경로 (string) t.window.width = 800 -- 윈도우 너비 (number) t.window.height = 600 -- 윈도우 높이 (number) t.window.borderless = false -- 윈도우의 테두리 없애기 (boolean) t.window.resizable = false -- 사용자가 윈도우 크기를 변경 가능 (boolean) t.window.minwidth = 1 -- 사용자가 윈도우 크기를 변경 가능할 때 최소 너비 (number) t.window.minheight = 1 -- 사용자가 윈도우 크기를 변경 가능할 때 최소 높이 (number) t.window.fullscreen = false -- 전체 화면 활성화 (boolean) t.window.fullscreentype = \u0026#34;normal\u0026#34; -- 전체 화면 모드의 종류 (string). http://www.love2d.org/wiki/FullscreenType_(한국어) 참조 t.window.vsync = true -- 수직 싱크 활성화 (boolean) t.window.fsaa = 0 -- FSAA 버퍼의 수 (number) t.window.display = 1 -- 듀얼 모니터 환경에서, 창을 띄울 모니터 번호 (number) t.window.highdpi = false -- 레티나 디스플레이에서의 고해상도 모드 (boolean). 0.9.1에서 추가됨. t.window.srgb = false -- sRGB 활성화 (boolean). 0.9.1에서 추가됨. t.modules.audio = true -- 오디오 모듈 활성화 (boolean) t.modules.event = true -- 이벤트 모듈 활성화 (boolean) t.modules.graphics = true -- 그래픽 모듈 활성화 (boolean) t.modules.image = true -- 이미지 모듈 활성화 (boolean) t.modules.joystick = true -- 조이스틱 모듈 활성화 (boolean) t.modules.keyboard = true -- 키보드 모듈 활성화 (boolean) t.modules.math = true -- 수학 모듈 활성화 (boolean) t.modules.mouse = true -- 마우스 모듈 활성화 (boolean) t.modules.physics = true -- 물리 모듈 활성화 (boolean) t.modules.sound = true -- 사운드 모듈 활성화 (boolean) t.modules.system = true -- 시스템 모듈 활성화 (boolean) t.modules.timer = true -- 타이머 모듈 활성화 (boolean) t.modules.window = true -- 윈도우 모듈 활성화 (boolean) t.modules.thread = true -- 스레드 모듈 활성화 (boolean) end 패키징 및 배포하기 최종 테스트를 한 후에 conf.lua로 필요한 설정을 한다. zip으로 압축하고 테스트한 후 배포. $ cd shooting-game $ ls bullet.lua classic.lua conf.lua enemy.lua images main.lua player.lua $ vi conf.lua function love.conf(t) t.window.width = 1024 t.window.height = 768 t.window.resizable = false t.window.joystick = false t.window.title = \u0026#34;Panda Shooter 판다 슈터\u0026#34; t.window.icon = \u0026#34;images/panda.png\u0026#34; end $ zip -9 -r ../test.love . # 압축하기 $ cd ../ $ love shooting-game.love # 실행 테스트 $ mv shooting-game.love shooting-game.zip # 확장자변경(옵션) $ love shooting-game.zip Links 아래 관련 문서들을 참고하여 시작한다.\n한글 입문서 https://digiconfactory.tistory.com/entry/%EB%A3%A8%EC%95%84Lua-%EA%B2%8C%EC%9E%84%EB%A7%8C%EB%93%A4%EA%B8%B0-Love-%EA%B2%8C%EC%9E%84%EC%97%94%EC%A7%84-%EC%9C%88%EB%8F%84%EC%9A%B010?category=952012 love home https://love2d.org/ love github https://github.com/love2d/love love wiki https://love2d.org/wiki/Main_Page love config https://love2d.org/wiki/Config_Files tutorials https://love2d.org/wiki/Category:Tutorials awesome-love2d https://github.com/love2d-community/awesome-love2d ","permalink":"https://neosolaris.github.io/posts/lua-love/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003elove는 lua에서 사용할 수 있는 2D 게임 프레임워크이다.\u003c/li\u003e\n\u003cli\u003e게임을 만들려는 것은 아니고 2D 그래픽 응용 프로그램을 모색하기 위함.\u003c/li\u003e\n\u003cli\u003e작은 모의 실험이나 시뮬레이션용으로 사용이 가능하다.\u003c/li\u003e\n\u003cli\u003e역시 작고 가볍고 빠르다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003edebian/ubuntu package install\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install love  \u003cspan class=\"c1\"\u003e# 패키지 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e love --version         \u003cspan class=\"c1\"\u003e# check version\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eubuntu ppa install: 최신버전으로 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo add-apt-repository ppa:bartbes/love-stable\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install love\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e love --version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"hello-world\"\u003eHello World\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mkdir ~/love-test     \u003cspan class=\"c1\"\u003e# make dir for love application\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ~/love-test        \u003cspan class=\"c1\"\u003e# goto dir\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat \u0026lt;\u0026lt;EOF \u0026gt; main.lua   \u003cspan class=\"c1\"\u003e# edit main.lua source file\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003efunction love.draw()\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e  love.graphics.print(\u0026#34;Hello World\u0026#34;, 400, 300)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e love .      \u003cspan class=\"c1\"\u003e# love \u0026lt;path\u0026gt; : 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eOR\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e love ~/love-test   \u003cspan class=\"c1\"\u003e# 프로젝트 폴더명\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"vim-nvim-지원-플러그인\"\u003evim nvim 지원 플러그인\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003esumneko lua-language-server 를 설치하고 설정해 주면 된다.\u003c/p\u003e","title":"Love - 루아 2D 게임 프로그래밍"},{"content":"지구가 태양 주위를 도는 것은 기쁜 일도 슬픈 일도 아니다. 아무 의미없이 법칙에 따라 도는 것 뿐이다. 공룡이 멸종한 것에 어떤 의미가 있을까. 진화의 목적이나 의미는 없다. 의미나 가치는 인간이 만든 상상의 산물이다. 우주에 인간이 생각하는 그런 의미는 없다. 그렇지만 인간은 의미 없는 우주에 의미를 부여하고 사는 존재다. 비록 그 의미라는 것이 상상의 산물에 불과할지라도 그렇게 사는 게 인간이다. 행복이 무엇인지 모르지만 행복하게 살려고 노력하는 게 인간이다. 인간은 자신이 만든 상상의 체계 속에서 자신이 만든 행복이라는 상상을 누리며 아무 의미 없는 우주를 행복하게 산다. 그래서 인간이 우주보다 경이롭다. - 김상욱 (물리학자) ","permalink":"https://neosolaris.github.io/posts/%EB%96%A8%EB%A6%BC%EA%B3%BC-%EC%9A%B8%EB%A6%BC/","summary":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e지구가 태양 주위를 도는 것은 기쁜 일도 슬픈 일도 아니다.\n아무 의미없이 법칙에 따라 도는 것 뿐이다.\n\n공룡이 멸종한 것에 어떤 의미가 있을까.\n진화의 목적이나 의미는 없다.\n의미나 가치는 인간이 만든 상상의 산물이다.\n우주에 인간이 생각하는 그런 의미는 없다.\n\n그렇지만\n인간은 의미 없는 우주에 의미를 부여하고 사는 존재다.\n비록 그 의미라는 것이 상상의 산물에 불과할지라도\n그렇게 사는 게 인간이다.\n\n행복이 무엇인지 모르지만\n행복하게 살려고 노력하는 게 인간이다.\n\n인간은 자신이 만든 상상의 체계 속에서\n자신이 만든 행복이라는 상상을 누리며\n아무 의미 없는 우주를 행복하게 산다.\n\n그래서 인간이 우주보다 경이롭다.\n\n                           \n- 김상욱 (물리학자)\n\u003c/code\u003e\u003c/pre\u003e","title":"떨림과 울림 - 김상욱"},{"content":"Install luarocks 를 이용하지 않고 필요한 모듈만 설치해서 사용하고자 할 때 $ sudo apt update \u0026amp;\u0026amp; sudo apt upgrade $ apt install git build-essensial #git, gcc, make 환경 필요 $ apt install lua5.1.0 liblua5.1.0 #lua module 컴파일시 liblua 필요 $ git clone https://github.com/lunarmodules/luafilesystem.git #luafilesystem 소스 복사 $ cd luafilesystem $ make # gcc, make, liblua5.1.x 필요 조건 $ cp src/lfs.so your_devel_directory/ $ cd your_devel_directory/ $ vim myprogram.lua require\u0026#39;lfs\u0026#39; ... LuaStatic 설치 방법1: luastatic.lua 자신을 컴파일해서 바이너리로 사용 $ git clone https://github.com/ers35/luastatic.git $ cd luastatic/ $ uastatic.lua luastatic.lua /usr/lib/arm-linux-gnueabihf/liblua5.1.a -I/usr/include/lua5.1/ $ ./luastatic # 바이너리 실행 및 버전 확인 방법2: luastatic.lua를 그대로 사용 $ git clone https://github.com/ers35/luastatic.git $ cd luastatic/ $ ./luastatic.lua # 스크립트 실행 및 버전 확인 모듈과 합쳐서 바이너리로 컴파일 하기 luastatic.lua 자신은 의존성이 없으므로 ~/bin 등에 옮긴 후 사용해도 된다. myprogram.lua가 같은 폴더에 있는 모듈을 사용한다면 자동으로 포함해서 컴파일된다. $ cp luastatic.lua ~/bin $ luastatic.lua myprogram.lua /usr/lib/arm-linux-gnueabihf/liblua5.1.a -I/usr/include/lua5.1/ 고려 사항 위의 예제처럼 컴파일 환경을 만들고 모듈을 만들어 require해서 사용. 여러 모듈과 main.lua가 있을 경우 이를 하나로 합쳐 바이너리로 만든다. 또는 파일을 설치하고 실행환경을 만들어 준다. 이에 대해서는 나중에 추가할 예정. ","permalink":"https://neosolaris.github.io/posts/lua-pi/","summary":"\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../luarocks\"\u003eluarocks\u003c/a\u003e 를 이용하지 않고 필요한 모듈만 설치해서 사용하고자 할 때\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt update \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt upgrade\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e apt install git build-essensial       \u003cspan class=\"c1\"\u003e#git, gcc, make 환경 필요\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e apt install lua5.1.0 liblua5.1.0      \u003cspan class=\"c1\"\u003e#lua module 컴파일시 liblua 필요\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/lunarmodules/luafilesystem.git \u003cspan class=\"c1\"\u003e#luafilesystem 소스 복사\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e luafilesystem\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e make      \u003cspan class=\"c1\"\u003e# gcc, make, liblua5.1.x 필요 조건\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cp src/lfs.so  your_devel_directory/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e your_devel_directory/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim myprogram.lua\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003erequire\u0026#39;lfs\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"luastatic-설치\"\u003eLuaStatic 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e방법1: \u003ccode\u003eluastatic.lua\u003c/code\u003e 자신을 컴파일해서 바이너리로 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/ers35/luastatic.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e luastatic/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e uastatic.lua luastatic.lua /usr/lib/arm-linux-gnueabihf/liblua5.1.a -I/usr/include/lua5.1/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ./luastatic  \u003cspan class=\"c1\"\u003e# 바이너리 실행 및 버전 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e방법2: \u003ccode\u003eluastatic.lua\u003c/code\u003e를 그대로 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/ers35/luastatic.git\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e luastatic/\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ./luastatic.lua  \u003cspan class=\"c1\"\u003e# 스크립트 실행 및 버전 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"모듈과-합쳐서-바이너리로-컴파일-하기\"\u003e모듈과 합쳐서 바이너리로 컴파일 하기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eluastatic.lua\u003c/code\u003e 자신은 의존성이 없으므로 ~/bin 등에 옮긴 후 사용해도 된다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emyprogram.lua\u003c/code\u003e가 같은 폴더에 있는 모듈을 사용한다면 자동으로 포함해서 컴파일된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cp luastatic.lua ~/bin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luastatic.lua myprogram.lua /usr/lib/arm-linux-gnueabihf/liblua5.1.a -I/usr/include/lua5.1/\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"고려-사항\"\u003e고려 사항\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e위의 예제처럼 컴파일 환경을 만들고 모듈을 만들어 \u003ccode\u003erequire\u003c/code\u003e해서 사용.\u003c/li\u003e\n\u003cli\u003e여러 모듈과 \u003ccode\u003emain.lua\u003c/code\u003e가 있을 경우 이를 하나로 합쳐 바이너리로 만든다.\u003c/li\u003e\n\u003cli\u003e또는 파일을 설치하고 실행환경을 만들어 준다. 이에 대해서는 나중에 추가할 예정.\u003c/li\u003e\n\u003c/ul\u003e","title":"Raspberry-Pi에서 lua 개발 환경 설치"},{"content":"Intro lua로 프로그래밍을 할 때 함수나 자동완성을 도와주는 플러그인이다. nvim의 lua 내장함수 및 api도 지원한다. 다른 lsp 서버의 설치와 설정보다 어려워서 많이 고생했다. 가장 중요한 것은 lua-language-server를 제대로 설치하는 것이다. 서버를 컴파일 하는 것보다는 바이너리를 다운 받아 쓰는 것을 권장한다. Requirements nvim-cmp :자동완성 플러그인 nvim-lsp :Language Server Protocol 플러그인 cmp-nvim-lsp : lsp 자동완성 지원 플러그인 sumneko lua-language-server : Lua lsp server 프로그램 (lua 5.1 ~ 5.4, luaJit 모두 지원) lua-language-server Install 아래에서 컴파일된 바이너리 다운로드 (리눅스 64bit기준) https://github.com/sumneko/lua-language-server/releases 적당한 위치에 설치 $ mkdir ~/data/lua-language-server \u0026amp;\u0026amp; cd lua-language-server $ tar xvfz ~/Download/lua-language-server-3.5.5.tar.gz . $ cat \u0026lt;\u0026lt;EOF \u0026gt; ~/bin/lua-language-server # 실행스크립트 작성 #!/usr/bin/bash exec \u0026#34;~/data/lua-language-server/bin/lua-language-server\u0026#34; \u0026#34;$@\u0026#34; EOF $ chmod u+x ~/bin/lua-language-server # ~/bin 이 PATH에 설정되어 있어야 $ lua-language-server --version # 에러 없이 버전이 출력되면 성공 lua-dev Install 먼저 nvim-cmp nvim-lsp, cmp-nvim-lsp가 설치 및 설정되었다고 가정한다.\n~/.config/nvim/lua/plugins.lua 플러그인 설정 추가\n-- For lua devel use \u0026#34;folke/lua-dev.nvim\u0026#34; 플러그인 설치 :w :luafile % :PackerInstall ~/.config/nvim/lua/settings.lua 설정 -- lua-dev -- IMPORTANT: make sure to setup lua-dev BEFORE lspconfig require(\u0026#34;lua-dev\u0026#34;).setup() -- then setup your lsp server as usual local lspconfig = require(\u0026#39;lspconfig\u0026#39;) -- example to setup sumneko and enable call snippets lspconfig.sumneko_lua.setup({ Lua = { completion = { callSnippet = \u0026#34;Replace\u0026#34; } } }) 적용하기 (또는 종료 후 다시 시작) :luafile % 주의 사항 auto-complete가 작동하지 않는 가장 큰 이유는 sumneko_lua를 제대로 설치하지 않아서이다. nvim-cmp의 설정에 위의 sumneko_lua 설정이 중복되지 않도록 한다. Links lua-dev Git Home https://github.com/folke/lua-dev.nvim sumneko lua-language-server Git Home https://github.com/sumneko/lua-language-server/ sumneko lua-language-server Download https://github.com/sumneko/lua-language-server/releases sumneko lua-language-server Getting Started https://github.com/sumneko/lua-language-server/wiki/Getting-Started ","permalink":"https://neosolaris.github.io/posts/lua-dev.nvim/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003elua로 프로그래밍을 할 때 함수나 자동완성을 도와주는 플러그인이다.\u003c/li\u003e\n\u003cli\u003envim의 lua 내장함수 및 api도 지원한다.\u003c/li\u003e\n\u003cli\u003e다른 lsp 서버의 설치와 설정보다 어려워서 많이 고생했다.\u003c/li\u003e\n\u003cli\u003e가장 중요한 것은 lua-language-server를 제대로 설치하는 것이다.\u003c/li\u003e\n\u003cli\u003e서버를 컴파일 하는 것보다는 바이너리를 다운 받아 쓰는 것을 권장한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"requirements\"\u003eRequirements\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003envim-cmp :자동완성 플러그인\u003c/li\u003e\n\u003cli\u003envim-lsp :Language Server Protocol 플러그인\u003c/li\u003e\n\u003cli\u003ecmp-nvim-lsp : lsp 자동완성 지원 플러그인\u003c/li\u003e\n\u003cli\u003esumneko lua-language-server : Lua lsp server 프로그램 (lua 5.1 ~ 5.4, luaJit 모두 지원)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"lua-language-server-install\"\u003elua-language-server Install\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래에서 컴파일된 바이너리 다운로드 (리눅스 64bit기준)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/sumneko/lua-language-server/releases\"\u003ehttps://github.com/sumneko/lua-language-server/releases\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e적당한 위치에 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mkdir ~/data/lua-language-server \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e lua-language-server\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e tar xvfz ~/Download/lua-language-server-3.5.5.tar.gz .\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat \u0026lt;\u0026lt;EOF \u0026gt; ~/bin/lua-language-server  \u003cspan class=\"c1\"\u003e# 실행스크립트 작성\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e!/usr/bin/bash\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eexec \u0026#34;~/data/lua-language-server/bin/lua-language-server\u0026#34; \u0026#34;$@\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e chmod u+x ~/bin/lua-language-server \u003cspan class=\"c1\"\u003e# ~/bin 이 PATH에 설정되어 있어야\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e lua-language-server --version       \u003cspan class=\"c1\"\u003e# 에러 없이 버전이 출력되면 성공\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lua-dev-install\"\u003elua-dev Install\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e먼저 nvim-cmp nvim-lsp, cmp-nvim-lsp가 설치 및 설정되었다고 가정한다.\u003c/p\u003e","title":"lua-dev.nvim - nvim에서 lua 개발 환경 구성 플러그인"},{"content":" Cut, copy, paste, rename, delete, create 사용법 추가 Git Integration Diagnostic Integration (LSP, COC) Live Filtering 개인화 설정 소개 빠르고 사용이 편리하며 nvim에서 NerdTree를 대체할 만한 플러그인이다. 기능이 아주 많다. 조금씩 공부해서 활용하자. 설치 Add plugin set to ~/.config/nvim/lua/plugins.lua use \u0026#39;kyazdani42/nvim-web-devicons\u0026#39; -- web-devicons (optional) use \u0026#39;kyazdani42/nvim-tree.lua\u0026#39; -- file explorer Install Package in command line mode :w :luafile % :PackerInstall Add nvim-tree setup to ~/.config/nvim/lua/settings.lua -- nvim-tree 설정 require\u0026#39;nvim-tree\u0026#39;.setup() -- 설정 로드 및 초기화 nmap(\u0026#39;\u0026lt;F2\u0026gt;\u0026#39;,\u0026#39;:NvimTreeToggle\u0026lt;CR\u0026gt;\u0026#39;) -- 토글 키맵 설정 Source settings.lua in command line mode :w :luafile % 기본 키매핑 자주 쓰는 것만 요약하고 자세한 것은 아래 주소 참조.\nhttps://github.com/kyazdani42/nvim-tree.lua/blob/master/doc/nvim-tree-lua.txt \u0026lt;CR\u0026gt; - Enter: 디렉토리 열기 또는 선택파일 편집\n\u0026lt;C-v\u0026gt; - ctrl + v: 선택 파일 새로운 수직 분할 창에서 편집\n\u0026lt;C-x\u0026gt; - ctrl + x: 선택 파일 새로운 수평 분할 창에서 편집\n\u0026lt;C-t\u0026gt; - ctrl + t: 선택 파일 새로운 탭에서 편집\n\u0026lt;C-k\u0026gt; - ctrl + k: 선택 파일 정보 토글\n\u0026lt;tab\u0026gt; - tab: 파일 미리보기 (Enter와는 다르게 커서가 nvim-tree에 머뭄)\nH - dotfile 보이기/숨기기\ng? - 단축기 도움말 보기 (q로도 도움말을 빠져나갈 수 있음)\ns - system_open: 해당파일을 관련 어플로 실행하기 (ex. a.html은 firefox 실행)\nLinks 깃허브 홈: https://github.com/kyazdani42/nvim-tree.lua ","permalink":"https://neosolaris.github.io/posts/nvim-tree/","summary":"\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Cut, copy, paste, rename, delete, create 사용법 추가\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Git Integration\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Diagnostic Integration (LSP, COC)\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Live Filtering\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e 개인화 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"소개\"\u003e소개\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e빠르고 사용이 편리하며 \u003ca href=\"../nvim\"\u003envim\u003c/a\u003e에서 NerdTree를 대체할 만한 플러그인이다.\u003c/li\u003e\n\u003cli\u003e기능이 아주 많다. 조금씩 공부해서 활용하자.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설치\"\u003e설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAdd plugin set to \u003ccode\u003e~/.config/nvim/lua/plugins.lua\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003euse\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;kyazdani42/nvim-web-devicons\u0026#39;\u003c/span\u003e \u003cspan class=\"c1\"\u003e-- web-devicons (optional)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003euse\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;kyazdani42/nvim-tree.lua\u0026#39;\u003c/span\u003e \u003cspan class=\"c1\"\u003e-- file explorer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eInstall Package in command line mode\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e:w \n:luafile %\n:PackerInstall\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eAdd nvim-tree setup to \u003ccode\u003e~/.config/nvim/lua/settings.lua\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- nvim-tree 설정\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erequire\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;nvim-tree\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetup\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"c1\"\u003e-- 설정 로드 및 초기화\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003enmap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026lt;F2\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;:NvimTreeToggle\u0026lt;CR\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e-- 토글 키맵 설정\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eSource \u003ccode\u003esettings.lua\u003c/code\u003e in command line mode\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e:w \n:luafile %\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"기본-키매핑\"\u003e기본 키매핑\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e자주 쓰는 것만 요약하고 자세한 것은 아래 주소 참조.\u003c/p\u003e","title":"nvim-tree - File Explorer"},{"content":"Basic Tokens in Lua io.write(\u0026#34;Hello world, from \u0026#34;,_VERSION,\u0026#34;!\\n\u0026#34;) Comments -- simple comment --[[ block comments --]] identifiers - 변수명, 함수명 등 규칙 mohd zera abc move_name a_123 myname50 _temp a23b9 retVal Keywords - 예약어 and break do else elseif end false for function if in local nil not or repeat return then true until while Lua - Variables Global variables, Local bariables, Table fields Variable Example -- Variable definition: local a, b --local g,l = 20,30 --global -- Initialization a = 10 b = 30 print(\u0026#34;value of a:\u0026#34;, a) print(\u0026#34;value of b:\u0026#34;, b) -- Swapping of variables b, a = a, b print(\u0026#34;value of a:\u0026#34;, a) print(\u0026#34;value of b:\u0026#34;, b) f = 70.0/3.0 print(\u0026#34;value of f\u0026#34;, f) Data Types nil - no data boolean - ture, false number - read numbers string - array of characters function - method that is written in C or Lua userdata - C data thread - independent threads of execution table - arrays, symbol tables, sets, records, graphs, trees, etc\nType Function\nprint(type(\u0026#34;What is my type\u0026#34;)) -- string t = 10 print(type(5.8*t)) -- number print(type(print)) -- function print(type(nill)) -- nil print(type(type(ABC))) -- string Lua - Operators Arithmetic Operators (^는 A^2를 의미) + - * / % ^ - Relational Operators (~=은 !=을 의미) == ~= \u0026gt; \u0026lt; \u0026gt;= \u0026lt;= Logical Operators and or not Misc Operators .. - a=\u0026ldquo;Hello\u0026rdquo;, b=\u0026ldquo;World\u0026quot;일때 a..b \u0026ndash;\u0026gt; \u0026ldquo;Hello World\u0026rdquo; # - string, table의 요소개수를 반환: #\u0026ldquo;Hello\u0026rdquo; \u0026ndash;\u0026gt; 5 Lua - Loop while loop - wile문\nfor loop - for문\nrepeat...until loop - repeat문\nnested loops - 중첩된 반복문\nLoop Control\nbreak - 빠져 나오기 : continue,goto가 5.1버전에는 없다.\nThe Infinite Loop\nwhile(true) do print(\u0026#34;This loop will run forever.\u0026#34;) end Lua - Decision Making if statement if...else statement nested if...else statement Lua - Function function example --[[ function returning the max between two numbers --]] function max(num1, num2) if (num1 \u0026gt; num2) then result = num1; else result = num2; end return result; end -- calling a function print(\u0026#34;The maximum of the two numbers is \u0026#34;,max(10,4)) --\u0026gt; 10 print(\u0026#34;The maximum of the two numbers is \u0026#34;,max(5,6)) --\u0026gt; 6 Assigning and Passing functions myprint = function(param) print(\u0026#34;This is my print function - ##\u0026#34;,param,\u0026#34;##\u0026#34;) end function add(num1,num2,functionPrint) --number,number,function result = num1 + num2 functionPrint(result) end myprint(10) add(2,5,myprint) Function with Variable Argument function average(...) -- Argument수를 정해 놓지 않고 정의 result = 0 local arg = {...} for i,v in ipairs(arg) do -- ipairs는 arg의 Index와 value를 넘김 result = result + v end return result/#arg -- result 나누기 #arg(arg수) end print(\u0026#34;The average is\u0026#34;,average(10,5,3,4,5,6)) -- 필요한 만큼 넣어 줌 Lua - Strings example string1 = \u0026#34;Lua\u0026#34; --single quotes print(\u0026#34;\\\u0026#34;String 1 is\\\u0026#34;\u0026#34;, string1) string2 = \u0026#39;Tutorial\u0026#39; --double quotes print(\u0026#34;String 2 is\u0026#34;, string2) string3 = [[\u0026#34;Lua Tutorial\u0026#34;]] --[[and]] : 여러 줄의 문자열을 사용할 때 print(\u0026#34;String 3 is\u0026#34;, string3) Escape Sequence \\a \\b \\f \\n \\r \\t \\v \\\\ \\\u0026#34; \\\u0026#39; \\[ \\] String Manipulation\nstring.upper(arg) - 대문자로 string.lower(arg) - 소문자로 string.gsub(mainstring,findstring,replacestring) - 문자열 대체 string.find(mainstring,findstring,optStartIndex,optEndIndex) - 문자열 찾기 string.reverse(arg) - 문자열 역순으로 string.format(...) - 문자열 포멧 설정 string.len(arg) - 문자열 길이 string.rep(string,n) - 문자열 N번 반복 출력 Case Manipulation - 대소문자 변환\nstring1 = \u0026#34;Lua\u0026#34;; print(string.upper(string1)) -- LUA print(string.lower(string1)) -- lua Replacing strings string = \u0026#34;Lua Tutorial\u0026#34; -- replacing strings newstring = string.gsub(string, \u0026#34;Tutorial\u0026#34;,\u0026#34;Language\u0026#34;) print(\u0026#34;The new string is \u0026#34;..newstring) -- The new string is Lua Language * Finding and Reversing ```lua string = \u0026#34;Lua Tutorial\u0026#34; -- find strings print(string.find(string,\u0026#34;Tutorial\u0026#34;)) -- 5 12 (start end) reversedString = string.reverse(string) print(\u0026#34;The new string is\u0026#34;, reversedString) -- The new string is lairotuT auL Formatting Strings string1 = \u0026#34;Lua\u0026#34; string2 = \u0026#34;Tutorial\u0026#34; number1 = 10 number2 = 20 -- Basic string formatting print(string.format(\u0026#34;Basic formatting %s %s\u0026#34;, string1, string2)) -- Date formatting date = 2; month = 1; year = 2022 print(string.format(\u0026#34;Date formatting %02d/%02d/%03d %s\u0026#34;, date, month, year)) -- Decimal formatting print(string.format(\u0026#34;%.4f\u0026#34;, 1/3)) Character and Byte Representations -- Byte conversion -- First character print(string.byte(\u0026#34;Lua\u0026#34;)) -- 76 -- Third character print(string.byte(\u0026#34;Lua\u0026#34;,3)) -- 97 -- First character from last print(string.byte(\u0026#34;Lua\u0026#34;,-1)) -- 97 -- Second character print(string.byte(\u0026#34;Lua\u0026#34;,2)) -- 117 -- Second character from last print(string.byte(\u0026#34;Lua\u0026#34;,-2)) -- 117 -- Internal Numeric ASCII Conversion print(string.char(97)) -- a Other Common Functions string1 = \u0026#34;Lua\u0026#34; string2 = \u0026#34;Tutorial\u0026#34; -- String Concatenations using .. print(\u0026#34;Concatenated string\u0026#34;, string1..string2) -- LuaTutorial -- Length of string print(\u0026#34;Length of string1 is \u0026#34;, string.len(string1)) -- 3 -- Repeating strings repeatedString = string.rep(string1,3) print(repeatedString) -- LuaLuaLua Lua - Arrays One-Dimensional Array array = {\u0026#34;Lua\u0026#34;, \u0026#34;Tutorial\u0026#34;} -- lua에서는 array[0]은 nil이다. array[1]부터 시작한다. for i = 0, 2 do print(array[i]) end Multi-Dimensional Array -- Initializing the array array = {} for i=1,3 do array[i] = {} for j=1,3 do array[i][j] = i*j end end -- Accessing the array for i=1,3 do for j=1,3 do print(array[i][j]) end end Lua - Iterators Generic For Iterator array = {\u0026#34;Lua\u0026#34;, \u0026#34;Tutorial\u0026#34;} -- ipairs를 사용하면 key는 1부터 index이고value는 배열요소를 사용할 수 있다. for key, value in ipairs(array) do print(key, value) end Stateless Iterators function square(iteratorMaxCount, currentNumber) if currentNumber \u0026lt; iteratorMaxCount then currentNumber = currentNumber + 1 return currentNumber, currentNumber*currentNumber end end for i,n in square,3,0 do print(i,n) end Stateful Iterators array = {\u0026#34;Lua\u0026#34;, \u0026#34;Tutorial\u0026#34;} function elementIterator(collection) local index = 0 local count = #collection -- The closure function is returned return function() index = index + 1 if index \u0026lt;= count then --return the current element of the iterator return collection[index] end end end for element in elementIterator(array) do print(element) end 그냥 generic 방식 쓰자. Lua - Tables table은 array, dictionary, 함수, 기타 자료형의 모든 묶음이다.\nexample\n-- Simple empty table mytable = {} print(\u0026#34;Type of mytable is \u0026#34;, type(mytable)) mytable[1] = \u0026#34;Lua\u0026#34; mytable[\u0026#34;wow\u0026#34;] = \u0026#34;Tutorial\u0026#34; print(\u0026#34;mytable Element at index 1 is \u0026#34;, mytable [1]) print(\u0026#34;mytable Element at index wow is \u0026#34;, mytable [\u0026#34;wow\u0026#34;]) -- alternatetable and mytable refers to same table alternatetable = mytable print(\u0026#34;alternatetable Element at index 1 is \u0026#34;, alternatetable[1]) print(\u0026#34;alternatetable Element at index wow is \u0026#34;, alternatetable[\u0026#34;wow\u0026#34;]) alternatetable[\u0026#34;wow\u0026#34;] = \u0026#34;I changed it\u0026#34; print(\u0026#34;mytable Element at index wow is \u0026#34;, mytable[\u0026#34;wow\u0026#34;]) -- only variable released and and not table alternatetable = nil print(\u0026#34;alternatetable is \u0026#34;, alternatetable) --\u0026gt; alternatetable is nil -- mytable is still accessible print(\u0026#34;mytable Element at index wow is \u0026#34;, mytable[\u0026#34;wow\u0026#34;]) mytable = nil print(\u0026#34;mytable is \u0026#34;, mytable) --\u0026gt; mytable is nil Table Concatenation (요소 결합) fruits = {\u0026#34;banana\u0026#34;, \u0026#34;orange\u0026#34;, \u0026#34;apple\u0026#34;} print(table.concat(fruits)) --\u0026gt; bananaorangeapple print(table.concat(fruits, \u0026#34;, \u0026#34;)) --\u0026gt; banana, orange, apple print(table.concat(fruits, \u0026#34;, \u0026#34;, 2,3)) --\u0026gt; orange, apple Table Insert and Remove fruits = {\u0026#34;banana\u0026#34;, \u0026#34;orange\u0026#34;, \u0026#34;apple\u0026#34;} table.insert(fruits, \u0026#34;mango\u0026#34;) -- 맨 뒤에 붙임 print(fruits[4]) --\u0026gt; mango table.insert(fruits, 2, \u0026#34;grapes\u0026#34;) -- index 2에 붙임 print(fruits[2]) --\u0026gt; grape print(table.maxn(fruits)) --\u0026gt; 5 print(fruits[5]) --\u0026gt; mango table.remove(fruits) -- 모든 요소 제거 print(fruits[5]) --\u0026gt; nil Sorting Tables fruits = {\u0026#34;banana\u0026#34;, \u0026#34;orange\u0026#34;, \u0026#34;apple\u0026#34;, \u0026#34;grapes\u0026#34;} for k,v in ipairs(fruits) do print(k,v) end table.sort(fruits) print(\u0026#34;sorted table\u0026#34;) for k,v in ipairs(fruits) do print(k,v) end Lua - Modules 외부 모듈을 사용하는 방법 -- Method 1 (매우 정직한, 그대로의) require \u0026#34;printFormatter\u0026#34; printFormatter.simpleFormat(\u0026#34;test\u0026#34;) -- Method 2 (난 이 방법이 마음에 든다) local formatter = require \u0026#34;printFormatter\u0026#34; formatter.simpleFormat(\u0026#34;test\u0026#34;) -- Method 3 (함수 하나만 뽑아 쓸 때) require \u0026#34;printFormatter\u0026#34; local formatterFunction = printFormatter.simpleFormat formatterFunction(\u0026#34;test\u0026#34;) 모듈 작성하기 -- mymath.lua local mymath = {} function mymath.add(a,b) print(a+b) end function mymath.sub(a,b) print(a-b) end function mymath.mul(a,b) print(a*b) end function mymath.div(a,b) print(a/b) end return mymath 모듈 사용하기 -- main.lua mymath = require(\u0026#34;mymath\u0026#34;) mymath.add(10,20) mymath.sub(30,20) mymath.mul(10,20) mymath.div(30,20) 주의 사항 mymath.lua 모듈파일과 main.lua는 같은 디렉토리에 있어야 한다. 모듈의 이름과 모듈파일의 이름은 같아야 한다. Lua - Metatables __index mytable = setmetatable({key1 = \u0026#34;value1\u0026#34;}, { __index = function(mytable, key) if key == \u0026#34;key2\u0026#34; then return \u0026#34;metatablevalue\u0026#34; else return mytable[key] end end }) -- simple version newtable = setmetatable({key1 = \u0026#34;value1\u0026#34;}, { __index = {key2 = \u0026#34;metatablevalue\u0026#34;}} ) print(mytable.key1, mytable.key2) --\u0026gt; value1 metatablevalue print(newtable.key1, newtable.key2) --\u0026gt; value1 metatablevalue __newindex mymetatable = {} mytable = setmetatable({key1 = \u0026#34;value1\u0026#34;}, { __newindex = mymetatable}) print(mytable.key1) mytable.newkey = \u0026#34;new value 2\u0026#34; print(mytable.newkey,mymetatable.newkey) mytable.key1 = \u0026#34;new value 1\u0026#34; print(mytable.key1,mymetatable.newkey1) __newindex another example mytable = setmetatable({key1 = \u0026#34;value1\u0026#34;}, { __newindex = function(mytable, key, value) rawset(mytable, key, \u0026#34;\\\u0026#34;\u0026#34;..value..\u0026#34;\\\u0026#34;\u0026#34;) end }) mytable.key1 = \u0026#34;new value\u0026#34; mytable.key2 = 4 print(mytable.key1,mytable.key2) Adding Operator Behavior to Tables - 테이블끼리 더하기 mytable = setmetatable({ 1, 2, 3 }, { __add = function(mytable, newtable) for i = 1, table.maxn(newtable) do table.insert(mytable, table.maxn(mytable)+1,newtable[i]) end return mytable end }) secondtable = {4,5,6} mytable = mytable + secondtable for k,v in ipairs(mytable) do print(k,v) end Table operators\n__add - + __sub - - __mul - * __div - / __mod - % __unm - - __concat - .. __eq - == __lt - \u0026lt; __le - \u0026lt;= __call\nmytable = setmetatable({10}, { __call = function(mytable, newtable) sum = 0 for i = 1, table.maxn(mytable) do sum = sum + mytable[i] end for i = 1, table.maxn(newtable) do sum = sum + newtable[i] end return sum end }) newtable = {10,20,30} print(mytable(newtable)) --\u0026gt; 70 __tostring mytable = setmetatable({ 10, 20, 30 }, { __tostring = function(mytable) sum = 0 for k, v in pairs(mytable) do sum = sum + v end return \u0026#34;The sum of values in the table is \u0026#34; .. sum end }) print(mytable) --\u0026gt; The sum of values in the table is 60 Lua - Coroutines 코루틴 정의: 이해 못해서 넘어감 Coroutines are collaborative in nature, which allows two or more methods to execute in a controlled manner. With coroutines, at any given time, only one coroutine runs and this running coroutine only suspends its execution when it explicitly requests to be suspended.\nExample co = coroutine.create( function (value1, value2) local tempvar3 = 10 print(\u0026#34;coroutine section 1\u0026#34;, value1, value2, tempvar3) local tempvar1 = coroutine.yield(value1+1, value2+1) tempvar3 = tempvar3 + value1 print(\u0026#34;coroutine section 2\u0026#34;, tempvar1, tempvar2, tempvar3) local tempvar1, tempvar2 = coroutine.yield(value1+value2, value1-value2) tempvar3 = tempvar3 + value1 print(\u0026#34;coroutine section 3\u0026#34;, tempvar1, tempvar2, tempvar3) return value2, \u0026#34;end\u0026#34; end ) print(\u0026#34;main\u0026#34;, coroutine.resume(co, 3, 2) ) print(\u0026#34;main\u0026#34;, coroutine.resume(co, 12, 14) ) print(\u0026#34;main\u0026#34;, coroutine.resume(co, 5, 6) ) print(\u0026#34;main\u0026#34;, coroutine.resume(co, 10, 20) ) Example2 function getNumber() local function getNumberHelper() co = coroutine.create(function () coroutine.yield(1) coroutine.yield(2) coroutine.yield(3) coroutine.yield(4) coroutine.yield(5) end) return co end if(numberHelper) then status, number = coroutine.resume(numberHelper); if coroutine.status(numberHelper) == \u0026#34;dead\u0026#34; then numberHelper = getNumberHelper() status, number = coroutine.resume(numberHelper); end return number else numberHelper = getNumberHelper() status, number = coroutine.resume(numberHelper); return number end end for index = 1, 10 do print(index, getNumber()) end Lua - File I/O Implicit File Descriptors -- opens a file in read file = io.open(\u0026#39;test.lua\u0026#39;, \u0026#39;r\u0026#39;) -- sets the default input file as test.lua io.input(file) -- prints the first line of the file print(io.read()) -- closes the open File io.close(fiel) -- Opens a file in append Modules file = io.open(\u0026#39;test.lua\u0026#39;,\u0026#39;a\u0026#39;) -- sets the default output file as test.lua io.output(file) -- appends a word test to the last line of the file io.write(\u0026#39;-- End of the test.lua file\u0026#39;) -- closes the open file io.close(file) Explicit File Descriptors -- Opens a file in read mode file = io.open(\u0026#39;test.lua\u0026#39;, \u0026#39;r\u0026#39;) -- prints the first line of the file print(file:read()) -- closes the opended file file:colse() -- Opens a file in append mode file = io.open(\u0026#39;test.lua\u0026#39;,\u0026#39;a\u0026#39;) -- appends a word test to the last line of the file file:write(\u0026#39;--test\u0026#39;) -- closes the open file file:colse() File Seek and read -- Opens a file in read file = io.open(\u0026#39;test.lua\u0026#39;, \u0026#39;r\u0026#39;) file:seek(\u0026#39;end\u0026#39;,-25) print(file:read(\u0026#39;*a\u0026#39;)) -- closes the opened file file:close() Lua - Error Handling Syntax Errors for a = 1,10 print(a) end lua: test2.lua:2: \u0026#39;do\u0026#39; expected near \u0026#39;print\u0026#39; Run Time Errors function add(a,b) return a_b end add(10) lua: test2.lua:2: attempt to perform arithmetic on local \u0026#39;b\u0026#39; (a nil value) stack traceback: test2.lua:2: in function \u0026#39;add\u0026#39; test2.lua:5: in main chunk [C]: ? Assert and Error Functions local function add(a,b) assert(type(a) == \u0026#39;number\u0026#39;, \u0026#39;a is not a number\u0026#39;) assert(type(b) == \u0026#39;number\u0026#39;, \u0026#39;b is not a number\u0026#39;) return a+b end add(10) lua: test2.lua:3: b is not a number stack traceback: [C]: in function \u0026#39;assert\u0026#39; test2.lua:3: in function \u0026#39;add\u0026#39; test2.lua:6: in main chunk [C]: ? pcall function myfunction () n = n/nil end if pcall(myfunction) then print(\u0026#34;Success\u0026#34;) else print(\u0026#39;failure\u0026#39;) end failure xpcall function myfunction () n = n/nil end function myerrorhandler(err) print(\u0026#39;Error:\u0026#39;,err) end stutus = xpcall(myfunction, myerrorhandler) print(status) ERROR:\ttest2.lua:2: attempt to perform arithmetic on global \u0026#39;n\u0026#39; (a nil value) false Lua - Debugging Debugging Example function myfunction() print(debug.traceback(\u0026#34;Stack trace\u0026#34;)) print(debug.getinfo(1)) print(\u0026#34;Stack trace end\u0026#34;) return 10 end myfunction() print(debug.getinfo(1)) Debugging Result Stack trace stack traceback: test2.lua:2: in function \u0026#39;myfunction\u0026#39; test2.lua:8: in main chunk [C]: ? table: 0054C6C8 Stack trace end` Debugging Example2 function newCounter () local n = 0 local k = 0 return function () k = n n = n + 1 return n end end counter = newCounter () print(counter()) print(counter()) local i = 1 repeat name, val = debug.getupvalue(counter, i) if name then print (\u0026#34;index\u0026#34;, i, name, \u0026#34;=\u0026#34;, val) if(name == \u0026#34;n\u0026#34;) then debug.setupvalue (counter,2,10) end i = i + 1 end -- if until not name print(counter()) Debugging Result2 1 2 index\t1\tk\t=\t1 index\t2\tn\t=\t2 11 Lua - Garbage Collection Example mytable = {\u0026#34;apple\u0026#34;, \u0026#34;orange\u0026#34;, \u0026#34;banana\u0026#34;} print(collectgarbage(\u0026#34;count\u0026#34;)) mytable = nil print(collectgarbage(\u0026#34;count\u0026#34;)) print(collectgarbage(\u0026#34;collect\u0026#34;)) print(collectgarbage(\u0026#34;count\u0026#34;)) Result 23.1455078125 149 23.2880859375 295 0 22.37109375 380 나머지 아래는 따로 독립적인 항목으로 분류하여 정리할 예정.\nLua - Debugging\nLua - Garbage Collection\nLua - Object Oriented\nLua - Web programming\nLua - Database Accessing\nLua - Game Programming\nLinks This quide https://www.tutorialspoint.com/lua/lua_quick_guide.htm Pattern Matching https://sodocumentation.net/lua/topic/5829/pattern-matching ","permalink":"https://neosolaris.github.io/posts/lua-quick-quide/","summary":"\u003ch2 id=\"basic\"\u003eBasic\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTokens in Lua\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eio.write\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Hello world, from \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003e_VERSION\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;!\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eComments\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e-- simple comment\n--[[ \nblock comments\n--]]\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eidentifiers - 변수명, 함수명 등 규칙\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emohd\u003c/span\u003e \u003cspan class=\"n\"\u003ezera\u003c/span\u003e \u003cspan class=\"n\"\u003eabc\u003c/span\u003e \u003cspan class=\"n\"\u003emove_name\u003c/span\u003e \u003cspan class=\"n\"\u003ea_123\u003c/span\u003e \u003cspan class=\"n\"\u003emyname50\u003c/span\u003e \u003cspan class=\"n\"\u003e_temp\u003c/span\u003e \u003cspan class=\"n\"\u003ea23b9\u003c/span\u003e \u003cspan class=\"n\"\u003eretVal\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eKeywords - 예약어\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"kr\"\u003ebreak\u003c/span\u003e \u003cspan class=\"kr\"\u003edo\u003c/span\u003e \u003cspan class=\"kr\"\u003eelse\u003c/span\u003e \u003cspan class=\"kr\"\u003eelseif\u003c/span\u003e \u003cspan class=\"kr\"\u003eend\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e \u003cspan class=\"kr\"\u003efor\u003c/span\u003e \u003cspan class=\"kr\"\u003efunction\u003c/span\u003e \u003cspan class=\"nf\"\u003eif\u003c/span\u003e \u003cspan class=\"kr\"\u003ein\u003c/span\u003e \u003cspan class=\"kd\"\u003elocal\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kc\"\u003enil\u003c/span\u003e \u003cspan class=\"ow\"\u003enot\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"kr\"\u003erepeat\u003c/span\u003e \u003cspan class=\"kr\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kr\"\u003ethen\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e \u003cspan class=\"kr\"\u003euntil\u003c/span\u003e \u003cspan class=\"kr\"\u003ewhile\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lua---variables\"\u003eLua - Variables\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eGlobal variables, Local bariables, Table fields\u003c/li\u003e\n\u003cli\u003eVariable Example\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- Variable definition:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003elocal\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e  \u003cspan class=\"c1\"\u003e--local\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003el\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e \u003cspan class=\"c1\"\u003e--global\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- Initialization\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;value of a:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;value of b:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- Swapping of variables\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;value of a:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;value of b:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e70.0\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;value of f\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eData Types\n\u003ccode\u003enil\u003c/code\u003e - no data\n\u003ccode\u003eboolean\u003c/code\u003e - ture, false\n\u003ccode\u003enumber\u003c/code\u003e - read numbers\n\u003ccode\u003estring\u003c/code\u003e - array of characters\n\u003ccode\u003efunction\u003c/code\u003e - method that is written in C or Lua\n\u003ccode\u003euserdata\u003c/code\u003e - C data\n\u003ccode\u003ethread\u003c/code\u003e - independent threads of execution\n\u003ccode\u003etable\u003c/code\u003e - arrays, symbol tables, sets, records, graphs, trees, etc\u003c/p\u003e","title":"Lua Quick Guide - tutorialspoint"},{"content":"설치 vim 또는 neovim을 먼저 설치한다. 둘 다 설치되어 있는 경우 하나만 동작하도록 아래 명령어로 설치한다. $ curl -sLf https://spacevim.org/install.sh | bash -s -- --install vim $ curl -sLf https://spacevim.org/install.sh | bash -s -- --install neovim $ vim ~/.config/nvim 아래 레퍼런스를 참고한다. 사용하는 코딩 언어를 layer로 등록해주면 거의 모든 것이 해결된다. 아울러 각 언어에 대한 설정법도 참고 (단축키도 정리) vimproc Error neovim으로 spacevim을 설치하고 실행했는데 위 에러가 나는 경우 $ cd ~/.SpaceVim/bundle/vimproc.vim $ make $ nvim Links Quick Start Guide https://spacevim.org/quick-start-guide/ Python Set https://spacevim.org/use-vim-as-a-python-ide/ Rust Set https://spacevim.org/use-vim-as-a-rust-ide/ ","permalink":"https://neosolaris.github.io/posts/spacevim/","summary":"\u003ch2 id=\"설치\"\u003e설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003evim 또는 neovim을 먼저 설치한다.\u003c/li\u003e\n\u003cli\u003e둘 다 설치되어 있는 경우 하나만 동작하도록 아래 명령어로 설치한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e   $ curl -sLf https://spacevim.org/install.sh | bash -s -- --install vim\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e   $ curl -sLf https://spacevim.org/install.sh | bash -s -- --install neovim\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e   $ vim ~/.config/nvim\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e아래 레퍼런스를 참고한다.\u003c/li\u003e\n\u003cli\u003e사용하는 코딩 언어를 layer로 등록해주면 거의 모든 것이 해결된다.\u003c/li\u003e\n\u003cli\u003e아울러 각 언어에 대한 설정법도 참고 (단축키도 정리)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"vimproc-error\"\u003evimproc Error\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eneovim으로 spacevim을 설치하고 실행했는데 위 에러가 나는 경우\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e   $ cd ~/.SpaceVim/bundle/vimproc.vim\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e   $ make\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e   $ nvim\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eQuick Start Guide\n\u003ca href=\"https://spacevim.org/quick-start-guide/\"\u003ehttps://spacevim.org/quick-start-guide/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePython Set\n\u003ca href=\"https://spacevim.org/use-vim-as-a-python-ide/\"\u003ehttps://spacevim.org/use-vim-as-a-python-ide/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eRust Set\n\u003ca href=\"https://spacevim.org/use-vim-as-a-rust-ide/\"\u003ehttps://spacevim.org/use-vim-as-a-rust-ide/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"SpaceVim - A community-driven vim distribution"},{"content":"Intro neovim(nvim)에 다양한 설정과 플러그인을 통하여 개발환경 IDE를 구성 Lua 를 기반으로 구성하였기 때문에 빠르고 쾌적하다. 자동완성, 파일탐색, 검색기능, snipet등 필요한 거의 모든 것이 기본 제공된다. 추가로 사용자 정의를 할 수 있다. Install $ mv ~/.config/nvim ~/.config/nvim.bak # 기존 nvim 설정을 백업 $ mv ~/.local/share/nvim/site ~/.local/share/nvim/site.bak # 기존 플러그인 백업 $ git clone https://github.com/AstroNvim/AstroNvim ~/.config/nvim # 복사 $ nvim +PackerSync # 설치 Setup Install LSP (Language Server Protocol) - 프로그래밍 언어 지원 설치\n나중에 추가 설치시 Space + l + I 맵키 사용 :LspInstall clangd - c, c++ :LspInstall rust-analyzer - rust :LspInstall luau-lsp - lua :LspInstall marksman - markdown :LspInstall jedi-language-server - python3 Install Language Parser\n:TSInstall python Manage Plugins - 패키지 관리\n:PackerClean - 패키지 제거 및 청소 :PackerSync - 패키지 청소 및 업데이트 :PackerUpdate - 패키지 업데이트 Astronvim Reload\n:AstroReload - 다시 올림 (문제가 생길소지, 재실행하는 것이 더 좋음) Features neo-tree.nvim - 파일 탐색기 nvim-cmp - 자동 완성 gitsigns.nvim - Git integration feline.nvim - 상태라인 toggleterm - 터미널 telescope.nvim - Fuzzy 검색 nvim-treesitter - Syntax highlighting null-ls.nvim - Formatting and linting nvim-lsconfig - Language Server Protocol 사용자 설정 추가 설정이나 사용자 설정을 하려면 다음과 같다. 처음이라면 우선 사용해 보고 나중에 설정하는 것이 좋겠다. $ cp -r ~/.config/nvim/lua/user_example/ ~/.config/nvim/lua/user/ # copy exmaple $ nvim ~/.config/nvim/lua/user/init.lua # 설정하기 사용방법 아래 Space는 스페이스 키이고, +는 조합하라는 뜻, 대소문자 구분.\n명령모드에서 Space만 누르면 주메뉴가 보인다.\nSpace + lS - Opening LSP symbols: LSP 심볼창 열기 Space + c - Close buffer: 현재 버퍼창 닫기 Space + / - Commenting: 한줄(커서위치후) 또는 여러줄(v로 영역선택후) 주석달기 Space + lr - Open rename prompt Space + la - Code actions Space + ff - Telescope search: 퍼지 파일검색 Space + fw - Telescope grep: 퍼지 파일내용검색 Space + gt - Telescope git status Space + fo - Telescope old files 문서 내 이동\nShift + k - Hover document: 도움말이나 문서창 내에서 이동 g + l - Show line diagnostics g + d - Go to definition: 함수나 변수 정의 위치로 가기 탭과 창간의 이동\nShift + h - 왼쪽 버퍼창으로 이동 Shift + l - 오른쪽 버퍼창으로 이동 Ctrl + h - 왼쪽 창으로 이동 Ctrl + l - 오른쪽 창으로 이동 Ctrl + k - 위쪽 창으로 이동 Ctrl + j - 아래쪽 창으로 이동 버퍼창 크기조절\nCtrl + left key - 왼쪽으로 사이즈 변경 Ctrl + right key - 오른쪽으로 사이즈 변경 Ctrl + up key - 위쪽으로 사이즈 변경 Ctrl + down key - 아래쪽으로 사이즈 변경 Links \u0026lt; https://astronvim.github.io/\u0026gt;\n","permalink":"https://neosolaris.github.io/posts/astronvim/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eneovim(nvim)에 다양한 설정과 플러그인을 통하여 개발환경 IDE를 구성\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../lua\"\u003eLua\u003c/a\u003e 를 기반으로 구성하였기 때문에 빠르고 쾌적하다.\u003c/li\u003e\n\u003cli\u003e자동완성, 파일탐색, 검색기능, snipet등 필요한 거의 모든 것이 기본 제공된다.\u003c/li\u003e\n\u003cli\u003e추가로 사용자 정의를 할 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mv ~/.config/nvim ~/.config/nvim.bak  \u003cspan class=\"c1\"\u003e# 기존 nvim 설정을 백업\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mv ~/.local/share/nvim/site ~/.local/share/nvim/site.bak \u003cspan class=\"c1\"\u003e# 기존 플러그인 백업\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/AstroNvim/AstroNvim ~/.config/nvim \u003cspan class=\"c1\"\u003e# 복사\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e nvim +PackerSync \u003cspan class=\"c1\"\u003e# 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"setup\"\u003eSetup\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eInstall LSP (Language Server Protocol) - 프로그래밍 언어 지원 설치\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e나중에 추가 설치시 \u003ccode\u003eSpace\u003c/code\u003e + \u003ccode\u003el\u003c/code\u003e + \u003ccode\u003eI\u003c/code\u003e 맵키 사용\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:LspInstall clangd\u003c/code\u003e                  - c, c++\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:LspInstall rust-analyzer\u003c/code\u003e           - rust\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:LspInstall luau-lsp\u003c/code\u003e                - lua\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:LspInstall marksman\u003c/code\u003e                - markdown\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e:LspInstall jedi-language-server\u003c/code\u003e    - python3\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eInstall Language Parser\u003c/p\u003e","title":"AstroNvim"},{"content":" Ubuntu\nubuntu install - 우분투 설치 ubuntu firefox - 우분투에서 파이어폭스 설치 Archlinux\narchlinux install Alpine\nalpine lua language server ","permalink":"https://neosolaris.github.io/posts/linux/","summary":"\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eUbuntu\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../ubuntu-install\"\u003eubuntu install\u003c/a\u003e - 우분투 설치\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../ubuntu-firefox\"\u003eubuntu firefox\u003c/a\u003e - 우분투에서 파이어폭스 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eArchlinux\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../archlinux-install\"\u003earchlinux install\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAlpine\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../alpine-lua-language-server\"\u003ealpine lua language server\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Linux"},{"content":" 김기림 살아간다고 하는 것은 별거 아니었다. 끝없이 단념해 가는것. 그것 뿐인 것 같다.\n산 너머 저 산 너머는 행복이 있다 한다. 언제고 그 산을 넘어 넓은 들로 나가 본다는 것이 산골 젊은이들의 꿈이었다. 그러나 이윽고는 산 너머 생각도 잊어버리고 아르네는 결혼을 한다. 머지않아서 아르네는 사오 남매의 복 가진 아버지가 될 것이다\n이렇게 세상의 수많은 아르네들은 그만 나폴레옹을 단념하고 셰익스피어를 단념하고 토머스 아퀴나스를 단념하고 렘브란트를 단념하고 자못 풍정낭식한 생애를 이웃 농부들의 질소한 관장속에 마치는 것이다.\n그러나 모든 것을 아주 단념해 버리는 것은 용기를 요하는 것이다. 가계를 버리고 처자를 버리고 지위를 버리고 드디어 온갖 욕망의 불덩이인 육체를 몹쓸 고행으로써 벌하는 수행승의 생애는 바로 그런것이다. 그것은 무에 접하는 것이다.\n그런데 이와는 아주 반대로 끝없이 새로운 것을 욕망하고 추구하고 돌진하고 깨뜨리고 불타다가 생명의 마지막 불꽃마저 꺼진 뒤에야 끊어지는 생활 태도가 있다. 돈 후안이 그랬고 베토벤이 그랬고 장 크리스토프의 주인공이 그랬고 랭보가 그랬고 로렌츠가 그랬고 고갱이 그랬다.\n이 두길은 한 가지로 영웅의 길이다. 다만 그 하나는 영구한 적멸로 가고 하나는 그 부단한 건설로 향한다. 이 두 나무의 과실로 한편의 인도의 오늘이 있고 다른 한편의 서양 문명이 있다.\n이러한 두 가지 극단 사이에 있는 가장 참한 조행 갑에 속하는 태도가 있다. 그저 얼마간 욕망하다가 얼마간 단념하고\u0026hellip;\u0026hellip; 아주 단념도 못 하고 아주 쫓아가지도 않고 그러는 사이에 분에 맞는 정도의 지위와 명예와 부동산과 자녀를 거느리고 영양도 갑을 보전하고 때로는 표창도 되고 해서 한 편 아담한 통속 소설 주인공 표본이 된다. 말하자면 속인처세의 극치다.\n이십 대에는 성히 욕망하고 추구하다가도 삼십 대만 잡아 서면 사람들은 더욱 성하게 단념해야 하나 보다. 학문을 단념하고 연애를 단념하고 새로운 것을 단념하고 발명을 단명하고 드디어는 착한 사람이고자 하던 일까지 단념해야 한다. 삼십이 넘어 가지고도 시인이라는 것은 망나니라는 말과 같다고 한 누구의 말은 어쩌면 그렇개도 찬란한 명구냐.\n약간은 단념하고 약간은 욕망하는 것이 제일 안전한 일 인지도 모른다. 아름다운 단념은 또한 처량한 단념이기도 하다. 그러나 예술에 있어서도 학문에 있어서도 나는 나 자신과 친한 벗에게는 이 고상한 섭생법을 권하고 싶지는 않다.\n\u0026lsquo;일체냐, 그렇지 않으면 무냐.\u0026rsquo;\n예술도 학문도 늘 이 두 단애의 절정을 올라가는 것 같다. 평온을 바라는 시민은 마땅히 기어 내려가서 저 골짜기 밑바닥의 탄탄대로를 감이 좋을 것이다.\n","permalink":"https://neosolaris.github.io/posts/%EB%8B%A8%EB%85%90/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e김기림\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e살아간다고 하는 것은 별거 아니었다. 끝없이 단념해 가는것. 그것 뿐인 것 같다.\u003c/p\u003e\n\u003cp\u003e산 너머 저 산 너머는 행복이 있다 한다. 언제고 그 산을 넘어 넓은 들로 나가 본다는 것이 산골 젊은이들의 꿈이었다. 그러나 이윽고는 산 너머 생각도 잊어버리고 아르네는 결혼을 한다. 머지않아서 아르네는 사오 남매의 복 가진 아버지가 될 것이다\u003c/p\u003e\n\u003cp\u003e이렇게 세상의 수많은 아르네들은 그만 나폴레옹을 단념하고 셰익스피어를 단념하고 토머스 아퀴나스를 단념하고 렘브란트를 단념하고 자못 풍정낭식한 생애를 이웃 농부들의 질소한 관장속에 마치는 것이다.\u003c/p\u003e","title":"단념"},{"content":"zsh 설치 $ sudo apt install zsh 기본쉘 변경 $ chsh -s /usr/bin/zsh Oh-My-Zsh 설치 $ sh -c \u0026#34;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\u0026#34; 테마변경 $ vim ~/.zshrc $ source ~/.zsh .zshrc 설정 변경 ZSH_THEME=\u0026#34;agnoster\u0026#34; 해결되지 않은 문제 기본쉘을 zsh로 했을 때 한글 입력이 되지 않는다. bash의 서브쉘로 실행했을 때는 한글 입력이 잘 된다. Reference Ubuntu/Linux Oh my zsh 세팅 https://polarcompass.tistory.com/142 https://github.com/powerline/fonts ","permalink":"https://neosolaris.github.io/posts/zsh-install/","summary":"\u003ch2 id=\"zsh-설치\"\u003ezsh 설치\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install zsh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"기본쉘-변경\"\u003e기본쉘 변경\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e chsh -s /usr/bin/zsh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"oh-my-zsh-설치\"\u003eOh-My-Zsh 설치\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sh -c \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003ecurl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh\u003cspan class=\"k\"\u003e)\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"테마변경\"\u003e테마변경\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim ~/.zshrc\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003esource\u003c/span\u003e ~/.zsh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e.zshrc\u003c/code\u003e 설정 변경\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eZSH_THEME=\u0026#34;agnoster\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"해결되지-않은-문제\"\u003e해결되지 않은 문제\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e기본쉘을 zsh로 했을 때 한글 입력이 되지 않는다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../bash\"\u003ebash\u003c/a\u003e의 서브쉘로 실행했을 때는 한글 입력이 잘 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eUbuntu/Linux Oh my zsh 세팅\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://polarcompass.tistory.com/142\"\u003ehttps://polarcompass.tistory.com/142\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/powerline/fonts\"\u003ehttps://github.com/powerline/fonts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"zsh install and setup"},{"content":"Intro remote: authorized_keys 인증 허가 local: ssh-keygen으로 키를 생성 local: ssh-copy-id로 remote에 복사 local: ssh로 패스워드 없이 로그인확인 remote: Password로 로그인 불허가 설정 remote: authorized_keys 인증허가 (되어있다면 다음으로) $ sudo vi /etc/ssh/sshd_config ... PermitRootLogin no #root로 로그인불가 RSAAuthentication yes PubkeyAuthentication yes AuthorizedKeysFile %h/.ssh/authorized_keys ... $ sudo systemctl restart ssh local: ssh-keygen 보안키 생성하기 (-t: type, -C: Comment) passphrase는 그냥 엔터 2번 생성위치는 ~/.ssh/id_ed25519{.pub} $ ssh-keygen -t ed25519 -C \u0026#34;batutah@gmail.com\u0026#34; local: ssh-copy-id로 public key를 remote에 복사 local: ~/.ssh/id_ed25519.pub -\u0026gt; remote: ~/.ssh/authorized_keys $ ssh-copy-id -p81 borisu@192.168.1.101 #remote 패스워드 입력 local: ssh로 패스워드 없이 로그인 확인 $ ssh -p81 borisu@192.168.1.101 remote: sshd에서 패스워드인증 허가를 막기 키인증으로 로그인이 가능하므로 패스워드 인증을 막아줌 $ sudo vi /etc/ssh/sshd_config ... PasswordAuthentication no ... $ sudo systemctl restart ssh Reference https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-20-04 https://www.answertopia.com/ubuntu/configuring-ssh-key-based-authentication-on-ubuntu/ ","permalink":"https://neosolaris.github.io/posts/ssh-keygen/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eremote: authorized_keys 인증 허가\u003c/li\u003e\n\u003cli\u003elocal: ssh-keygen으로 키를 생성\u003c/li\u003e\n\u003cli\u003elocal: ssh-copy-id로 remote에 복사\u003c/li\u003e\n\u003cli\u003elocal: ssh로 패스워드 없이 로그인확인\u003c/li\u003e\n\u003cli\u003eremote: Password로 로그인 불허가 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"remote-authorized_keys-인증허가-되어있다면-다음으로\"\u003eremote: authorized_keys 인증허가 (되어있다면 다음으로)\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo vi /etc/ssh/sshd_config\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ePermitRootLogin no #root로 로그인불가\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003eRSAAuthentication yes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ePubkeyAuthentication yes\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eAuthorizedKeysFile      %h/.ssh/authorized_keys \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl restart ssh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"local-ssh-keygen-보안키-생성하기--t-type--c-comment\"\u003elocal: ssh-keygen 보안키 생성하기 (-t: type, -C: Comment)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003epassphrase는 그냥 엔터 2번\u003c/li\u003e\n\u003cli\u003e생성위치는 ~/.ssh/id_ed25519{.pub}\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ssh-keygen -t ed25519 -C \u003cspan class=\"s2\"\u003e\u0026#34;batutah@gmail.com\u0026#34;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"local-ssh-copy-id로-public-key를-remote에-복사\"\u003elocal: ssh-copy-id로 public key를 remote에 복사\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003elocal: ~/.ssh/id_ed25519.pub -\u0026gt; remote: ~/.ssh/authorized_keys\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ssh-copy-id -p81 borisu@192.168.1.101 \u003cspan class=\"c1\"\u003e#remote 패스워드 입력\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"local-ssh로-패스워드-없이-로그인-확인\"\u003elocal: ssh로 패스워드 없이 로그인 확인\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ssh -p81 borisu@192.168.1.101\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"remote-sshd에서-패스워드인증-허가를-막기\"\u003eremote: sshd에서 패스워드인증 허가를 막기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e키인증으로 로그인이 가능하므로 패스워드 인증을 막아줌\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo vi /etc/ssh/sshd_config\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ePasswordAuthentication no\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo systemctl restart ssh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-20-04\"\u003ehttps://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys-on-ubuntu-20-04\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.answertopia.com/ubuntu/configuring-ssh-key-based-authentication-on-ubuntu/\"\u003ehttps://www.answertopia.com/ubuntu/configuring-ssh-key-based-authentication-on-ubuntu/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"ssh-keygen 으로 인증하기"},{"content":" ssh keygen - ssh-keygen으로 인증하여 로그인하기 ","permalink":"https://neosolaris.github.io/posts/ssh/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../ssh-keygen\"\u003essh keygen\u003c/a\u003e - ssh-keygen으로 인증하여 로그인하기\u003c/li\u003e\n\u003c/ul\u003e","title":"SSH - Secure Shell"},{"content":"Intro dotfiles를 백업 및 관리해 주는 툴은 많이 있다. 참조 나중에 재설치하거나 다른 컴퓨터에서 이 설정들을 복원하려면 매우 번거롭다. yadm은 그 중 git 외에 의존성이 매우 적으며, 사용하기 쉽고 편리하다. 데비안이나 우분투 사용자라면 패키지로 쉽게 설치할 수 있다. 좋은 문서로 잘 안내하고 있다. Install and Setup github에 github.com/user_name/dotfiles 저장소를 만든다. 공개/비공개 자신의 목적에 맞게 선택\ninstall\n$ sudo apt install yadm 기본 사용법 - git과 거의 같다. 오직 dotfiles만 관리한다고 보면 된다. $ yadm init # ~/.local/share/yadm/repo.git/ 로컬 저장소 생성 $ yadm remote add origin git@github.com:user_name/dotfiles # 원격지 추가 $ yadm add \u0026lt;파일명\u0026gt; # 관리할 파일을 추가 $ yadm list # 관리 리스트 확인 $ yadm commit -m \u0026#34;update files\u0026#34; # 커밋 $ yadm push # push error가 나는 경우 아래 실행 $ cd ~/.local/share/yadm/repo.git \u0026amp;\u0026amp; git push --set-upstream origin main 참고사항 yadm의 기준은 사용자 홈디렉토리이다. 만약 권한이 없는 /etc 등의 주요 설정파일도 백업하려면 어떻게 해야 하는가. 당분간은 홈에 디렉토리를 만들고 복사해 둔 다음 yadm에 추가해서 사용. ","permalink":"https://neosolaris.github.io/posts/yadm/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003edotfiles를 백업 및 관리해 주는 툴은 많이 있다. \u003ca href=\"../https://dotfiles.github.io/utilities/\"\u003e참조\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e나중에 재설치하거나 다른 컴퓨터에서 이 설정들을 복원하려면 매우 번거롭다.\u003c/li\u003e\n\u003cli\u003eyadm은 그 중 git 외에 의존성이 매우 적으며, 사용하기 쉽고 편리하다.\u003c/li\u003e\n\u003cli\u003e데비안이나 우분투 사용자라면 패키지로 쉽게 설치할 수 있다.\u003c/li\u003e\n\u003cli\u003e좋은 문서로 잘 안내하고 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install-and-setup\"\u003eInstall and Setup\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"../github\"\u003egithub\u003c/a\u003e에 \u003ccode\u003egithub.com/user_name/dotfiles\u003c/code\u003e 저장소를 만든다. 공개/비공개 자신의 목적에 맞게 선택\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003einstall\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install yadm\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e기본 사용법 - git과 거의 같다. 오직 dotfiles만 관리한다고 보면 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e yadm init         \u003cspan class=\"c1\"\u003e# ~/.local/share/yadm/repo.git/ 로컬 저장소 생성\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e yadm remote add origin git@github.com:user_name/dotfiles \u003cspan class=\"c1\"\u003e# 원격지 추가\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e yadm add \u0026lt;파일명\u0026gt; \u003cspan class=\"c1\"\u003e# 관리할 파일을 추가\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e yadm list         \u003cspan class=\"c1\"\u003e# 관리 리스트 확인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e yadm commit -m \u003cspan class=\"s2\"\u003e\u0026#34;update files\u0026#34;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 커밋\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e yadm push                         \u003cspan class=\"c1\"\u003e# push error가 나는 경우 아래 실행\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ~/.local/share/yadm/repo.git \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e git push --set-upstream origin main\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"참고사항\"\u003e참고사항\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eyadm의 기준은 사용자 홈디렉토리이다.\u003c/li\u003e\n\u003cli\u003e만약 권한이 없는 \u003ccode\u003e/etc\u003c/code\u003e 등의 주요 설정파일도 백업하려면 어떻게 해야 하는가.\u003c/li\u003e\n\u003cli\u003e당분간은 홈에 디렉토리를 만들고 복사해 둔 다음 yadm에 추가해서 사용.\u003c/li\u003e\n\u003c/ul\u003e","title":"yadm - Yet Another Dotfiles Manager"},{"content":" 20-08-08: alpine 설치 추가 개요 https://github.com/neovim/neovim/releases 에서 최신 안정 버전을 다운로드 그간 많은 변화가 있었기 때문에 여러 설치 및 에러를 방지하려면 neovim v0.7 이상을 설치한다. 아래 내용은 우분투 22.04를 기준으로 한다. 우분투 PPA 패키지로 현재 neovim은 v0.7.2이다. NVIM의 특징 luaJIT이 기본 내장되어 lua를 설정에서 모듈까지 쉽게 확장 가능. terminal 기능이 있어 바로 사용가능하다. :terminal 커서 스타일, 포커스 이벤트, 괄호에 붙여 넣기 기본 지원 자동완성, 맞춤법 검사, 탭, 구문 색상지정, 정규표현식으로 검색 및 바꾸기 등 Asynchronous Plugin Architecture를 지원, 재컴파일 없이 모듈 장착 가능 Parallel installation/update of plugins - 병렬식으로 플러그인 설치가 매우 빠름 Post-update hook - 플러그인 설치 후에 해야 할 일을 지정해 놓으면 알아서 수행 플러그인의 버전 관리, 종속성 관리가 편리하다. 패키지 설치 Ubuntu 설치 appimage를 직접 다운로드해서 설치 $ wget https://github.com/neovim/neovim/releases/download/v0.6.1/nvim.appimage $ mv nvim.appimage ~/bin/nvim $ chmod u+x ~/bin/nvim Ubuntu ppa 최신패키지 설치 $ sudo apt install software-properties-common -y $ sudo add-apt-repository ppa:neovim-ppa/stable -y $ sudo apt update $ sudo apt install neovim -y $ nvim --version Alpine 설치 $ doas apk update $ doas apk add neovim # nvim Install $ apk search nvim-* # Plugin check $ apk nvim-lualine nvim-treesitter # Plugin: lualine install $ nvim --version ## 소스 빌드 - Debian, Ubuntu * Requirements ```console $ sudo apt install build-essencial cmake ninja luarocks5.1 $ sudo luarocks5.1 install lpeg $ sudo luarocks5.1 install mpack Build $ git clone https://github.com/neovim/neovim $ cd neovim $ git checkout stable $ make CMAKE_BUILD_TYPE=RelWithDebInfo # or CMAKE_BUILD_TYPE=Release $ sudo make install $ strip /usr/local/bin/nvim $ /usr/local/bin/nvim --version 소스 빌드 - Alpine Requirements # apk add build-base cmake automake autoconf libtool pkgconf coreutils curl unzip gettext-tiny-dev Build # git clone https://github.com/neovim/neovim # cd neovim # git checkout stable # make CMAKE_BUILD_TYPE=RelWithDebInfo # or CMAKE_BUILD_TYPE=Release # sudo make install # strip /usr/local/bin/nvim # /usr/local/bin/nvim --version 소스 빌드 - Raspbian (2023-09-17) 라즈베리파이의 neovim 버전이 매우 낮다. 현재로서는 컴파일해서 사용하는 것이 최신버전을 쓰는 제일 좋은 방법으로 보인다. # Install latest CMake https://stackoverflow.com/a/56690743/13411047 sudo apt update sudo apt install -y libssl-dev wget -O /tmp/cmake.tar.gz \u0026#34;https://cmake.org/files/v3.19/cmake-3.19.1.tar.gz\u0026#34; tar -xvzf cmake.tar.gz rm cmake.tar.gz cd cmake-3.19.1/ cmake . make sudo make install # Requirements Install sudo apt-get install git sudo apt-get install libtool libtool-bin autoconf automake cmake g++ pkg-config unzip # source download git clone https://github.com/neovim/neovim.git cd neovim # compile \u0026amp; Install make CMAKE_BUILD_TYPE=RelWithDebInfo sudo make install 주요 설정파일 vimscript 설정 기준 ~/.config/nvim/init.vim ~/.local/share/nvim/site/autoload/plug.vim lua 설정 기준 ~/.config/nvim/init.lua ~/.config/nvim/lua/ Links neovim home: https://neovim.io/ building noevim: https://github.com/neovim/neovim/wiki/Building-Neovim ","permalink":"https://neosolaris.github.io/posts/nvim-install/","summary":"\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 20-08-08: alpine 설치 추가\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"개요\"\u003e개요\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/neovim/neovim/releases\"\u003ehttps://github.com/neovim/neovim/releases\u003c/a\u003e 에서 최신 안정 버전을 다운로드\u003c/li\u003e\n\u003cli\u003e그간 많은 변화가 있었기 때문에 여러 설치 및 에러를 방지하려면 neovim v0.7 이상을 설치한다.\u003c/li\u003e\n\u003cli\u003e아래 내용은 우분투 22.04를 기준으로 한다.\u003c/li\u003e\n\u003cli\u003e우분투 PPA 패키지로 현재 neovim은 v0.7.2이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"nvim의-특징\"\u003eNVIM의 특징\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../luaJIT\"\u003eluaJIT\u003c/a\u003e이 기본 내장되어 lua를 설정에서 모듈까지 쉽게 확장 가능.\u003c/li\u003e\n\u003cli\u003eterminal 기능이 있어 바로 사용가능하다. \u003ccode\u003e:terminal\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e커서 스타일, 포커스 이벤트, 괄호에 붙여 넣기 기본 지원\u003c/li\u003e\n\u003cli\u003e자동완성, 맞춤법 검사, 탭, 구문 색상지정, 정규표현식으로 검색 및 바꾸기 등\u003c/li\u003e\n\u003cli\u003eAsynchronous Plugin Architecture를 지원, 재컴파일 없이 모듈 장착 가능\u003c/li\u003e\n\u003cli\u003eParallel installation/update of plugins - 병렬식으로 플러그인 설치가 매우 빠름\u003c/li\u003e\n\u003cli\u003ePost-update hook - 플러그인 설치 후에 해야 할 일을 지정해 놓으면 알아서 수행\u003c/li\u003e\n\u003cli\u003e플러그인의 버전 관리, 종속성 관리가 편리하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"패키지-설치\"\u003e패키지 설치\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eUbuntu 설치\u003c/li\u003e\n\u003c/ol\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eappimage\u003c/code\u003e를 직접 다운로드해서 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e wget https://github.com/neovim/neovim/releases/download/v0.6.1/nvim.appimage\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mv nvim.appimage ~/bin/nvim\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e chmod u+x ~/bin/nvim\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eUbuntu ppa 최신패키지 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install software-properties-common -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo add-apt-repository ppa:neovim-ppa/stable -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install neovim -y\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e nvim --version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eAlpine 설치\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e doas apk update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e doas apk add neovim    \u003cspan class=\"c1\"\u003e# nvim Install\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e apk search nvim-*      \u003cspan class=\"c1\"\u003e# Plugin check\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e apk nvim-lualine nvim-treesitter    \u003cspan class=\"c1\"\u003e# Plugin: lualine install\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e nvim --version\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e\u003cspan class=\"c1\"\u003e# 소스 빌드 - Debian, Ubuntu\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003e* Requirements\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e```console\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install build-essencial cmake ninja luarocks5.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo luarocks5.1 install lpeg\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo luarocks5.1 install mpack\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eBuild\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/neovim/neovim\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e neovim \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git checkout stable\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e make \u003cspan class=\"nv\"\u003eCMAKE_BUILD_TYPE\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eRelWithDebInfo  \u003cspan class=\"c1\"\u003e# or CMAKE_BUILD_TYPE=Release\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo make install\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e strip /usr/local/bin/nvim\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e /usr/local/bin/nvim --version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"소스-빌드---alpine\"\u003e소스 빌드 - Alpine\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRequirements\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e apk add build-base cmake automake autoconf libtool pkgconf coreutils curl unzip gettext-tiny-dev\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eBuild\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e git clone https://github.com/neovim/neovim\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e neovim \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e git checkout stable\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e make \u003cspan class=\"nv\"\u003eCMAKE_BUILD_TYPE\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eRelWithDebInfo  \u003cspan class=\"c1\"\u003e# or CMAKE_BUILD_TYPE=Release\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e sudo make install\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e strip /usr/local/bin/nvim\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e /usr/local/bin/nvim --version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"소스-빌드---raspbian-2023-09-17\"\u003e소스 빌드 - Raspbian (2023-09-17)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e라즈베리파이의 neovim 버전이 매우 낮다.\u003c/li\u003e\n\u003cli\u003e현재로서는 컴파일해서 사용하는 것이 최신버전을 쓰는 제일 좋은 방법으로 보인다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# Install latest CMake https://stackoverflow.com/a/56690743/13411047\nsudo apt update\nsudo apt install -y libssl-dev\nwget -O /tmp/cmake.tar.gz \u0026#34;https://cmake.org/files/v3.19/cmake-3.19.1.tar.gz\u0026#34;\ntar -xvzf cmake.tar.gz\nrm cmake.tar.gz\ncd cmake-3.19.1/\ncmake .\nmake\nsudo make install\n\n# Requirements Install\nsudo apt-get install git\nsudo apt-get install libtool libtool-bin autoconf automake cmake g++ pkg-config unzip\n\n# source download\ngit clone https://github.com/neovim/neovim.git\ncd neovim\n\n# compile \u0026amp; Install\nmake CMAKE_BUILD_TYPE=RelWithDebInfo\nsudo make install\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"주요-설정파일\"\u003e주요 설정파일\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003evimscript 설정 기준\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e~/.config/nvim/init.vim\n~/.local/share/nvim/site/autoload/plug.vim\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003elua 설정 기준\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e~/.config/nvim/init.lua\n~/.config/nvim/lua/\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eneovim home: \u003ca href=\"https://neovim.io/\"\u003ehttps://neovim.io/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ebuilding noevim: \u003ca href=\"https://github.com/neovim/neovim/wiki/Building-Neovim\"\u003ehttps://github.com/neovim/neovim/wiki/Building-Neovim\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Neovim 설치 및 설정"},{"content":"우주가 실제로 존재하기 위해서는 관측이 필요해요. 즉 우주는, 그 자신의 존재를 증명하려면 의식을 가진 생명체를 필요로 한다는 말이에요. 슈뢰딩거의 고양이가 죽었는지 살았는지는 고양이 그 자신만이 알 수 있는 거예요. 유진 위그너\n","permalink":"https://neosolaris.github.io/posts/%EC%9A%B0%EC%A3%BC%EA%B0%80-%EC%8B%A4%EC%A0%9C%EB%A1%9C-%EC%A1%B4%EC%9E%AC%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C%EB%8A%94/","summary":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e우주가 실제로 존재하기 위해서는 관측이 필요해요. \n즉 우주는, 그 자신의 존재를 증명하려면 \n의식을 가진 생명체를 필요로 한다는 말이에요.\n\n슈뢰딩거의 고양이가 죽었는지 살았는지는\n고양이 그 자신만이 알 수 있는 거예요.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003e유진 위그너\u003c/code\u003e\u003c/p\u003e","title":"우주가 실제로 존재하기 위해서는"},{"content":"만가지의 킥 동작을 한 번씩 연습한 사람이 두려운 게 아니라 한가지의 동작을 만 번 연습한 사람이 두렵다 - 이소룡 (Bruce Lee)\n","permalink":"https://neosolaris.github.io/posts/%EB%A7%8C%EA%B0%80%EC%A7%80-%EB%8F%99%EC%9E%91/","summary":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e만가지의 킥 동작을 한 번씩 연습한 사람이 두려운 게 아니라\n한가지의 동작을 만 번 연습한 사람이 두렵다\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003e- 이소룡 (Bruce Lee)\u003c/code\u003e\u003c/p\u003e","title":"만가지 동작"},{"content":"Install $ sudo apt install rclone $ rclone --help $ rclone config n/s/q\u0026gt; n name\u0026gt; gdrive # rclone 사용시 원격지 드라이브 이름으로 사용 Storage\u0026gt; 13 # google client_id\u0026gt; Enter client_secret\u0026gt; Enter scope\u0026gt; 1 root_folder_id\u0026gt; Enter service_account_file\u0026gt; Enter Edit advanced config?\u0026gt; n Use auto config? n # 출력된 url을 복사하여 브라우저에 입력하고 승락하기 # 승락한 후 받은 key를 복사 Enter verification code\u0026gt; key입력 Configure this as a team drive? n y) Yes this is OK (default) y q # 끝내기 Usage 기본 사용법: 세세한 옵션이 많지만 흐름을 잃지 말자. 필요하면 관련 문서 참조. $ rclone ls gdrive: # list google drive files only $ rclone lsl gdrive: # list -l google drive files only $ rclone lsd gdrive: # list google drive folders $ rclone copy file1 gdrive: # copy file1 to gdrive: $ rclone copy dir1 gdrive: # copy dir1/* to gdirve: # 디렉토리내 파일복사 $ rclone copy dir1 gdrive:dir1 # copy dir1 to gdirve:dir1 # dir1 디렉토리복사 $ rclone delete gdrive:file1 # remove gdrive:file1 $ rclone delete gdrive:dir1 # remove gdrive:dir1 $ mkdir ~/gdrive $ rclone sync gdrive: ~/gdrive/ # sync google drive to local ~/gdrive $ rclone sync ~/gdrive gdrive: # sync ~/gdrive to google drive $ rclone sync -i ~/gdrive gdirve: # interactive mode $ rclone sync -P ~/gdrive gdirve: # view real-time transfer statistics $ rclone bisync ~/gdrive gdirve: # bidirectional sync between two paths # new, Newer, and Deleted files Mount $ rclone mount gdrive: ~/google-drive \u0026amp; $ ls ~/google-drive Crypt - 암호화 gdrive: 내의 특정 폴더를 암호화해서 gdrive내에서는 내용을 볼 수 없고 오직 local에서만 가능하다. 개인정보를 보다 안전하게 보관할 수 있는 방법이다.\n아래의 설정 요지는 gdrive:에서 암호화할 폴더를 지정해주고 서로 다른 비밀번호 두 개를 입력하는 것이다. 이유는 salt라는 개념으로 암호화를 보다 더 견고하게 하는 데 있다.\nSetup\n$ rclone mkdir gdrive:data $ rclone config make a new one? n/s/q\u0026gt; n name\u0026gt; secret # 접근시 사용할 원격드라이브 이름 Storage\u0026gt; crypt # 암호화 설정 remote\u0026gt; gdrive:data # 기존 등록한 드라이브 내의 폴더이름 filename_encryption\u0026gt; Enter # default:1:standard directory_name_encryption\u0026gt; Enter # default:1:true 디렉토리 이름도 암호화 Password or pass phrase for encryption. y/g/n\u0026gt; y # y: 이후 첫번째 패스워드 두 번 입력 Password or pass phrase for salt. Optional but recommended. Should be different to the previous password. y/g/n\u0026gt; y # y: 이후 두번째 패스워드 두 번 입력 Edit advanced config? (y/n) y/n\u0026gt; n # n: 고급설정 안함 Remote config -------------------- [secret] remote = gdrive:data password = *** ENCRYPTED *** password2 = *** ENCRYPTED *** -------------------- y) Yes this is OK (default) e) Edit this remote d) Delete this remote y/e/d\u0026gt; y # y: Current remotes: Name Type ==== ==== gdrive drive secret crypt e) Edit existing remote n) New remote d) Delete remote r) Rename remote c) Copy remote s) Set configuration password q) Quit config e/n/d/r/c/s/q\u0026gt; q # q: secret, crypt 리스트에서 확인, 나감 Usage $ rclone copy my_test_file secret: # file remote copy test $ rclone ls secret: # 확인 기본 테스트가 완료되면 구글드라이브에서 암호화되어 올라갔는지 확인.\n사용례 - 로컬의 백업데이타 ~/data를 secret:에 동기화(i.e. gdirve:data/)\n$ rclone sync ~/data secret: 참고 사항 rclone mount로 직접 마운트하여 사용하기 보다는 rclone sync로 사용하는 것이 바람직할 것 같다. 실수로 데이터를 지우는 일이 발생하거나 파일 변경시 특정파일만 복사하기가 매우 번거롭기 때문이다. 하물며 rclone copy나 rclone delete 등은 어떠한가. 물론 rclone sync는 동기화하는 것이므로 로컬에서 지우면 원격지도 지워진다. 이것을 잘 이해하고 사용하여야 한다. rclone copy의 경우에는 동일한 파일의 경우 지워지지 않는다. 로컬 폴더에서 충분히 작업을 한 후 한 번씩 동기화(local -\u0026gt; retmote)해 준다. 이것이 귀찮으면 cron에 등록해 주어 일정 주기로 동기화한다. 로컬쪽에서 자신의 데이터에 문제가 생기면 rclone sync로 복구(remote -\u0026gt; local)해 준다. 로컬 컴퓨터가 바뀌는 경우에는 rclone을 설치하고 위 설정 과정을 똑같이 반복해 주면 된다. 물론 두 개의 패스워드는 기억하고 있어야 한다. Links 기본 사용 문서: https://rclone.org/docs/ 암호화: https://rclone.org/crypt/ ","permalink":"https://neosolaris.github.io/posts/rclone/","summary":"\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install rclone\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone --help\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone config\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003en/s/q\u0026gt; n\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ename\u0026gt; gdrive # rclone 사용시 원격지 드라이브 이름으로 사용\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eStorage\u0026gt; 13  # google\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eclient_id\u0026gt; Enter\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eclient_secret\u0026gt; Enter\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003escope\u0026gt; 1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eroot_folder_id\u0026gt; Enter\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eservice_account_file\u0026gt; Enter\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEdit advanced config?\u0026gt; n \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eUse auto config? n  # 출력된 url을 복사하여 브라우저에 입력하고 승락하기\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e                    # 승락한 후 받은 key를 복사\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEnter verification code\u0026gt; key입력\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eConfigure this as a team drive? n\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ey) Yes this is OK (default) y\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eq # 끝내기\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e기본 사용법: 세세한 옵션이 많지만 흐름을 잃지 말자. 필요하면 관련 문서 참조.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone ls gdrive:                 \u003cspan class=\"c1\"\u003e# list google drive files only\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone lsl gdrive:                \u003cspan class=\"c1\"\u003e# list -l google drive files only\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone lsd gdrive:                \u003cspan class=\"c1\"\u003e# list google drive folders\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone copy file1 gdrive:         \u003cspan class=\"c1\"\u003e# copy file1 to gdrive:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone copy dir1 gdrive:          \u003cspan class=\"c1\"\u003e# copy dir1/* to gdirve:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e                                    # 디렉토리내 파일복사\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone copy dir1 gdrive:dir1      \u003cspan class=\"c1\"\u003e# copy dir1 to gdirve:dir1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e                                    # dir1 디렉토리복사\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone delete gdrive:file1        \u003cspan class=\"c1\"\u003e# remove gdrive:file1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone delete gdrive:dir1         \u003cspan class=\"c1\"\u003e# remove gdrive:dir1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mkdir ~/gdrive \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone sync gdrive: ~/gdrive/     \u003cspan class=\"c1\"\u003e# sync google drive to local ~/gdrive\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone sync ~/gdrive gdrive:      \u003cspan class=\"c1\"\u003e# sync ~/gdrive to google drive\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone sync -i ~/gdrive gdirve:   \u003cspan class=\"c1\"\u003e# interactive mode\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone sync -P ~/gdrive gdirve:   \u003cspan class=\"c1\"\u003e# view real-time transfer statistics\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone bisync ~/gdrive gdirve:    \u003cspan class=\"c1\"\u003e# bidirectional sync between two paths\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e                                    # new, Newer, and Deleted files\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eMount\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rclone mount gdrive: ~/google-drive \u003cspan class=\"p\"\u003e\u0026amp;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ls ~/google-drive\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"crypt---암호화\"\u003eCrypt - 암호화\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003egdrive:\u003c/code\u003e 내의 특정 폴더를 암호화해서 gdrive내에서는 내용을 볼 수 없고 오직 local에서만 가능하다. 개인정보를 보다 안전하게 보관할 수 있는 방법이다.\u003c/p\u003e","title":"Rclone 원격 백업 툴"},{"content":"INSTALL install - 설치 후 ~/.bashrc에 ~/.cargo 자동 환경 설정 $ curl https://sh.rustup.rs -sSf | sh -- --help rustup 업데이트/ 제거 $ rustup update $ rustup self uninstall rustc 컴파일러 버전확인 $ rustc --version Hello World $ vim hello_world.rs fn main() { #println!는 함수가 아닌 매크로 println!(\u0026#34;Hello, world!\u0026#34;); } $ rustc hello_world.rs Cargo를 통한 개발 $ cargo new hello_cargo --bin $ cd hello_cargo $ vim src/main.rs fn main() { println!(\u0026#34;Hello, world!\u0026#34;); } ./target/debug/hello_cargo 로 바이너리 생성 $ cargo run # compile and run $ cargo run # run only: source is not changed $ cargo check # compile only no exe file create (rapid compile and test) $ cargo clean # cleanup all object and binary files $ cargo run -- --help #실행파일 인자를 받아서 실행할 때 $ cargo build $ cargo build --release (optimize for release) 모듈을 사용할 경우 $ cargo add ansi_term #자동으로 Cargo.toml에 모듈이름과 버전이 등록된다. $ vim src/main.rs #use ansi_term::xxxx 을 넣고 코딩 $ cargo run Build From Git $ git clone someurl.com/someproject $ cd someproject $ cargo build reference 제일 궁금한 것은 전체적인 개발 및 배포 과정인데 아래가 아주 좋음 https://free-strings.blogspot.com/2017/03/cargo-cargo.html https://rust-cli.github.io/book/tutorial/packaging.html 아주 훌륭한 쿡북이다. 먼저 기본 온라인북을 보고서 이것을 공부하자. https://rust-lang-nursery.github.io/rust-cookbook/ ","permalink":"https://neosolaris.github.io/posts/rust-install/","summary":"\u003ch2 id=\"install\"\u003eINSTALL\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003einstall - 설치 후 \u003ccode\u003e~/.bashrc\u003c/code\u003e에 \u003ccode\u003e~/.cargo\u003c/code\u003e 자동 환경 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e curl https://sh.rustup.rs -sSf \u003cspan class=\"p\"\u003e|\u003c/span\u003e sh -- --help\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003erustup 업데이트/ 제거\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rustup update\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rustup self uninstall\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003erustc 컴파일러 버전확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rustc --version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"hello-world\"\u003eHello World\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim hello_world.rs\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e#\u003cspan class=\"n\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"err\"\u003e는\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e함수가\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e아닌\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"err\"\u003e매크로\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"fm\"\u003eprintln!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello, world!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e rustc hello_world.rs\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"cargo를-통한-개발\"\u003eCargo를 통한 개발\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo new hello_cargo --bin\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e hello_cargo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim src/main.rs\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"fm\"\u003eprintln!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Hello, world!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e./target/debug/hello_cargo\u003c/code\u003e 로 바이너리 생성\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo run   \u003cspan class=\"c1\"\u003e# compile and run\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo run   \u003cspan class=\"c1\"\u003e# run only: source is not changed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo check \u003cspan class=\"c1\"\u003e# compile only no exe file create (rapid compile and test)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo clean \u003cspan class=\"c1\"\u003e# cleanup all object and binary files\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo run -- --help \u003cspan class=\"c1\"\u003e#실행파일 인자를 받아서 실행할 때\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo build \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo build --release \u003cspan class=\"o\"\u003e(\u003c/span\u003eoptimize \u003cspan class=\"k\"\u003efor\u003c/span\u003e release\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e모듈을 사용할 경우\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo add ansi_term \u003cspan class=\"c1\"\u003e#자동으로 Cargo.toml에 모듈이름과 버전이 등록된다.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim src/main.rs \u003cspan class=\"c1\"\u003e#use ansi_term::xxxx 을 넣고 코딩\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo run\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"build-from-git\"\u003eBuild From Git\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone someurl.com/someproject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e someproject\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cargo build\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"reference\"\u003ereference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e제일 궁금한 것은 전체적인 개발 및 배포 과정인데 아래가 아주 좋음\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://free-strings.blogspot.com/2017/03/cargo-cargo.html\"\u003ehttps://free-strings.blogspot.com/2017/03/cargo-cargo.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://rust-cli.github.io/book/tutorial/packaging.html\"\u003ehttps://rust-cli.github.io/book/tutorial/packaging.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e아주 훌륭한 쿡북이다. 먼저 기본 온라인북을 보고서 이것을 공부하자.\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://rust-lang-nursery.github.io/rust-cookbook/\"\u003ehttps://rust-lang-nursery.github.io/rust-cookbook/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Rust Install and Setup"},{"content":"Intro debug \u0026gt; release 순으로 엄청난 바이너리 사이즈를 자랑한다. 우선 개발과 디버깅을 병행한 후에 최종 릴리즈시에 적용한다. 방법은 다음과 같다.\nHowto Cargo.toml에 다음을 추가한다. [profile.release] lto = true codegen-units = 1 opt-level = \u0026#34;z\u0026#34; panic = \u0026#39;abort\u0026#39; build cargo build --release reference https://www.collabora.com/news-and-blog/blog/2020/04/28/reducing-size-rust-gstreamer-plugin/ https://github.com/johnthagen/min-sized-rust ","permalink":"https://neosolaris.github.io/posts/rust-compile-size/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003edebug \u0026gt; release 순으로 엄청난 바이너리 사이즈를 자랑한다.\n우선 개발과 디버깅을 병행한 후에 최종 릴리즈시에 적용한다.\n방법은 다음과 같다.\u003c/p\u003e\n\u003ch2 id=\"howto\"\u003eHowto\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCargo.toml에 다음을 추가한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-toml\" data-lang=\"toml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003eprofile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003erelease\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003elto\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ecodegen-units\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003eopt-level\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;z\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003epanic\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;abort\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ebuild\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ecargo build --release\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"reference\"\u003ereference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.collabora.com/news-and-blog/blog/2020/04/28/reducing-size-rust-gstreamer-plugin/\"\u003ehttps://www.collabora.com/news-and-blog/blog/2020/04/28/reducing-size-rust-gstreamer-plugin/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/johnthagen/min-sized-rust\"\u003ehttps://github.com/johnthagen/min-sized-rust\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Rust Compile시 용량 줄이기"},{"content":"last updated: {{ \u0026ldquo;1736305941\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\nIntro 함수들이 처음 실행 될 때 필요에 의해 컴파일된다.\n이것은 어플리케이션이 빠르게 시작되는 것과 불필요한 작업을 발생시키지 않는 것을 보장해 준다.\nLuaJit은 neovim에 기본 탑재되어 있다.\npython, ruby 등의 Jit보다 우수한 성능을 보여준다.\nLuaJit의 FFI(Foreign Function Interface)는 Low-Level C언어 함수들을 별다른 작업 없이 직접적으로 사용할 수 있다.\n네이티브에 견줄만큼 속도가 빠르고, 메모리 사용량이 매우 적다.\nnginx에 LuaJIT을 포함시켜서 커스터마이징을 한 OpenResty 웹 서버도 있다.\nlua vs luaJIT\n* PUC Lua (the \u0026#34;normal interpreter\u0026#34;) is more stable, i.e. bugs are more frequently found in LuaJIT. * PUC Lua is smaller, i.e. it takes less memory. * PUC Lua is much easier to understand if you want to customize it. * PUC Lua has been ported to way more platforms and is easier to port. * Like @lhf said, LuaJIT does not support all of Lua 5.2 features yet. Install $ sudo apt update $ sudo apt install luajit $ luajit -h Usage 기본 사용법 usage: luajit [options]... [script [args]...]. Available options are: -e chunk Execute string \u0026#39;chunk\u0026#39;. -l name Require library \u0026#39;name\u0026#39;. -b ... Save or list bytecode. -j cmd Perform LuaJIT control command. -O[opt] Control LuaJIT optimizations. -i Enter interactive mode after executing \u0026#39;script\u0026#39;. -v Show version information. -E Ignore environment variables. -- Stop handling options. - Execute stdin and stop handling options. 바이트코드 컴파일 -b 옵션은 컴파일 바이너리 코드를 생성한다. lua에서는 소스를 먼저 바이트코드로 만들어 최적화한 후 인터프리터에서 처리한다. 소스코드가 용량이 큰 경우 바이트코드로 미리 컴파일해 두면 훨씬 빨라진다. ./luajit: unknown luaJIT command or jit.* modules not installed 에러가 발생하는 경우는 $LUA_PATH 설정이 잘못되어 있는 경우이므로 unset LUA_PATH해주거나 $LUA_PATH에 luajit의 올바른 모듈경로를 추가해 준다. $ luajit -b test.lua test.luac # Save bytecode to test.out $ luajit -bg test.lua test.luac # Keep debug info $ luajit -be \u0026#34;print(\u0026#39;hello world\u0026#39;)\u0026#34; test.luac # Save cmdline script $ luajit -bl test.lua # List to stdout $ luajit -bl test.lua test.txt # List to test.txt $ luajit -ble \u0026#34;print(\u0026#39;hello world\u0026#39;)\u0026#34; # List cmdline script $ luajit -b test.lua test.obj # Generate object file $ # Link test.obj with your application and load it with require(\u0026#34;test\u0026#34;) - 모듈의 경우에도 적용이 가능한데, 다음 두 가지 방법이 있다. $ luajit -b mymodule.lua mymodule.luac $ luajit luajit\u0026gt; mymodule = assert(loadfile(\u0026#34;module.luac\u0026#34;))() $ luajit -b /path/to/mymodule.lua ./mymodule.lua $ luajit luajit\u0026gt; mymodule = require\u0026#39;mymodule\u0026#39; FFI(Foreign Function Interface) LuaJIT는 C 함수를 손쉽게 가져와 사용할 수 있다. 아래 ffi모듈이 luajit의 내장된 기본 모듈이다. $ cat\u0026lt;\u0026lt;EOF \u0026gt; test-ffi.lua local ffi = require(\u0026#34;ffi\u0026#34;) ffi.cdef[[int printf(const char *fmt, ...);]] ffi.C.printf(\u0026#34;Hello %s!\\n\u0026#34;, \u0026#34;wiki\u0026#34;) EOF $ luajit test-ffi.lua Hello wiki! FFI Tutorial - https://luajit.org/ext_ffi_tutorial.html lua-ffi-bindings - https://github.com/thenumbernine/lua-ffi-bindings Link Lua Jit Introduction - 한글번역 https://m.blog.naver.com/milennium9/20120034562 Usage - 사용법 https://luajit.org/running.html LuaJIT Wiki 문서 - 공부의 시작 http://wiki.luajit.org/Home ","permalink":"https://neosolaris.github.io/posts/luajit/","summary":"\u003cp\u003elast updated: {{ \u0026ldquo;1736305941\u0026rdquo; | date: \u0026ldquo;%Y-%m-%d %H:%M\u0026rdquo; }}\u003c/p\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e함수들이 처음 실행 될 때 필요에 의해 컴파일된다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e이것은 어플리케이션이 빠르게 시작되는 것과 불필요한 작업을 발생시키지 않는 것을 보장해 준다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLuaJit은 neovim에 기본 탑재되어 있다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003epython, ruby 등의 Jit보다 우수한 성능을 보여준다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLuaJit의 FFI(Foreign Function Interface)는 Low-Level C언어 함수들을 별다른 작업 없이 직접적으로 사용할 수 있다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e네이티브에 견줄만큼 속도가 빠르고, 메모리 사용량이 매우 적다.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003enginx에 LuaJIT을 포함시켜서 커스터마이징을 한 OpenResty 웹 서버도 있다.\u003c/p\u003e","title":"LuaJit - Lua Just in Time Compiler"},{"content":"INTRO lua의 확장 패키지를 설치하고 관리하는 프로그램이다. INSTALL and SETUP Install System-Wide : /usr/local/ $ sudo apt install luarocks # luarocks 설치 $ sudo luarocks install stdlib # 표준 라이브러리 설치 $ sudo chmod a+r /usr/local/share/lua/5.1/* # 일반사용자 읽기 권한 부여 $ sudo luarocks install package_name # 패키지 설치 Install User Base : $HOME/.luarocks $ sudo apt install luarocks # luarocks 설치 $ echo \u0026#39;PATH=$PATH:$HOME/.luarocks/bin\u0026#39; \u0026gt;\u0026gt; ~/.bashrc # add luarock bin path $ echo \u0026#39;eval \u0026#34;$(luarocks path --bin)\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc # add LUA_PATH, LUA_CPATH $ . ~/.bashrc $ luarocks install --local package_name # 패키지 설치 (--local) Rcoktree Structure: 기본 설치 구조 {base} (base rocks tree directory) ├── bin (deployment of command line scripts) ├── lib │ ├── luarocks │ │ └── rocks (contains manifest and sub-dirs with rocks) │ │ │ └── lua │ └── 5.1 (deployment of binary modules) │ └── share └── lua └── 5.1 (deployment of Lua modules) Usage $ luarocks # show help and usage $ luarocks list # show installed packages $ luarocks search pack_name # search packages $ luarocks install pack_name # remove installed packages $ luarocks show pack_name # show info installed packages $ luarocks remove pack_name # remove installed packages 패키지 설치 및 사용례 패키지는 http://luarocks.org 참조 - 각 모듈 다운로드 순위도 참고\n실제 사용례\n$ luarocks search luafilesystem $ luarocks install --local luafilesystem $ luarocks list $ luarocks show luafilesystem $ vim attrdir.lua #!/usr/bin/env lua local lfs = require\u0026#34;lfs\u0026#34; -- import luafilesystem module function attrdir (path) for file in lfs.dir(path) do if file ~= \u0026#34;.\u0026#34; and file ~= \u0026#34;..\u0026#34; then local f = path..\u0026#39;/\u0026#39;..file print (\u0026#34;\\t \u0026#34;..f) local attr = lfs.attributes (f) assert (type(attr) == \u0026#34;table\u0026#34;) if attr.mode == \u0026#34;directory\u0026#34; then attrdir (f) else for name, value in pairs(attr) do print (name, value) end end end end end attrdir (\u0026#34;.\u0026#34;) $ chmod u+x attrdir.lua $ ./attrdir.lua Links https://luarocks.org/ https://github.com/luarocks/luarocks/wiki/Using-LuaRocks https://leafo.net/guides/customizing-the-luarocks-tree.html ","permalink":"https://neosolaris.github.io/posts/luarocks/","summary":"\u003ch2 id=\"intro\"\u003eINTRO\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003elua의 확장 패키지를 설치하고 관리하는 프로그램이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install-and-setup\"\u003eINSTALL and SETUP\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eInstall System-Wide : \u003ccode\u003e/usr/local/\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install luarocks     \u003cspan class=\"c1\"\u003e# luarocks 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo luarocks install stdlib  \u003cspan class=\"c1\"\u003e# 표준 라이브러리 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo chmod a+r /usr/local/share/lua/5.1/* \u003cspan class=\"c1\"\u003e# 일반사용자 읽기 권한 부여\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo luarocks install package_name \u003cspan class=\"c1\"\u003e# 패키지 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eInstall User Base : \u003ccode\u003e$HOME/.luarocks\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install luarocks     \u003cspan class=\"c1\"\u003e# luarocks 설치\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;PATH=$PATH:$HOME/.luarocks/bin\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; ~/.bashrc \u003cspan class=\"c1\"\u003e# add luarock bin path\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;eval \u0026#34;$(luarocks path --bin)\u0026#34;\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; ~/.bashrc  \u003cspan class=\"c1\"\u003e# add LUA_PATH, LUA_CPATH\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e . ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks install --local package_name   \u003cspan class=\"c1\"\u003e# 패키지 설치 (--local)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eRcoktree Structure: 기본 설치 구조\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e {base}                (base rocks tree directory)\n  ├── bin              (deployment of command line scripts)\n  ├── lib\n  │    ├── luarocks\n  │    │    └── rocks  (contains manifest and sub-dirs with rocks)\n  │    │\n  │    └── lua\n  │         └── 5.1    (deployment of binary modules)\n  │\n  └── share\n       └── lua\n            └── 5.1    (deployment of Lua modules)\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks                      \u003cspan class=\"c1\"\u003e# show help and usage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks list                 \u003cspan class=\"c1\"\u003e# show installed packages\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks search pack_name     \u003cspan class=\"c1\"\u003e# search packages\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks install pack_name    \u003cspan class=\"c1\"\u003e# remove installed packages\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks show pack_name       \u003cspan class=\"c1\"\u003e# show info installed packages\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks remove pack_name     \u003cspan class=\"c1\"\u003e# remove installed packages\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"패키지-설치-및-사용례\"\u003e패키지 설치 및 사용례\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e패키지는 \u003ca href=\"http://luarocks.org\"\u003ehttp://luarocks.org\u003c/a\u003e 참조 - 각 모듈 다운로드 순위도 참고\u003c/p\u003e","title":"Luarocks - lua 패키지 관리"},{"content":"Intro lua 스크립트를 단독 실행 파일로 만들어 주는 프로그램 (gcc로 컴파일) 코드를 숨기고 빠른 단독 실행 프로그램으로 바꾸고자 하는 경우에 유용 또는 개발시 여러개의 루아파일을 require로 사용할 경우 하나로 합치고자 할 때 luarocks로 설치한다. luarocks로 설치된 모듈은 ~/.bashrc에 eval \u0026quot;$(luarocks path --bin)\u0026quot;로 설정했기 때문에 자동으로 포함된다. 문제는 같은 리눅스라도 버전간 배포판간에 glibc 호환이 되지 않는다는 점이다. 거의 동일한 환경에서만 배포 가능하다고 본다. 단, alpine linux의 경우에는 glibc 버전 문제가 없고, 용량도 작다. debian 계열 요구사항: build-essential(gcc), lua, luastatic alpine Linux 요구사항: build-base, clang, luajit, luastatic Install and Howto Install $ luarocks install --local luastatic # install luastatic $ export PATH=$PATH:$HOME/.luarocks/bin # set PATH for luarocks bin $ luastatic # show version and usage Compile Single Lua file $ luastatic myprogram.lua \\ /usr/lib/x86_64-linux-gnu/liblua5.1.a \\ -I /usr/include/lua5.1 $ ./myprogram Embed library.lua for require(\u0026ldquo;library\u0026rdquo;) $ luastatic myprogram.lua \\ myprogram.lua \\ library.lua \\ /usr/lib/x86_64-linux-gnu/liblua5.1.a \\ -I /usr/include/lua5.1 C library containing luaopen_() $ luastatic myprogram.lua \\ library.a \\ /usr/lib/x86_64-linux-gnu/liblua5.1.a \\ -I /usr/include/lua5.1 LuaJit on Ubuntu - 우분투에서 LuaJit 사용 $ sudo apt install luajit # install luajit - 2.1.0 $ sudo apt install libluajit-5.1-dev # install libluajit dev - 5.1 $ luastatic myprogram.lua \\ /usr/lib/x86_64-linux-gnu/libluajit-5.1.a \\ -I /usr/include/luajit-2.1 \\ -no-pie LuaJit on Alpine - LuaJit, clang with musl lib static compile # apk add luajit luajit-dev # install luajit - 2.1.0 # apk add build-base clang make # install build base and clang # env CC=clang luastatic myprogram.lua \\ /usr/lib/x86_64-linux-gnu/libluajit-5.1.a \\ -I /usr/include/luajit-2.1 \\ -no-pie 좀 더 자세한 내용은 아래 링크를 참조 Links https://github.com/ers35/luastatic\n","permalink":"https://neosolaris.github.io/posts/luastatic/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003elua 스크립트를 단독 실행 파일로 만들어 주는 프로그램 (gcc로 컴파일)\u003c/li\u003e\n\u003cli\u003e코드를 숨기고 빠른 단독 실행 프로그램으로 바꾸고자 하는 경우에 유용\u003c/li\u003e\n\u003cli\u003e또는 개발시 여러개의 루아파일을 require로 사용할 경우 하나로 합치고자 할 때\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../luarocks\"\u003eluarocks\u003c/a\u003e로 설치한다.\u003c/li\u003e\n\u003cli\u003eluarocks로 설치된 모듈은 \u003ccode\u003e~/.bashrc\u003c/code\u003e에 \u003ccode\u003eeval \u0026quot;$(luarocks path --bin)\u0026quot;\u003c/code\u003e로 설정했기 때문에 자동으로 포함된다.\u003c/li\u003e\n\u003cli\u003e문제는 같은 리눅스라도 버전간 배포판간에 glibc 호환이 되지 않는다는 점이다.\u003c/li\u003e\n\u003cli\u003e거의 동일한 환경에서만 배포 가능하다고 본다.\u003c/li\u003e\n\u003cli\u003e단, alpine linux의 경우에는 glibc 버전 문제가 없고, 용량도 작다.\u003c/li\u003e\n\u003cli\u003edebian 계열 요구사항: build-essential(gcc), lua, luastatic\u003c/li\u003e\n\u003cli\u003ealpine Linux 요구사항: build-base, clang, luajit, luastatic\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install-and-howto\"\u003eInstall and Howto\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eInstall\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luarocks install --local luastatic    \u003cspan class=\"c1\"\u003e# install luastatic\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003ePATH\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e$PATH\u003c/span\u003e:\u003cspan class=\"nv\"\u003e$HOME\u003c/span\u003e/.luarocks/bin \u003cspan class=\"c1\"\u003e# set PATH for luarocks bin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luastatic                             \u003cspan class=\"c1\"\u003e# show version and usage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eCompile Single Lua file\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luastatic myprogram.lua \u003cspan class=\"se\"\u003e\\ \u003c/span\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    /usr/lib/x86_64-linux-gnu/liblua5.1.a \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    -I /usr/include/lua5.1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ./myprogram\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eEmbed library.lua for require(\u0026ldquo;library\u0026rdquo;)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luastatic myprogram.lua \u003cspan class=\"se\"\u003e\\ \u003c/span\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    myprogram.lua \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    library.lua \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    /usr/lib/x86_64-linux-gnu/liblua5.1.a \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    -I /usr/include/lua5.1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eC library containing luaopen_()\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luastatic myprogram.lua \u003cspan class=\"se\"\u003e\\ \u003c/span\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    library.a \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    /usr/lib/x86_64-linux-gnu/liblua5.1.a \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    -I /usr/include/lua5.1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eLuaJit on Ubuntu - 우분투에서 LuaJit 사용\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install luajit               \u003cspan class=\"c1\"\u003e# install luajit - 2.1.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install libluajit-5.1-dev    \u003cspan class=\"c1\"\u003e# install libluajit dev - 5.1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e luastatic myprogram.lua \u003cspan class=\"se\"\u003e\\ \u003c/span\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    /usr/lib/x86_64-linux-gnu/libluajit-5.1.a \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    -I /usr/include/luajit-2.1 \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    -no-pie\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eLuaJit on Alpine - LuaJit, clang with musl lib static compile\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e apk add luajit luajit-dev  \u003cspan class=\"c1\"\u003e# install luajit - 2.1.0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e apk add build-base clang make    \u003cspan class=\"c1\"\u003e# install build base and clang\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e env \u003cspan class=\"nv\"\u003eCC\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eclang luastatic myprogram.lua \u003cspan class=\"se\"\u003e\\ \u003c/span\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    /usr/lib/x86_64-linux-gnu/libluajit-5.1.a \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    -I /usr/include/luajit-2.1 \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    -no-pie\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e좀 더 자세한 내용은 아래 링크를 참조\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/ers35/luastatic\"\u003ehttps://github.com/ers35/luastatic\u003c/a\u003e\u003c/p\u003e","title":"Luastatic - lua 독립실행 바이너리 컴파일러"},{"content":"Install 설치 - luaJit과의 호환을 위해 5.1로 설치. sudo apt install lua5.1 lua -v - version lua -h - help lua -i - interactive mode Hello World hello-world.lua #!/usr/bin/env lua print(\u0026#34;Hello World!\u0026#34;) 실행 chmod u+x hello-world.lua ./hello-world.lua Lua - Cli 인터프리터 $ lua Lua 5.1.5 Copyright (C) 1994-2012 Lua.org, PUC-Rio \u0026gt; print(\u0026#39;Hello World!\u0026#39;) Hello World! \u0026gt; os.exit() -- 또는 Control + d (리눅스) ","permalink":"https://neosolaris.github.io/posts/lua-install/","summary":"\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e설치 - luaJit과의 호환을 위해 5.1로 설치.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install lua5.1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003elua -v\u003c/code\u003e - version\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elua -h\u003c/code\u003e - help\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003elua -i\u003c/code\u003e - interactive mode\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"hello-world\"\u003eHello World\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ehello-world.lua\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e#!/usr/bin/env lua\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Hello World!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003echmod u+x hello-world.lua\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e./hello-world.lua\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lua---cli-인터프리터\"\u003eLua - Cli 인터프리터\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e lua\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eLua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e print\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Hello World!\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eHello World!\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e\u0026gt;\u003c/span\u003e os.exit\u003cspan class=\"o\"\u003e()\u003c/span\u003e  -- 또는 Control + d \u003cspan class=\"o\"\u003e(\u003c/span\u003e리눅스\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","title":"Lua Install"},{"content":"Intro 1993 개발, 호베르투 예루잘링스키, 포르투갈어 달을 의미 스크립트 언어로 굉장히 작고 가벼운 인터프리터형 언어이다. 파이썬이나 루비에 비해 가볍고 매우 빠르다 코딩이 간결하고 성능이 뛰어나다. 절차형, 오브젝트형, 함수형 모두 지원한다. 큰 프로그램 구현만 아니라면 여러 용도로 사용하기 좋다. 그것은 마치 DB에서 sqlite3를 사용하는 이유와 같다. neovim에 기본 내장되어 자기만의 vim 환경을 만들 수 있다. 용도 C/C++ 프로그램 개발 과정에서 리컴파일이나 리로딩없이 바로 설정 변화를 적용할 수 있는 점 때문에 특히 게임업계에서 많이 쓰인다. 개발의 편의를 위해서 Lua를 내부적으로 활용하는 일 외에도, 아예 게임 코드를 Lua로 작성하는 경우도 있다. API를 유저들에게 공개하여 MOD제작이나 게임의 커스텀 UI 설정 스크립트 언어로 사용되기도 한다. Links Lua 나무위키: https://namu.wiki/w/Lua ","permalink":"https://neosolaris.github.io/posts/lua-intro/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e1993 개발, 호베르투 예루잘링스키, 포르투갈어 달을 의미\u003c/li\u003e\n\u003cli\u003e스크립트 언어로 굉장히 작고 가벼운 인터프리터형 언어이다.\u003c/li\u003e\n\u003cli\u003e파이썬이나 루비에 비해 가볍고 매우 빠르다\u003c/li\u003e\n\u003cli\u003e코딩이 간결하고 성능이 뛰어나다.\u003c/li\u003e\n\u003cli\u003e절차형, 오브젝트형, 함수형 모두 지원한다.\u003c/li\u003e\n\u003cli\u003e큰 프로그램 구현만 아니라면 여러 용도로 사용하기 좋다.\u003c/li\u003e\n\u003cli\u003e그것은 마치 DB에서 sqlite3를 사용하는 이유와 같다.\u003c/li\u003e\n\u003cli\u003eneovim에 기본 내장되어 자기만의 vim 환경을 만들 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"용도\"\u003e용도\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eC/C++\u003c/code\u003e 프로그램 개발 과정에서 리컴파일이나 리로딩없이 바로 설정 변화를 적용할 수 있는 점 때문에 특히 게임업계에서 많이 쓰인다.\u003c/li\u003e\n\u003cli\u003e개발의 편의를 위해서 Lua를 내부적으로 활용하는 일 외에도, 아예 게임 코드를 Lua로 작성하는 경우도 있다.\u003c/li\u003e\n\u003cli\u003eAPI를 유저들에게 공개하여 MOD제작이나 게임의 커스텀 UI 설정 스크립트 언어로 사용되기도 한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLua 나무위키: \u003ca href=\"https://namu.wiki/w/Lua\"\u003ehttps://namu.wiki/w/Lua\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Lua Intro - 왜 lua인가"},{"content":"설치시 고려사항 설치환경 Ubuntu 22.04 SketchupMake2017 version OpenGL 3.X 이상 WineHQ 최신버전 윈도우를 전혀 사용하지 않거나 꺼려지데 sketchup을 쓰고 싶다면 참고한다. 루비 플러그인이 오작동 없이 사용 가능한 버전인가. OpenGL 버전을 만족하는 그래픽 카드를 가지고 있는가. 한글 입출력이 문제가 없는가. 무료 버전 중 가장 최근의 sketchup은 무엇인가. 결론: SketchupMake2017 + winehq + linux Intro 우분투, 데비안에서 설치 테스트 완료 debian Jessie 8.11, ubuntu jammy 22.04 기존 wine 패키지 버전 6.x에서는 실패, winehq 최신 버전으로 성공 winehq: staging 7.14 version 스케치업버전은 2017 이상으로 해야 플러그인 설치 및 활용가능 스케치업2017까지가 마지막 Free 버전(SketchupMake-2017)이므로 이를 선택 sketchup: 2017 make version: 2018.08.25 release 한글입출력문제: winehq설치 후 gulim.ttc 파일을 추가해준다. Winehq Install add repository first, staging version 7.14 success sudo dpkg --add-architecture i386 wget -nc https://dl.winehq.org/wine-builds/winehq.key sudo apt-key add winehq.key sudo add-apt-repository \u0026#39;deb https://dl.winehq.org/wine-builds/ubuntu/ jammy main\u0026#39; sudo apt-get update sudo apt install --install-recommends winehq-staging wine --version Winetricks (version:20220411) Install winetricks 최신버전을 다운로드한다. wget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks chmod u+x winetricks mv winetricks ~/bin winetricks --version Sketchup2017 Install winetricks를 이용하여 CLI환경에서 자동으로 설치할 수 있다. 그러나 중간 중간 라이센스 동의 후 설치확인을 해 주어야한다. dotnet 설치과정에서 reboot할 거냐고 물으면 later로 해준다. 설치전 반드시 환경변수를 ~/.bashrc에 등록해주고 반드시 리로드해준다. 현재로선 한글을 위해 baekmuk폰트를 설치했으나 한글입출력에 문제 발생 아래 한글문제 해결 참조 sudo apt-get install cabextract #winetricks required echo \u0026#34;export WINEARCH=win64\u0026#34; \u0026gt;\u0026gt; ~/.bashrc echo \u0026#34;export WINEPREFIX=/home/borisu/.sketchup2017\u0026#34; \u0026gt;\u0026gt; ~/.bashrc . ~/.bashrc #first run: mono,gecko install? -\u0026gt; yes #dotnet46: reboot? -\u0026gt; later click winetricks corefonts \u0026amp;\u0026amp; \\ winetricks tahoma \u0026amp;\u0026amp; \\ winetricks baekmuk \u0026amp;\u0026amp; \\ winetricks riched30 \u0026amp;\u0026amp; \\ winetricks richtx32 \u0026amp;\u0026amp; \\ winetricks vcrun2015 \u0026amp;\u0026amp; \\ winetricks dotnet46 Install Sketchup winetricks \u0026gt; winecfg \u0026gt; Graphics \u0026gt; r192dpi 설정 winetricks \u0026gt; Explorer \u0026gt; sketchup2017make.exe 실행 winetricks 또는 CLI 에서 winetricks로 직접 실행 가능\nwinetricks path_to_your_sketchup_installer/sketchup2017make.exe 한글문제 해결 winetricks 설치시 baekmuk폰트를 설치하였으나 작동하지 않음 gulim.ttc를 수동 설치 후 해결 sketchup에서 웹기반의 extension 툴들에서 한글이 깨짐. 아직 미해결 폰트 다운로드 사이트 https://ko.cooltext.com/Download-Font-%EA%B5%B4%EB%A6%BC+Gulim gulim.ttc를 다운로드 또는 윈도우에서 폰트를 복사하여 다음과 같이 설치 https://github.com/neosolaris/sketchup/raw/main/docs/gulim.ttc cp gulim.ttc ${WINEPREFIX}/drive_c/windows/Fonts/ Setup Sketchup2017 기본 사용자폴더는 ${WINEPREFIX}/drive_c/users/사용자명/Documents\n이 폴더는 리눅스에서 ${HOME}/Documents와 연결되어 있다.\n최소한 ${WINEPREFIX}/drive_c 이하에 작업파일을 저장하는 것이 좋다.\n문제는 ${WINEPREFIX}가 아닌 위치에서는 sketchup 자동저장 에러가 난다.\n해결방법은 ${HOME}/Doucuments 이하에 작업파일을 저장하는 것이다.\n백업시에는 이곳을 백업해주는 것이 현재로서는 제일 좋은 방법이다.\n시작화면 없애기\n${WINEPREFIX}/drive_c/Program Files/SketchUp/Sketchup 2017/sketchup.exe 실행파일을 먼저 백업해두고 원본파일을 헥사에디터로 편집하고 저장한 다음 실행하면 된다. 아마도 스케치업이 실행될 때 시작화면이 뜨는 부분을 지워서 동작하지 않게 하는 것으로 보인다. 단 2017 make 버전에 한한다. http://www.edugeek.net/forums/educational-software/169465-disable-sketchup-2016-welcome-screen.html Open c:\\program files\\sketchup\\sketchup 2017\\sketchup.exe in a hex editor Search for the following series of hex values: FF 90 F8 02 00 00 48 8B 83 Replace them with these hex values: 90 90 90 90 90 90 48 8B 83 Save and run the edited file, and the dialog box should no longer show 자주쓰는 Extension 설치 (3DWareHouse, SkechUcation)\nFullScreen, OpenCutlist, Ruby Console+, Solid Inspector2 FullScreen의 경우 F11기능이 없으므로 Prefrence/Shortcut에 추가해주고 사용하면 편리하다. Preference Import\n자신이 주로사용하는 shortcut, 기타 설정 등을 import한다. Reference Install Sketchup Make on Ubuntu: https://linuxhint.com/install-sketchup-make-on-ubuntu/ Sketchup Make 2017 Linux: https://www.dedoimedo.com/computers/sketchup-make-2017-linux.html How to Install Sketchup 2017 Make: http://penguinfollies.blogspot.com/2021/01/how-to-install-sketchup-2017-make-in.html sketchup2017 make download: https://download.cnet.com/SketchUp-Make-2017/3000-6677_4-10257337.html ","permalink":"https://neosolaris.github.io/posts/sketchup-install/","summary":"\u003ch2 id=\"설치시-고려사항\"\u003e설치시 고려사항\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e설치환경\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eUbuntu 22.04\nSketchupMake2017 version\nOpenGL 3.X 이상\nWineHQ 최신버전\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e윈도우를 전혀 사용하지 않거나 꺼려지데 sketchup을 쓰고 싶다면 참고한다.\u003c/li\u003e\n\u003cli\u003e루비 플러그인이 오작동 없이 사용 가능한 버전인가.\u003c/li\u003e\n\u003cli\u003eOpenGL 버전을 만족하는 그래픽 카드를 가지고 있는가.\u003c/li\u003e\n\u003cli\u003e한글 입출력이 문제가 없는가.\u003c/li\u003e\n\u003cli\u003e무료 버전 중 가장 최근의 sketchup은 무엇인가.\u003c/li\u003e\n\u003cli\u003e결론: \u003ccode\u003eSketchupMake2017 + winehq + linux\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e우분투, 데비안에서 설치 테스트 완료 \u003ccode\u003edebian Jessie 8.11\u003c/code\u003e, \u003ccode\u003eubuntu jammy 22.04\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e기존 wine 패키지 버전 6.x에서는 실패, winehq 최신 버전으로 성공\u003c/li\u003e\n\u003cli\u003ewinehq: \u003ccode\u003estaging 7.14\u003c/code\u003e version\u003c/li\u003e\n\u003cli\u003e스케치업버전은 2017 이상으로 해야 플러그인 설치 및 활용가능\u003c/li\u003e\n\u003cli\u003e스케치업2017까지가 마지막 Free 버전(SketchupMake-2017)이므로 이를 선택\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esketchup: 2017 make version: 2018.08.25 release\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e한글입출력문제: winehq설치 후 \u003ccode\u003egulim.ttc\u003c/code\u003e 파일을 추가해준다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"winehq-install\"\u003eWinehq Install\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eadd repository first, staging version 7.14 success\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo dpkg --add-architecture i386\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewget -nc https://dl.winehq.org/wine-builds/winehq.key\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt-key add winehq.key\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo add-apt-repository \u0026#39;deb https://dl.winehq.org/wine-builds/ubuntu/ jammy main\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt-get update\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install --install-recommends winehq-staging\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewine --version\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"winetricks-version20220411-install\"\u003eWinetricks (version:20220411) Install\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ewinetricks 최신버전을 다운로드한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewget https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003echmod u+x winetricks\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003emv winetricks ~/bin\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewinetricks --version\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"sketchup2017-install\"\u003eSketchup2017 Install\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ewinetricks를 이용하여 CLI환경에서 자동으로 설치할 수 있다.\u003c/li\u003e\n\u003cli\u003e그러나 중간 중간 라이센스 동의 후 설치확인을 해 주어야한다.\u003c/li\u003e\n\u003cli\u003edotnet 설치과정에서 reboot할 거냐고 물으면 later로 해준다.\u003c/li\u003e\n\u003cli\u003e설치전 반드시 환경변수를 \u003ccode\u003e~/.bashrc\u003c/code\u003e에 등록해주고 반드시 리로드해준다.\u003c/li\u003e\n\u003cli\u003e현재로선 한글을 위해 baekmuk폰트를 설치했으나 한글입출력에 문제 발생\u003c/li\u003e\n\u003cli\u003e아래 한글문제 해결 참조\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt-get install cabextract #winetricks required\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eecho \u0026#34;export WINEARCH=win64\u0026#34; \u0026gt;\u0026gt; ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eecho \u0026#34;export WINEPREFIX=/home/borisu/.sketchup2017\u0026#34; \u0026gt;\u0026gt; ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e. ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003efirst run: mono,gecko install? -\u0026gt; yes\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003edotnet46: reboot? -\u0026gt; later click\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewinetricks corefonts \u0026amp;\u0026amp; \\ \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewinetricks tahoma \u0026amp;\u0026amp; \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewinetricks baekmuk \u0026amp;\u0026amp; \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewinetricks riched30 \u0026amp;\u0026amp; \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewinetricks richtx32 \u0026amp;\u0026amp; \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewinetricks vcrun2015 \u0026amp;\u0026amp; \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewinetricks dotnet46 \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"install-sketchup\"\u003eInstall Sketchup\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ewinetricks \u0026gt; winecfg \u0026gt; Graphics \u0026gt; r192dpi\u003c/code\u003e 설정\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ewinetricks \u0026gt; Explorer \u0026gt; sketchup2017make.exe\u003c/code\u003e 실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ewinetricks \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e또는 CLI 에서 winetricks로 직접 실행 가능\u003c/p\u003e","title":"Sketchup2017 Install and Setup in Ubuntu"},{"content":" sketchup install ","permalink":"https://neosolaris.github.io/posts/sketchup/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../sketchup-install\"\u003esketchup install\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Sketchup"},{"content":" 우분투 리눅스 기준에서 설명 (Mac,Windows 모두 다르다) 설정 블렌더 설정창에 다음을 체크 edit \u0026gt; preferences \u0026gt; input \u0026gt; [v] Emulate Numpad [v] Emulate 3 Button Mouse 사용법 * Scroll (with 2 fingers) 위/아래: 화면 축소/확대 * Alt + 2Touch + Scroll (with 1 fingers) : 화면 회전 * Alt + Shift + 2Touch + Scroll (with 1 fingers) : 화면 이동 Reference https://www.versluis.com/2019/07/using-blender-on-a-laptop-with-a-trackpad/\n","permalink":"https://neosolaris.github.io/posts/blender-touchpad/","summary":"\u003cul\u003e\n\u003cli\u003e우분투 리눅스 기준에서 설명 (Mac,Windows 모두 다르다)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설정\"\u003e설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e블렌더 설정창에 다음을 체크\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eedit \u0026gt; preferences \u0026gt; input \u0026gt; [v] Emulate Numpad\n                             [v] Emulate 3 Button Mouse\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"사용법\"\u003e사용법\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e* Scroll (with 2 fingers) 위/아래: 화면 축소/확대\n* Alt +  2Touch + Scroll (with 1 fingers) : 화면 회전\n* Alt + Shift +  2Touch + Scroll (with 1 fingers) : 화면 이동\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.versluis.com/2019/07/using-blender-on-a-laptop-with-a-trackpad/\"\u003ehttps://www.versluis.com/2019/07/using-blender-on-a-laptop-with-a-trackpad/\u003c/a\u003e\u003c/p\u003e","title":"Blender 노트북 터치패드 사용 및 설정"},{"content":"기존 설치 제거 apt version if [ \u0026#34;$(which blender)\u0026#34; == \u0026#34;/usr/bin/blender\u0026#34; ];then sudo apt autoremove blender fi snap version if [ \u0026#34;$(which blender)\u0026#34; == \u0026#34;/snap/bin/blender\u0026#34; ];then sudo snap remove blender fi Add Repository PPA APT sudo add-apt-repository ppa:savoury1/blender -y sudo add-apt-repository ppa:savoury1/ffmpeg4 -y sudo add-apt-repository ppa:savoury1/ffmpeg5 -y sudo add-apt-repository ppa:savoury1/graphics -y sudo add-apt-repository ppa:savoury1/display -y Apt Update and Blender Install sudo apt update sudo apt upgrade sudo apt install blender -y Reference https://www.linuxcapable.com/how-to-install-blender-on-ubuntu-22-04-lts ","permalink":"https://neosolaris.github.io/posts/blender-install/","summary":"\u003ch2 id=\"기존-설치-제거\"\u003e기존 설치 제거\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eapt version\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eif [ \u0026#34;$(which blender)\u0026#34; == \u0026#34;/usr/bin/blender\u0026#34; ];then\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\tsudo apt autoremove blender\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003efi\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003esnap version\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eif [ \u0026#34;$(which blender)\u0026#34; == \u0026#34;/snap/bin/blender\u0026#34; ];then\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\tsudo snap remove blender\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003efi\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"add-repository-ppa-apt\"\u003eAdd Repository PPA APT\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo add-apt-repository ppa:savoury1/blender -y\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo add-apt-repository ppa:savoury1/ffmpeg4 -y\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo add-apt-repository ppa:savoury1/ffmpeg5 -y\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo add-apt-repository ppa:savoury1/graphics -y\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo add-apt-repository ppa:savoury1/display -y\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"apt-update-and-blender-install\"\u003eApt Update and Blender Install\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt upgrade\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install blender -y\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.linuxcapable.com/how-to-install-blender-on-ubuntu-22-04-lts\"\u003ehttps://www.linuxcapable.com/how-to-install-blender-on-ubuntu-22-04-lts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"How to Install Blender on Ubuntu 22.04 LTS"},{"content":" blender install blender touchpad ","permalink":"https://neosolaris.github.io/posts/blender/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../blender-install\"\u003eblender install\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../blender-touchpad\"\u003eblender touchpad\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Blender"},{"content":" 2023-08-08: 플러그인 수동 설정 추가, 오타 수정 2022-09-06: lua의 기본 설정법 및 패키지 설치 설정 정리 소개 nvim은 vim과 다르게 luajit 이 기본 탑재되어 있다. 이는 vim의 거의 모든 기능을 lua로 제어할 수 있다는 뜻이다. 또한 자신의 코드 또는 모듈들을 쉽게 이식하고 확장할 수 있다. 이 글의 목표는 기존 ~/.config/nvim/init.vim의 설정을 모두 init.lua로 대체하고 확장하는 데 있다. NVIM v0.7.2/ Build type: Release/ LuaJIT 2.1.0-beta3 Why Lua 5.1 instead of Lua 5.3+? 아래는 nvim 공식 FAQ 내용이다.\n따라서 LuaJIT 과 함께 별도의 프로그래밍시 lua 에서도 버전을 5.1로 맞추어 사용하는 것이 여러모로 좋다고 생각한다.\nLua 5.1 is a different language than 5.3. The Lua org makes breaking changes with every new version, so even if we switched (not upgraded, but switched) to 5.3 we gain nothing when they create the next new language in 5.4, 5.5, etc. And we would lose LuaJit, which is far more valuable than Lua 5.3+.\nLua 5.1 is a complete language. To \u0026ldquo;upgrade\u0026rdquo; it, add libraries, not syntax. Nvim itself already is a pretty good \u0026ldquo;stdlib\u0026rdquo; for Lua, and we will continue to grow and enhance it. Changing the rules of Lua gains nothing in this context.\nNvim Lua 설정 및 설치 구조 기본 설정 파일은 init.lua이며 모두 이곳에 설정해도 된다. 그러나 차차 설정 내용이 많아지고 복잡해질 수 있으므로 따로 분리해서 관리하는 것이 좋겠다.\n설정파일 ~/.config/nvim/init.lua # nvim 기본 설정파일 ~/.config/nvim/lua/ # 확장 설정 및 모듈 추가 디렉토리 ~/.config/nvim/lua/plugins.lua # packer 및 플러그인 등록 설정파일 ~/.config/nvim/lua/settings.lua # nvim 확장 설정파일 ~/.config/nvim/lua/mymodule.lua # 개인 모듈 또는 설정파일 ~/.local/share/nvim/site # 각종 플러그인 설치 위치 설정 방법\nnvim 7.x 버전 기준으로 일반 사용자 설정파일은 ~/.config/nvim/init.lua이다. 기존에 ~/.config/nvim/init.vim이 우선권을 갖는다. 있다면 다른 곳에 백업해 둔다. 또는 init.vim에 lua require('init')이라고 추가해준다. init.lua는 당연히 lua프로그램이므로 루아 문법에 맞게 작성해야 한다. 이제 깨끗한 백지에 한자씩 정성스럽게 글을 쓰듯 설정을 해나간다. 주의할 것은 초기 설정을 너무 많이 작성하고 확인하면 에러 찾기가 어려우므로 한 부분 설정하고 확인하는 방식으로 하자. ~/.config/nvim/init.vim\nrequire(\u0026#39;plugins\u0026#39;) -- 플러그인 설정: lua/plugins.lua 를 불러옴 require\u0026#34;settings\u0026#34; -- 주 설정: \u0026#34;\u0026#34; 형식도 허용 lua/settings.lua require\u0026#39;mymodule\u0026#39; -- \u0026#39;\u0026#39;가 보다 간결 lua/mymodule.lua 기본 설정 설정은 vim.option.옵션명 = '값' 형태로 vimrc 변수를 사용한다.\n축약형 vim.o.옵션명을 사용해도 된다.\n~/.config/nvim/lua/settings.lua\n-- basic set vim.o.encoding = \u0026#39;utf-8\u0026#39; vim.o.fileencodings = \u0026#39;utf-8\u0026#39; vim.o.splitbelow = true vim.o.splitright = true vim.o.autoindent = true vim.o.smartindext = true vim.o.shiftwidth = 4 vim.o.tabstop = 4 vim.o.number = true vim.o.relativenumber = true vim.o.expandtab = true vim.o.backspace = \u0026#39;indent,eol,start\u0026#39; vim.o.cursorline = true vim.o.spell = true -- colorscheme set vim.o.background = \u0026#39;dark\u0026#39; vim.cmd(\u0026#39;colorscheme gruvbox\u0026#39;) 플러그인 수동 설치 System Wide: /usr/share/nvim/site/ System Wide(lua): /usr/share/nvim/site/lua/ User: ~/.local/share/nvim/site User(lua): ~/.local/share/nvim/site/lua/ 해당 디렉토리에 원하는 플러그인을 git clone으로 복사한다. ~/.config/nvim/init.lua 에 설정을 추가한다. 재실행하거나 :so %로 설정을 리로드한다. 번거롭지만 이렇게 구성해 놓고 백업해 두거나 Github에 설정파일과 함께 올려 두면 바로 사용 가능하다. Packer - 플러그인 메니저 설치 nvim-lua 에서는 플러그인 메니저로 packer를 가장 많이 사용하므로 이를 채택.\nPacker도 플러그인이므로 먼저 설치되어야 한다.\nPacker설치 - ~/.local/share/nvim/site 이하 설치를 기억.\n$ git clone --depth 1 https://github.com/wbthomason/packer.nvim\\ ~/.local/share/nvim/site/pack/packer/start/packer.nvim Packer 설정 및 플러그인 설치 플러그인은 가급적 내장 LuaJIT을 활용한 루아 플러그인으로 대체한다.\n플러그인 등록 - ~/.config/nvim/lua/plugins.lua\nvim.cmd [[packadd packer.nvim]] -- vim.cmd로 packadd 시작 return require(\u0026#39;packer\u0026#39;).startup(function(use) -- packer 시작 -- Packer can manage itself use \u0026#39;wbthomason/packer.nvim\u0026#39; -- packer 플러그인 사용 -- common use \u0026#39;ellisonleao/gruvbox.nvim\u0026#39; -- colorscheme 플러그인 추가 use \u0026#39;kyazdani42/nvim-web-devicons\u0026#39; -- web-devicons use \u0026#39;kyazdani42/nvim-tree.lua\u0026#39; -- file explorer use \u0026#39;alvarosevilla95/luatab.nvim\u0026#39; -- tab line use \u0026#39;nvim-lualine/lualine.nvim\u0026#39; -- line status use \u0026#39;goolord/alpha-nvim\u0026#39; -- alpha-nvim starter end) -- packer 종료 플러그인 설치 - nvim의 last line mode에서 실행 :luafile % - 현재 루아 설정파일 재인식 :PackerInstall - Packer로 등록한 플러그인 설치 :luafile % :PackerInstall 플러그인 설정 - ~/.config/nvim/lua/settings.lua 설정은 require'plugname'.setup() 형식이고, setup()은 default set이다. 자주쓰는 플러그인 명령을 자신에 맞게 리매핑을 추가 설정에 관한 정보는 각 플러그인 홈페이지에서 확인 -- nmap setting 자주 사용하는 단축키 재지정 함수 정의 function nmap(short, command) vim.api.nvim_set_keymap(\u0026#39;n\u0026#39;, short, command, {noremap = true, silent = true}) end -- gruvbox colorscheme - https://github.com/ellisonleao/gruvbox.nvim vim.o.background = \u0026#39;dark\u0026#39; vim.cmd(\u0026#39;colorscheme gruvbox\u0026#39;) -- nvim-tree - https://github.com/kyazdani42/nvim-tree.lua require\u0026#39;nvim-tree\u0026#39;.setup() nmap(\u0026#39;\u0026lt;F2\u0026gt;\u0026#39;,\u0026#39;:NvimTreeToggle\u0026lt;CR\u0026gt;\u0026#39;) -- luatab.nvim - https://github.com/alvarosevilla95/luatab.nvim require(\u0026#34;luatab\u0026#34;).setup() nmap(\u0026#39;\u0026lt;\u0026#39;,\u0026#39;:tabp\u0026lt;CR\u0026gt;\u0026#39;) nmap(\u0026#39;\u0026gt;\u0026#39;,\u0026#39;:tabn\u0026lt;CR\u0026gt;\u0026#39;) nmap(\u0026#39;N\u0026#39;,\u0026#39;:tabnew\u0026lt;CR\u0026gt;\u0026#39;) -- lualine.vim - https://github.com/nvim-lualine/lualine.nvim local custom_gruvbox = require\u0026#39;lualine.themes.gruvbox\u0026#39; -- Change the background of lualine_c section for normal mode custom_gruvbox.normal.c.bg = \u0026#39;#112233\u0026#39; require(\u0026#39;lualine\u0026#39;).setup { options = { theme = custom_gruvbox }, ... } -- alpha-nvim stater --require\u0026#39;alpha\u0026#39;.setup(require\u0026#39;alpha.themes.dashboard\u0026#39;.config) nmap(\u0026#39;\u0026lt;F12\u0026gt;\u0026#39;,\u0026#39;:Alpha\u0026lt;CR\u0026gt;\u0026#39;) require\u0026#39;alpha\u0026#39;.setup(require\u0026#39;alpha.themes.startify\u0026#39;.config) 설정 재인식 :luafile % lua 사용팁 정리 명령라인에서 - executes a single code :help :lua :help :lua-heredoc :lua local foo = 1 :lua print(foo) --\u0026gt; nil 출력 :lua requre(\u0026#39;myluamodule\u0026#39;) :lua \u0026lt;\u0026lt;EOF local foo = 1 print(foo) --\u0026gt; 1 출력 EOF - executes a chunk of Lua code :help :luado :luado return \u0026#39;hello world\u0026#39; :luado if linenr % 2 == 0 then return line:upper() end - sourcing lua files :luafile ~/foo/bar/myluafile.lua :luafile % :source {luafile|%} :runtime {luafile|%} vim name space\nvim.api vim.o or vim.opt vim.bo vim.go vim.cmd - command-mode의 모든 명령을 복수로 실행할 수 있다. vim.inspect vim.loop vim.lsp vim.regex vim.treesitter vim.ui vim.wo Using meta-accessors\nvim.g - global variables vim.b - buffer variables vim.w - window variables vim.t - tabpage variables vim.v - predefined Vim variables vim.env - environment variables 미해결 과제들 vim.cmd를 이용하여 abbr 명령을 쓰고 있는데 lua로 보다 우아하게 사용할 방법 모색. vimwiki의 자동저장 vimwiki_autorewrite가 nvim에서는 적용되지 않고 마지막에 \u0026lsquo;q\u0026rsquo;로 빠져 나올 때에 버퍼가 저장된다. dev 버전 재설치, 설정 변경 등의 시도를 해 보았으나 여전히 문제. 그렇다고 nvim의 autorewrite를 적용하면 해결되지만 모든 버퍼에 대해 자동 저장을 하므로 이는 내가 원치 않는 것이다. 키매핑을 할 때 플러그인 들에 대한 숙지가 되어 있지 않아 충돌 문제가 발생한다. 조금씩 공부해서 이 문제를 해결하자. 참고 사항 이렇게 기본적인 사항을 알아보았다. 물론 init.lua에 모두 넣어도 상관없다. 다만 Packer설정은 return문이므로 다른 설정이 그 아래로 들어가면 안된다. lua를 사용하면 더욱 더 nvim이 강력해지고 빨라진다. 자신의 모듈이나 환경설정을 보다 다양하고 정교하게 할 수 있다. 이제는 여러 플러그인을 자신의 목적에 맞게 추가하고 적용하는 일만 남았다. 각 플러그인에 관한 것은 하나씩 문서로 올릴 예정. 다음의 훌륭한 링크들을 참조한다. Links Getting started using Lua in Neovim - 다소 내용이 많은 입문서 https://github.com/nanotee/nvim-lua-guide Everything you need to know to configure neovim using lua https://dev.to/vonheikemen/everything-you-need-to-know-to-configure-neovim-using-lua-3h58 From init.vim to init.lua - a crash course - 실사용례, 핵심만 전달 https://www.notonlycode.org/neovim-lua-config/ Packer 홈 - 플러그인 메니저 https://github.com/wbthomason/packer.nvim Top Neovim plugins for developers in 2022 https://hannadrehman.com/top-neovim-plugins-for-developers-in-2022 ","permalink":"https://neosolaris.github.io/posts/nvim-lua/","summary":"\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2023-08-08: 플러그인 수동 설정 추가, 오타 수정\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-09-06: lua의 기본 설정법 및 패키지 설치 설정 정리\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"소개\"\u003e소개\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003envim은 vim과 다르게 \u003ca href=\"../luajit\"\u003eluajit\u003c/a\u003e 이 기본 탑재되어 있다.\u003c/li\u003e\n\u003cli\u003e이는 vim의 거의 모든 기능을 \u003ca href=\"../lua\"\u003elua\u003c/a\u003e로 제어할 수 있다는 뜻이다.\u003c/li\u003e\n\u003cli\u003e또한 자신의 코드 또는 모듈들을 쉽게 이식하고 확장할 수 있다.\u003c/li\u003e\n\u003cli\u003e이 글의 목표는 기존 \u003ccode\u003e~/.config/nvim/init.vim\u003c/code\u003e의 설정을 모두 \u003ccode\u003einit.lua\u003c/code\u003e로 대체하고 확장하는 데 있다.\u003c/li\u003e\n\u003cli\u003eNVIM v0.7.2/ Build type: Release/ LuaJIT 2.1.0-beta3\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"why-lua-51-instead-of-lua-53\"\u003eWhy Lua 5.1 instead of Lua 5.3+?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e아래는 nvim 공식 FAQ 내용이다.\u003c/p\u003e","title":"Getting started using Lua in Neovim"},{"content":"Basic lua intro - lua소개: 왜 lua인가 lua install - lua 설치하기, hello world lua interactive - 루아 인터엑티브 lua quick quide - lua 기본 문법 가이드 Lua Modules luarocks - lua 확장 모듈 패키지 관리 luastatic - lua 컴파일 단독 실행파일 만들기 lua-csv - lua csv 모듈 lua-json - lua json 모듈 LuaJit luaJit - LuaJit, Just in Time Compiler luajit lfs-ffi - LuaJit lua file system 모듈 luafun - LuaJit Functions Module (확장모듈) Graphic \u0026amp; Game lua love - lua love 2D 게임 만들기 gimp-glua - gimp의 이미지 프로세싱 플러그인 IoT nodemcu - Lua base firmware esp32, esp8266 Science \u0026amp; Math gsl shell - Luajit GNU Scientific Library Shell WWW openresty - 웹개발 인터페이스: luajit + nginx luakit - A fast, extensible, and customizable web browser 응용 lua pi - Raspberry Pi에서 Lua 개발 및 설치 환경 만들기 nvim lua - nvim을 lua로 설정 및 관리하기 alpine lua language server - Lua Language Server Install Links Lua Sample Code https://lua-users.org/wiki/SampleCode Awesome Luahttps://github.com/LewisJEllis/awesome-lua Awesome Restyhttps://github.com/LewisJEllis/awesome-lua ","permalink":"https://neosolaris.github.io/posts/lua/","summary":"\u003ch2 id=\"basic\"\u003eBasic\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../lua-intro\"\u003elua intro\u003c/a\u003e - lua소개: 왜 lua인가\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../lua-install\"\u003elua install\u003c/a\u003e - lua 설치하기, hello world\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../lua-interactive\"\u003elua interactive\u003c/a\u003e - 루아 인터엑티브\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../lua-quick-quide\"\u003elua quick quide\u003c/a\u003e - lua 기본 문법 가이드\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"lua-modules\"\u003eLua Modules\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../luarocks\"\u003eluarocks\u003c/a\u003e - lua 확장 모듈 패키지 관리\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../luastatic\"\u003eluastatic\u003c/a\u003e - lua 컴파일 단독 실행파일 만들기\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../lua-csv\"\u003elua-csv\u003c/a\u003e - lua csv 모듈\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../lua-json\"\u003elua-json\u003c/a\u003e - lua json 모듈\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"luajit\"\u003eLuaJit\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../luajit\"\u003eluaJit\u003c/a\u003e - LuaJit, Just in Time Compiler\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../lfs-ffi\"\u003eluajit lfs-ffi\u003c/a\u003e - LuaJit lua file system 모듈\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../luafun\"\u003eluafun\u003c/a\u003e - LuaJit Functions Module (확장모듈)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"graphic--game\"\u003eGraphic \u0026amp; Game\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../lua-love\"\u003elua love\u003c/a\u003e - lua love 2D 게임 만들기\u003c/li\u003e\n\u003cli\u003egimp-glua - gimp의 이미지 프로세싱 플러그인\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"iot\"\u003eIoT\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../nodemcu\"\u003enodemcu\u003c/a\u003e - Lua base firmware esp32, esp8266\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"science--math\"\u003eScience \u0026amp; Math\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../gsl-shell\"\u003egsl shell\u003c/a\u003e - Luajit GNU Scientific Library Shell\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"www\"\u003eWWW\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../openresty\"\u003eopenresty\u003c/a\u003e - 웹개발 인터페이스: luajit + nginx\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../luakit\"\u003eluakit\u003c/a\u003e - A fast, extensible, and customizable web browser\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"응용\"\u003e응용\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../lua-pi\"\u003elua pi\u003c/a\u003e - Raspberry Pi에서 Lua 개발 및 설치 환경 만들기\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../nvim-lua\"\u003envim lua\u003c/a\u003e - nvim을 lua로 설정 및 관리하기\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../alpine-lua-language-server\"\u003ealpine lua language server\u003c/a\u003e - Lua Language Server Install\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLua Sample Code \u003ca href=\"https://lua-users.org/wiki/SampleCode\"\u003ehttps://lua-users.org/wiki/SampleCode\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAwesome Lua\u003ca href=\"https://github.com/LewisJEllis/awesome-lua\"\u003ehttps://github.com/LewisJEllis/awesome-lua\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAwesome Resty\u003ca href=\"https://github.com/LewisJEllis/awesome-lua\"\u003ehttps://github.com/LewisJEllis/awesome-lua\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"lua"},{"content":" 다음 링크 참조 https://www.linuxfordevices.com/tutorials/linux/fancify-bash-terminal-with-bash-it ","permalink":"https://neosolaris.github.io/posts/bash-it/","summary":"\u003cul\u003e\n\u003cli\u003e다음 링크 참조\n\u003ca href=\"https://www.linuxfordevices.com/tutorials/linux/fancify-bash-terminal-with-bash-it\"\u003ehttps://www.linuxfordevices.com/tutorials/linux/fancify-bash-terminal-with-bash-it\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"bash-it"},{"content":" Tools, Functions\nbash it : zsh처럼 이쁘게, 다양한 기능으로 꾸미기 bash color : 터미널 컬러 출력 및 제어 Bash Programming\nbash read lines : 파일에서 한 줄씩 라인을 읽어 오기 Links bash config files https://floatingoctothorpe.uk/2018/bash-config-and-where-it-lives.html ","permalink":"https://neosolaris.github.io/posts/bash/","summary":"\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eTools, Functions\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../bash-it\"\u003ebash it\u003c/a\u003e : zsh처럼 이쁘게, 다양한 기능으로 꾸미기\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../bash-color\"\u003ebash color\u003c/a\u003e : 터미널 컬러 출력 및 제어\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eBash Programming\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../bash-read-lines\"\u003ebash read lines\u003c/a\u003e : 파일에서 한 줄씩 라인을 읽어 오기\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ebash config files \u003ca href=\"https://floatingoctothorpe.uk/2018/bash-config-and-where-it-lives.html\"\u003ehttps://floatingoctothorpe.uk/2018/bash-config-and-where-it-lives.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Bash"},{"content":"Method 1 for read -r line do echo $line\tdone \u0026lt; input_file.txt \u0026gt; out_file.txt Method 1 file=$(cat input_file.txt) for line in $file do echo $line\tdone \u0026lt; input_file.txt \u0026gt; out_file.txt Links https://www.geeksforgeeks.org/bash-scripting-how-to-read-a-file-line-by-line/\n","permalink":"https://neosolaris.github.io/posts/bash-read-lines/","summary":"\u003ch2 id=\"method-1\"\u003eMethod 1\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003eread\u003c/span\u003e -r line \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\t\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edone\u003c/span\u003e \u0026lt; input_file.txt \u0026gt; out_file.txt\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"method-1-1\"\u003eMethod 1\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003efile\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003ecat input_file.txt\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e line in  \u003cspan class=\"nv\"\u003e$file\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\t\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edone\u003c/span\u003e \u0026lt; input_file.txt \u0026gt; out_file.txt\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.geeksforgeeks.org/bash-scripting-how-to-read-a-file-line-by-line/\"\u003ehttps://www.geeksforgeeks.org/bash-scripting-how-to-read-a-file-line-by-line/\u003c/a\u003e\u003c/p\u003e","title":"Bash readlines how to"},{"content":"소개 vim이 터미널에서 동작하므로 아이콘을 표시하기가 좋지 않다. 색깔과 모양을 미려하게 바꾸어 준다. 개인적인 관점에서 보면 상당히 매력적이다. 삭막한 검은 배경에 글씨만 보이다가 꽃이 피고 그림이 여기 저기 있는 느낌이다. 거기에다 아름다우면서도 절제된 것이 작업 집중력을 결코 떨어 뜨리는 것도 아니다. 적극 추천한다.\nhttps://github.com/ryanoasis/vim-devicons 이 곳에 가면 샘플 사진과 설치법이 자세히 나와있다. 적용되는 플러그인: NERDTree,vim airline, CtrlP, powerline, denite, unite, lightline.vim, vim startify, vimfiler, vim-buffet and flagship. 물론 폰트를 설치하면 zsh, bash 등에서도 프롬프트 표시를 지원한다. 폰트 설치 vim-devicons를 설치하기 전에 먼저 Nerd Patched 폰트를 설치해야 한다. 폰트는 다양한데 모두 설치한다면 많은 용량을 차지하므로 여기에서는 Noto Nerd Font 폰트만 설치했다. 참고로 폰트를 받을 수 있는 사이트이다. nerd-fonts 깃허브 사이트와 설치 안내도 있다. https://github.com/ryanoasis/nerd-fonts 모두 설치하면 용량이 약 1.2GB로 매우 크므로 다음 스크립트에서 Noto와 Hack만 설치한다. 실행하면 ~/.local/share/fonts에 설치된다. 설치 후 자신이 사용하는 터미널설정에서 폰트를 Noto Nerd font로 설정해주면 준비가 완료된다. #!/bin/bash declare -a fonts=( BitstreamVeraSansMono CodeNewRoman DroidSansMono FiraCode FiraMono Go-Mono Hack Hermit JetBrainsMono Meslo Noto Overpass ProggyClean RobotoMono SourceCodePro SpaceMono Ubuntu UbuntuMono ) version=\u0026#39;2.1.0\u0026#39; fonts_dir=\u0026#34;${HOME}/.local/share/fonts\u0026#34; if [[ ! -d \u0026#34;$fonts_dir\u0026#34; ]]; then mkdir -p \u0026#34;$fonts_dir\u0026#34; fi for font in \u0026#34;${fonts[@]}\u0026#34;; do zip_file=\u0026#34;${font}.zip\u0026#34; download_url=\u0026#34;https://github.com/ryanoasis/nerd-fonts/releases/download/v${version}/${zip_file}\u0026#34; echo \u0026#34;Downloading $download_url\u0026#34; wget \u0026#34;$download_url\u0026#34; unzip \u0026#34;$zip_file\u0026#34; -d \u0026#34;$fonts_dir\u0026#34; rm \u0026#34;$zip_file\u0026#34; done find \u0026#34;$fonts_dir\u0026#34; -name \u0026#39;*Windows Compatible*\u0026#39; -delete fc-cache -fv 설치 및 설정 ~/.vimrc 또는 ~/.config/nvim/init.vim 설정 Plug \u0026#39;ryanoasis/vim-devicons\u0026#39; ... set encoding=UTF-8 설치 nvim +plugInstall +qall 터미널 설정에서 폰트를 Noto Nerd Font를 설정해 주고 vim 또는 nvim 을 사용하면 된다. Links https://github.com/ryanoasis/vim-devicons https://www.nerdfonts.com/font-downloads https://github.com/ryanoasis/nerd-fonts ","permalink":"https://neosolaris.github.io/posts/vim-devicons/","summary":"\u003ch2 id=\"소개\"\u003e소개\u003c/h2\u003e\n\u003cp\u003evim이 터미널에서 동작하므로 아이콘을 표시하기가 좋지 않다. 색깔과 모양을 미려하게 바꾸어 준다. 개인적인 관점에서 보면 상당히 매력적이다. 삭막한 검은 배경에 글씨만 보이다가 꽃이 피고 그림이 여기 저기 있는 느낌이다. 거기에다 아름다우면서도 절제된 것이 작업 집중력을 결코 떨어 뜨리는 것도 아니다. 적극 추천한다.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ryanoasis/vim-devicons\"\u003ehttps://github.com/ryanoasis/vim-devicons\u003c/a\u003e 이 곳에 가면 샘플 사진과 설치법이 자세히 나와있다.\u003c/li\u003e\n\u003cli\u003e적용되는 플러그인: \u003ca href=\"../NERDTree\"\u003eNERDTree\u003c/a\u003e,\u003ca href=\"../vim-airline\"\u003evim airline\u003c/a\u003e, CtrlP, powerline, denite, unite, lightline.vim, \u003ca href=\"../startify\"\u003evim startify\u003c/a\u003e, vimfiler, vim-buffet and flagship.\u003c/li\u003e\n\u003cli\u003e물론 폰트를 설치하면 zsh, bash 등에서도 프롬프트 표시를 지원한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"폰트-설치\"\u003e폰트 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003evim-devicons를 설치하기 전에 먼저 Nerd Patched 폰트를 설치해야 한다.\u003c/li\u003e\n\u003cli\u003e폰트는 다양한데 모두 설치한다면 많은 용량을 차지하므로 여기에서는 \u003ccode\u003eNoto Nerd Font\u003c/code\u003e 폰트만 설치했다.\u003c/li\u003e\n\u003cli\u003e참고로 폰트를 받을 수 있는 사이트이다. \u003ca href=\"../https://www.nerdfonts.com/font-downloads\"\u003enerd-fonts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e깃허브 사이트와 설치 안내도 있다. \u003ca href=\"https://github.com/ryanoasis/nerd-fonts\"\u003ehttps://github.com/ryanoasis/nerd-fonts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e모두 설치하면 용량이 약 1.2GB로 매우 크므로 다음 스크립트에서 Noto와 Hack만 설치한다.\u003c/li\u003e\n\u003cli\u003e실행하면 \u003ccode\u003e~/.local/share/fonts\u003c/code\u003e에 설치된다.\u003c/li\u003e\n\u003cli\u003e설치 후 자신이 사용하는 터미널설정에서 폰트를 \u003ccode\u003eNoto Nerd font\u003c/code\u003e로 설정해주면 준비가 완료된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e#!/bin/bash\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003edeclare\u003c/span\u003e -a \u003cspan class=\"nv\"\u003efonts\u003c/span\u003e\u003cspan class=\"o\"\u003e=(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    BitstreamVeraSansMono\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    CodeNewRoman\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    DroidSansMono\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    FiraCode\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    FiraMono\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    Go-Mono\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    Hack\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    Hermit\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    JetBrainsMono\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    Meslo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    Noto\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    Overpass\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    ProggyClean\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    RobotoMono\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    SourceCodePro\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    SpaceMono\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    Ubuntu\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    UbuntuMono\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eversion\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;2.1.0\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003efonts_dir\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/.local/share/fonts\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e[[\u003c/span\u003e ! -d \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$fonts_dir\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e]]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    mkdir -p \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$fonts_dir\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e font in \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003efonts\u003c/span\u003e\u003cspan class=\"p\"\u003e[@]\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003ezip_file\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003efont\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e.zip\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003edownload_url\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://github.com/ryanoasis/nerd-fonts/releases/download/v\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eversion\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ezip_file\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Downloading \u003c/span\u003e\u003cspan class=\"nv\"\u003e$download_url\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    wget \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$download_url\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    unzip \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$zip_file\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e -d \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$fonts_dir\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    rm \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$zip_file\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003edone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efind \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$fonts_dir\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e -name \u003cspan class=\"s1\"\u003e\u0026#39;*Windows Compatible*\u0026#39;\u003c/span\u003e -delete\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efc-cache -fv\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"설치-및-설정\"\u003e설치 및 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e~/.vimrc\u003c/code\u003e 또는 \u003ccode\u003e~/.config/nvim/init.vim\u003c/code\u003e 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-vimrc\" data-lang=\"vimrc\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ePlug\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;ryanoasis/vim-devicons\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eset\u003c/span\u003e \u003cspan class=\"nx\"\u003eencoding\u003c/span\u003e\u003cspan class=\"p\"\u003e=\u003c/span\u003e\u003cspan class=\"nx\"\u003eUTF\u003c/span\u003e\u003cspan class=\"m\"\u003e-8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003envim +plugInstall  +qall\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e터미널 설정에서 폰트를 \u003ccode\u003eNoto Nerd Font\u003c/code\u003e를 설정해 주고 \u003ca href=\"../vim\"\u003evim\u003c/a\u003e 또는 \u003ca href=\"../nvim\"\u003envim\u003c/a\u003e 을 사용하면 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ryanoasis/vim-devicons\"\u003ehttps://github.com/ryanoasis/vim-devicons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.nerdfonts.com/font-downloads\"\u003ehttps://www.nerdfonts.com/font-downloads\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/ryanoasis/nerd-fonts\"\u003ehttps://github.com/ryanoasis/nerd-fonts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"vim-devicons"},{"content":" 2022.09.09 - tips 추가 소개 The NERDTree is a file system explorer for the Vim editor.\nvim 환경에서 사용할 수 있는 파일 시스템 탐색기이다.\n설치 ~/.vimrc 또는 ~/.config/nvim/init.vim 설정 Plug \u0026#39;scrooloose/nerdtree\u0026#39; vim vim +PlugInstall +qall nvim nvim +PlugInstall +qall 설정 및 기능 F8키로 열기/닫기 \u0026#34; nerdtree nnoremap \u0026lt;F8\u0026gt; :NERDTreeToggle\u0026lt;CR\u0026gt; \u0026#34;화면에 띄우기: F8키 let g:NERDTreeWinPos = \u0026#34;right\u0026#34; \u0026#34;화면 오른쪽에 띄우기 autocmd BufEnter * lcd %:p:h autocmd VimEnter * if !argc() | NERDTree | endif \u0026#34;vim 단독 실행시 실행시키기 h``j``k``l - 이동 enter - 폴더열기, 파일열기 q - 나가기 h - 도움말 c - 선택된 디렉토리를 root로 만들기 m - 메뉴 I - 숨은파일(hidden file/dir) 보이기 Tips shift + i - show hidden dir and files / - Search directories and files form cusor s - open file to split vertically\nLinks https://github.com/preservim/nerdtree ","permalink":"https://neosolaris.github.io/posts/nerdtree/","summary":"\u003cul\u003e\n\u003cli\u003e2022.09.09 - tips 추가\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"소개\"\u003e소개\u003c/h2\u003e\n\u003cp\u003eThe NERDTree is a file system explorer for the Vim editor.\u003c/p\u003e\n\u003cp\u003evim 환경에서 사용할 수 있는 파일 시스템 탐색기이다.\u003c/p\u003e\n\u003ch2 id=\"설치\"\u003e설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e~/.vimrc\u003c/code\u003e 또는 \u003ccode\u003e~/.config/nvim/init.vim\u003c/code\u003e 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-vimrc\" data-lang=\"vimrc\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ePlug\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;scrooloose/nerdtree\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003evim\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003evim +PlugInstall +qall\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003envim\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003envim +PlugInstall +qall\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"설정-및-기능\"\u003e설정 및 기능\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eF8\u003c/code\u003e키로 열기/닫기\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-vimrc\" data-lang=\"vimrc\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026#34; nerdtree\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ennoremap\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eF8\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e :\u003cspan class=\"nx\"\u003eNERDTreeToggle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eCR\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e      \u003cspan class=\"c\"\u003e\u0026#34;화면에 띄우기: F8키\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eg\u003c/span\u003e:\u003cspan class=\"nx\"\u003eNERDTreeWinPos\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;right\u0026#34;\u003c/span\u003e         \u003cspan class=\"c\"\u003e\u0026#34;화면 오른쪽에 띄우기\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eautocmd\u003c/span\u003e \u003cspan class=\"nx\"\u003eBufEnter\u003c/span\u003e * \u003cspan class=\"nx\"\u003elcd\u003c/span\u003e %:\u003cspan class=\"nx\"\u003ep\u003c/span\u003e:\u003cspan class=\"nx\"\u003eh\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eautocmd\u003c/span\u003e \u003cspan class=\"nx\"\u003eVimEnter\u003c/span\u003e * \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"nx\"\u003eargc\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"nx\"\u003eNERDTree\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"k\"\u003eendif\u003c/span\u003e \u003cspan class=\"c\"\u003e\u0026#34;vim 단독 실행시 실행시키기\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eh``j``k``l\u003c/code\u003e - 이동\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eenter\u003c/code\u003e - 폴더열기, 파일열기\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eq\u003c/code\u003e - 나가기\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eh\u003c/code\u003e - 도움말\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ec\u003c/code\u003e - 선택된 디렉토리를 root로 만들기\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003em\u003c/code\u003e - 메뉴\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eI\u003c/code\u003e - 숨은파일(hidden file/dir) 보이기\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips\"\u003eTips\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eshift + i\u003c/code\u003e - show hidden dir and files\n\u003ccode\u003e/\u003c/code\u003e - Search directories and files form cusor\n\u003ccode\u003es\u003c/code\u003e - open file to split vertically\u003c/p\u003e","title":"NerdTree"},{"content":" Start\nnvim install - nvim 최신버전 설치 nvim features - nvim 기본 제공 기능들 nvim lua - nvim에 기본 내장된 luaJIT 활용과 설정하기 astronvim - 빠른 시작, nvim에 플러그인과 설정을 추가하여 IDE환경 제공 Plugins - Common\npacker.nvim \u0026ndash; 플러그인 패키지 관리 gruvbox.nvim \u0026ndash; colorscheme alpha-nvim\u0026rsquo; \u0026ndash; 시작화면 (startify 대체) nvim-web-devicons \u0026ndash; 파일이나 폴더를 이쁘게 표시해주는 플러그인 nvim-tree - lua로 만든 파일 탐색기: NerdTree 대체 luatab.nvim - tab 표시 및 관리 (tabline 대체) lualine.nvim - 하단부 라인 표시(airline, powerline 대체) Comment nvim - 프로그래밍 언어별 주석 처리 Plugins - Development 개발환경 구성\nnvim-lsp - 각종 언어를 위한 lsp Language Server Protocol 지원 c, rust, \u0026hellip; nvim-cmp - 자동완성 neodev.nvim - lua 개발 환경 지원 자동완성, 함수 보여주기 등 ","permalink":"https://neosolaris.github.io/posts/nvim/","summary":"\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eStart\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../nvim-install\"\u003envim install\u003c/a\u003e - nvim 최신버전 설치\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../nvim-features\"\u003envim features\u003c/a\u003e - nvim 기본 제공 기능들\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../nvim-lua\"\u003envim lua\u003c/a\u003e - nvim에 기본 내장된 luaJIT 활용과 설정하기\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../astronvim\"\u003eastronvim\u003c/a\u003e - 빠른 시작, nvim에 플러그인과 설정을 추가하여 IDE환경 제공\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePlugins - Common\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003epacker.nvim \u0026ndash; 플러그인 패키지 관리\u003c/li\u003e\n\u003cli\u003egruvbox.nvim \u0026ndash; colorscheme\u003c/li\u003e\n\u003cli\u003ealpha-nvim\u0026rsquo; \u0026ndash; 시작화면 (startify 대체)\u003c/li\u003e\n\u003cli\u003envim-web-devicons \u0026ndash; 파일이나 폴더를 이쁘게 표시해주는 플러그인\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../nvim-tree\"\u003envim-tree\u003c/a\u003e - lua로 만든 파일 탐색기: NerdTree 대체\u003c/li\u003e\n\u003cli\u003eluatab.nvim - tab 표시 및 관리 (tabline 대체)\u003c/li\u003e\n\u003cli\u003elualine.nvim - 하단부 라인 표시(airline, powerline 대체)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../Comment.nvim\"\u003eComment nvim\u003c/a\u003e - 프로그래밍 언어별 주석 처리\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePlugins - Development 개발환경 구성\u003c/p\u003e","title":"Nvim neovim"},{"content":"TODO 아이콘 표시 및 구조 파악해서 이를 적용하기 2022-09-08 - 내용 수정, 그림파일 링크 관련 추가 PaperMod screen shot Intro hugo의 테마 중에 가장 간결하고 안정적이며 많은 사람들이 사용하고 있다. hugo 프로젝트는 ~/www로 가정한다. 주의할 것은 hugo의 구조가 ~/www/contents/이하에 markdown 파일을 넣어주어야 하고, 이하 폴더는 적절히 만들되 index.md파일은 만들면 웹페이지 메인 화면에 내용이 뜨질 않는다는 점이다. 설정은 ~/www/config.yml이다. 설정을 변경하면 hugo -D server 동작시 자동으로 반영된다. 만약 설정 변경 사항이 브라우저에서 보이지 않으면 서버를 재실행 한다. Install and Update Install $ cd ~/www $ git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 Update $ cd themes/PaperMod $ git pull Setup 관련 링크 아래 사이트에 config.yml 및 post.md 샘플이 있으니 참고한다. https://adityatelange.github.io/hugo-PaperMod/posts/papermod/papermod-installation/ 테마 설정 papermod 의 테마는 light/dark/auto 가 있다. 홈화면 좌측 상단에 해/달 아이콘 클릭 baseURL: \u0026#34;https://your_idname.github.io/\u0026#34; # 자신의 깃페이지 URL title: My Blog and wiki # 블로그홈 제목 paginate: 5 # 홈에서 보여줄 블로그 표시 갯수 theme: \u0026#34;PaperMod\u0026#34; # 테마 PaperMod로 지정 params: # defaultTheme: light # defaultTheme: light defaultTheme: auto # auto로 설정하면 사용자가 바꿀 수 있다. # disableThemeToggle: true # 해/달 아이콘을 보이지 않게 하기 메뉴설정 홈 우측 상단 메뉴를 다음과 같이 추가한다. menu: main: - identifier: categories # 블로그 카테고리 메뉴 name: categories url: /categories/ weight: 10 - identifier: search # 블로그 검색 메뉴 name: Search url: /search weight: 30 - identifier: tags # 블로그 태그 메뉴 name: tags url: /tags/ weight: 20 - identifier: archives # 블로그 태그 메뉴 name: tags url: /tags/ weight: 20 Archive Page - 아카이브 페이지, 날짜별로 올린 포스트문서가 정리됨 $ cat \u0026lt;\u0026lt; EOF \u0026gt; ~/www/content/archives.md --- title: \u0026#34;Archive\u0026#34; layout: \u0026#34;archives\u0026#34; # url: \u0026#34;/archives\u0026#34; summary: \u0026#34;archives\u0026#34; --- EOF Search Page - 검색페이지, 퍼지 스타일의 빠른 검색 $ cat \u0026lt;\u0026lt; EOF \u0026gt; ~/www/content/search.md --- title: \u0026#34;Search\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # is necessary # url: \u0026#34;/archive\u0026#34; # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; placeholder: \u0026#34;검색어를 입력하세요\u0026#34; --- EOF tags와 categories는 올릴 포스트문서 post.md 등의 frontmatter에 기록하면 자동으로 분류되고 홈 상단 메뉴에서 볼 수 있다. Post Cover Image ~/www/config.yml에 설정해주고 아래 설명대로 포스트문서에 링크를 걸어주면 된다. cover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # can also paste direct link from external site # ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.png alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; relative: false # To use relative path for cover image, used in hugo Page-bundles 이미지 사이즈를 줄이고 처리속도를 높이려면 아래 설정 추가 params: cover: responsiveImages: false 그러나 실제로 적용해도 페이지는 변화하지 않는다.\n다음 방법으로 해결하였는데 위 방법이 해결되면 다시 정리 예정.\n그리고 자신의 github에서 wiki를 클릭하여 이미지를 넣어 링크를 받아오는 방법이 있는데 이는 너무 번거롭고 링크주소가 복잡하여 하지 않았다.\n현재 해결된 방법은 다음과 같다.\n$ mkdir ~/www/contents/images # hugo 프로젝트 폴더의 contents/images 생성 $ cp myimage.png ~/www/contents/images/ # 내 그림파일 복사 $ vim ~/www/contents/wiki/my-new-post.md # 새로운 포스트 작성 ... ![Post Image](../../images/myimage.png) ... $ hugo -D server # 브라우저에서 이미지 로딩 확인 아직 홈페이지 화면 이미지는 복잡한 구조를 이해하지 못해 올리지 못하고 있다. Show TOC (Table of Contents) 모든 블로그에 목차를 보이게 하려면 아래 설정 추가 ShowToc: true TocOpen: true 각 페이지에 선택적으로 목차를 만들 경우에는 해당 페이지에 설정한다. --- 생략... ShowToc: true TocOpen: true --- Tips lastmod 를 사용하여 문서의 최종 업데이트 날짜를 블로그에 표시하기 $ mkdir -p ~/www/layouts/partials $ cat \u0026lt;\u0026lt;EOF \u0026gt; ~/www/layouts/partials/post_meta.html {{ $date := .Date.Format \u0026#34;02.01.2006\u0026#34; }} {{ $lastmod := .Lastmod.Format \u0026#34;02.01.2006\u0026#34; }} {{- $scratch := newScratch }} {{- if not .Date.IsZero -}} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice (printf \u0026#34;\u0026lt;span title=\u0026#39;%s\u0026#39;\u0026gt;%s\u0026lt;/span\u0026gt;\u0026#34; (.Date) (.Date | time.Format (default \u0026#34;January 2, 2006\u0026#34; site.Params.DateFormat)))) }} {{- end }} {{- if ne $lastmod $date -}} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice (printf \u0026#34;\u0026lt;span title=\u0026#39;%s\u0026#39;\u0026gt;(updated %s)\u0026lt;/span\u0026gt;\u0026#34; (.Lastmod) (.Lastmod | time.Format (default \u0026#34;January 2, 2006\u0026#34; site.Params.DateFormat)))) }} {{- end }} {{- if (.Param \u0026#34;ShowReadingTime\u0026#34;) -}} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice (i18n \u0026#34;read_time\u0026#34; .ReadingTime | default (printf \u0026#34;%d min\u0026#34; .ReadingTime))) }} {{- end }} {{- if (.Param \u0026#34;ShowWordCount\u0026#34;) -}} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice (i18n \u0026#34;words\u0026#34; .WordCount | default (printf \u0026#34;%d words\u0026#34; .WordCount))) }} {{- end }} {{- with (partial \u0026#34;author.html\u0026#34; .) }} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice .) }} {{- end }} {{- with ($scratch.Get \u0026#34;meta\u0026#34;) }} {{- delimit . \u0026#34;\u0026amp;nbsp;·\u0026amp;nbsp;\u0026#34; -}} {{- end -}} EOF $ vim ~/www/contents/mypost.md # 내 문서의 frontmatter에 lastmod 추가 --- ... lastmod: 2022-09-08T17:49:01+09:00 --- $ hugo -D server # 브라우저에서 확인 vimwiki의 index.md 처리: blog.lua에서 자동으로 처리 $ cd ~/data/www/contents/wiki/ $ mv index.md wiki-index.md Links https://themes.gohugo.io/themes/hugo-papermod/ https://github.com/adityatelange/hugo-PaperMod https://github.com/adityatelange/hugo-PaperMod/wiki/Installation https://github.com/adityatelange/hugo-PaperMod/wiki/Features https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs ","permalink":"https://neosolaris.github.io/posts/hugo-papermod/","summary":"\u003ch2 id=\"todo\"\u003eTODO\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e 아이콘 표시 및 구조 파악해서 이를 적용하기\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-09-08 - 내용 수정, 그림파일 링크 관련 추가\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"https://user-images.githubusercontent.com/21258296/114303440-bfc0ae80-9aeb-11eb-8cfa-48a4bb385a6d.png\"/\u003e \u003cfigcaption\u003e\n            PaperMod screen shot\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ehugo의 테마 중에 가장 간결하고 안정적이며 많은 사람들이 사용하고 있다.\u003c/li\u003e\n\u003cli\u003ehugo 프로젝트는 \u003ccode\u003e~/www\u003c/code\u003e로 가정한다.\u003c/li\u003e\n\u003cli\u003e주의할 것은 hugo의 구조가 \u003ccode\u003e~/www/contents/\u003c/code\u003e이하에 markdown 파일을 넣어주어야 하고, 이하 폴더는 적절히 만들되 \u003ccode\u003eindex.md\u003c/code\u003e파일은 만들면 웹페이지 메인 화면에 내용이 뜨질 않는다는 점이다.\u003c/li\u003e\n\u003cli\u003e설정은 \u003ccode\u003e~/www/config.yml\u003c/code\u003e이다.\u003c/li\u003e\n\u003cli\u003e설정을 변경하면 \u003ccode\u003ehugo -D server\u003c/code\u003e 동작시 자동으로 반영된다.\u003c/li\u003e\n\u003cli\u003e만약 설정 변경 사항이 브라우저에서 보이지 않으면 서버를 재실행 한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install-and-update\"\u003eInstall and Update\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eInstall\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ~/www\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eUpdate\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e themes/PaperMod\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git pull\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"setup-관련-링크\"\u003eSetup 관련 링크\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래 사이트에 \u003ccode\u003econfig.yml\u003c/code\u003e 및 \u003ccode\u003epost.md\u003c/code\u003e 샘플이 있으니 참고한다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://adityatelange.github.io/hugo-PaperMod/posts/papermod/papermod-installation/\"\u003ehttps://adityatelange.github.io/hugo-PaperMod/posts/papermod/papermod-installation/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"테마-설정\"\u003e테마 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003epapermod 의 테마는 light/dark/auto 가 있다.\u003c/li\u003e\n\u003cli\u003e홈화면 좌측 상단에 해/달 아이콘 클릭\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ebaseURL\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://your_idname.github.io/\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 자신의 깃페이지 URL\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eMy Blog and wiki\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그홈 제목\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003epaginate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5\u003c/span\u003e\u003cspan class=\"w\"\u003e             \u003c/span\u003e\u003cspan class=\"c\"\u003e# 홈에서 보여줄 블로그 표시 갯수\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003etheme\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;PaperMod\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"c\"\u003e# 테마 PaperMod로 지정\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c\"\u003e# defaultTheme: light\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c\"\u003e# defaultTheme: light\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultTheme\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eauto   \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# auto로 설정하면 사용자가 바꿀 수 있다.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c\"\u003e# disableThemeToggle: true  # 해/달 아이콘을 보이지 않게 하기\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"메뉴설정\"\u003e메뉴설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e홈 우측 상단 메뉴를 다음과 같이 추가한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003emenu\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecategories   \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그 카테고리 메뉴\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecategories\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/categories/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esearch       \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그 검색 메뉴\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSearch\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/search\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e30\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etags         \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그 태그 메뉴\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etags\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/tags/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e20\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003earchives         \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그 태그 메뉴\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etags\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/tags/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e20\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eArchive Page - 아카이브 페이지, 날짜별로 올린 포스트문서가 정리됨\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat \u0026lt;\u0026lt; EOF \u0026gt; ~/www/content/archives.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003etitle: \u0026#34;Archive\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003elayout: \u0026#34;archives\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e url: \u003cspan class=\"s2\"\u003e\u0026#34;/archives\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esummary: \u0026#34;archives\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eSearch Page - 검색페이지, 퍼지 스타일의 빠른 검색\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat \u0026lt;\u0026lt; EOF \u0026gt; ~/www/content/search.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003etitle: \u0026#34;Search\u0026#34; # in any language you want\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003elayout: \u0026#34;search\u0026#34; # is necessary\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e url: \u003cspan class=\"s2\"\u003e\u0026#34;/archive\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e description: \u003cspan class=\"s2\"\u003e\u0026#34;Description for Search\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esummary: \u0026#34;search\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eplaceholder: \u0026#34;검색어를 입력하세요\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003etags와 categories는 올릴 포스트문서 \u003ccode\u003epost.md\u003c/code\u003e 등의 frontmatter에 기록하면 자동으로 분류되고 홈 상단 메뉴에서 볼 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"post-cover-image\"\u003ePost Cover Image\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e~/www/config.yml\u003c/code\u003e에 설정해주고 아래 설명대로 포스트문서에 링크를 걸어주면 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ecover\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c\"\u003e# can also paste direct link from external site\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c\"\u003e# ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.png\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ealt\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026lt;alt text\u0026gt;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecaption\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026lt;text\u0026gt;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003erelative\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# To use relative path for cover image, used in hugo Page-bundles\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e이미지 사이즈를 줄이고 처리속도를 높이려면 아래 설정 추가\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecover\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eresponsiveImages\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e그러나 실제로 적용해도 페이지는 변화하지 않는다.\u003c/p\u003e","title":"PaperMod - Hugo Theme"},{"content":"TODO 2022-09-08 - 내용 수정, 그림파일 링크 관련 추가 PaperMod screen shot Intro hugo의 테마 중에 가장 간결하고 안정적이며 많은 사람들이 사용하고 있다. hugo 프로젝트는 ~/www로 가정한다. 주의할 것은 hugo의 구조가 ~/www/contents/이하에 markdown 파일을 넣어주어야 하고, 이하 폴더는 적절히 만들되 index.md파일은 만들면 웹페이지 메인 화면에 내용이 뜨질 않는다는 점이다. 설정은 ~/www/config.yml이다. 설정을 변경하면 hugo -D server 동작시 자동으로 반영된다. 만약 설정 변경 사항이 브라우저에서 보이지 않으면 서버를 재실행 한다. Install and Update Install $ cd ~/www $ git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 Update $ cd themes/PaperMod $ git pull Setup 관련 링크 아래 사이트에 config.yml 및 post.md 샘플이 있으니 참고한다. https://adityatelange.github.io/hugo-PaperMod/posts/papermod/papermod-installation/ 테마 설정 papermod 의 테마는 light/dark/auto 가 있다. 홈화면 좌측 상단에 해/달 아이콘 클릭 baseURL: \u0026#34;https://your_idname.github.io/\u0026#34; # 자신의 깃페이지 URL title: My Blog and wiki # 블로그홈 제목 paginate: 5 # 홈에서 보여줄 블로그 표시 갯수 theme: \u0026#34;PaperMod\u0026#34; # 테마 PaperMod로 지정 params: # defaultTheme: light # defaultTheme: light defaultTheme: auto # auto로 설정하면 사용자가 바꿀 수 있다. # disableThemeToggle: true # 해/달 아이콘을 보이지 않게 하기 메뉴설정 홈 우측 상단 메뉴를 다음과 같이 추가한다. menu: main: - identifier: categories # 블로그 카테고리 메뉴 name: categories url: /categories/ weight: 10 - identifier: search # 블로그 검색 메뉴 name: Search url: /search weight: 30 - identifier: tags # 블로그 태그 메뉴 name: tags url: /tags/ weight: 20 - identifier: archives # 블로그 태그 메뉴 name: tags url: /tags/ weight: 20 Archive Page - 아카이브 페이지, 날짜별로 올린 포스트문서가 정리됨 $ cat \u0026lt;\u0026lt; EOF \u0026gt; ~/www/content/archives.md --- title: \u0026#34;Archive\u0026#34; layout: \u0026#34;archives\u0026#34; # url: \u0026#34;/archives\u0026#34; summary: \u0026#34;archives\u0026#34; --- EOF Search Page - 검색페이지, 퍼지 스타일의 빠른 검색 $ cat \u0026lt;\u0026lt; EOF \u0026gt; ~/www/content/search.md --- title: \u0026#34;Search\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # is necessary # url: \u0026#34;/archive\u0026#34; # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; placeholder: \u0026#34;검색어를 입력하세요\u0026#34; --- EOF tags와 categories는 올릴 포스트문서 post.md 등의 frontmatter에 기록하면 자동으로 분류되고 홈 상단 메뉴에서 볼 수 있다. Post Cover Image ~/www/config.yml에 설정해주고 아래 설명대로 포스트문서에 링크를 걸어주면 된다. cover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # can also paste direct link from external site # ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.png alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; relative: false # To use relative path for cover image, used in hugo Page-bundles 이미지 사이즈를 줄이고 처리속도를 높이려면 아래 설정 추가 params: cover: responsiveImages: false 그러나 실제로 적용해도 페이지는 변화하지 않는다.\n다음 방법으로 해결하였는데 위 방법이 해결되면 다시 정리 예정.\n그리고 자신의 github에서 wiki를 클릭하여 이미지를 넣어 링크를 받아오는 방법이 있는데 이는 너무 번거롭고 링크주소가 복잡하여 하지 않았다.\n현재 해결된 방법은 다음과 같다.\n$ mkdir ~/www/contents/images # hugo 프로젝트 폴더의 contents/images 생성 $ cp myimage.png ~/www/contents/images/ # 내 그림파일 복사 $ vim ~/www/contents/wiki/my-new-post.md # 새로운 포스트 작성 ... ![Post Image](../../images/myimage.png) ... $ hugo -D server # 브라우저에서 이미지 로딩 확인 아직 홈페이지 화면 이미지는 복잡한 구조를 이해하지 못해 올리지 못하고 있다. Show TOC (Table of Contents) 모든 블로그에 목차를 보이게 하려면 아래 설정 추가 ShowToc: true TocOpen: true 각 페이지에 선택적으로 목차를 만들 경우에는 해당 페이지에 설정한다. --- 생략... ShowToc: true TocOpen: true --- Tips 블로그 리스트에 날짜 업데이트 표시 hugo project 에서 다음과 같이 작업 $ mkdir -p layouts/partials $ cat \u0026lt;\u0026lt;EOF \u0026gt; ~/www/layouts/partials/post_meta.html {{ $date := .Date.Format \u0026#34;02.01.2006\u0026#34; }} {{ $lastmod := .Lastmod.Format \u0026#34;02.01.2006\u0026#34; }} {{- $scratch := newScratch }} {{- if not .Date.IsZero -}} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice (printf \u0026#34;\u0026lt;span title=\u0026#39;%s\u0026#39;\u0026gt;%s\u0026lt;/span\u0026gt;\u0026#34; (.Date) (.Date | time.Format (default \u0026#34;January 2, 2006\u0026#34; site.Params.DateFormat)))) }} {{- end }} {{- if ne $lastmod $date -}} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice (printf \u0026#34;\u0026lt;span title=\u0026#39;%s\u0026#39;\u0026gt;(updated %s)\u0026lt;/span\u0026gt;\u0026#34; (.Lastmod) (.Lastmod | time.Format (default \u0026#34;January 2, 2006\u0026#34; site.Params.DateFormat)))) }} {{- end }} {{- if (.Param \u0026#34;ShowReadingTime\u0026#34;) -}} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice (i18n \u0026#34;read_time\u0026#34; .ReadingTime | default (printf \u0026#34;%d min\u0026#34; .ReadingTime))) }} {{- end }} {{- if (.Param \u0026#34;ShowWordCount\u0026#34;) -}} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice (i18n \u0026#34;words\u0026#34; .WordCount | default (printf \u0026#34;%d words\u0026#34; .WordCount))) }} {{- end }} {{- with (partial \u0026#34;author.html\u0026#34; .) }} {{- $scratch.Add \u0026#34;meta\u0026#34; (slice .) }} {{- end }} {{- with ($scratch.Get \u0026#34;meta\u0026#34;) }} {{- delimit . \u0026#34;\u0026amp;nbsp;·\u0026amp;nbsp;\u0026#34; -}} {{- end -}} EOF --- 2. 내 문서의 frontmatter에 frontmatter에 lastmod 추가 ```console $ vim contents/posts/mypost.md ... lastmod: 2022-09-08T17:49:01+09:00 브라우저에서 확인 $ hugo -D server # 브라우저에서 확인 특정 포스트를 리스트에서 빼기 위키를 작성하고 이를 블로그 포스트에 올리게 되면 wiki index와 충돌한다. index.md를 windex.md로 변경한 후 이를 블로그 리스트 목록에서 감추게 한다. windex.md의 frontmatter에 다음을 추가 _build: list: false Links https://themes.gohugo.io/themes/hugo-papermod/ https://github.com/adityatelange/hugo-PaperMod https://github.com/adityatelange/hugo-PaperMod/wiki/Installation https://github.com/adityatelange/hugo-PaperMod/wiki/Features https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs ","permalink":"https://neosolaris.github.io/posts/hugo_papermod/","summary":"\u003ch2 id=\"todo\"\u003eTODO\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-09-08 - 내용 수정, 그림파일 링크 관련 추가\u003c/li\u003e\n\u003c/ul\u003e\n\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"https://user-images.githubusercontent.com/21258296/114303440-bfc0ae80-9aeb-11eb-8cfa-48a4bb385a6d.png\"/\u003e \u003cfigcaption\u003e\n            PaperMod screen shot\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ehugo의 테마 중에 가장 간결하고 안정적이며 많은 사람들이 사용하고 있다.\u003c/li\u003e\n\u003cli\u003ehugo 프로젝트는 \u003ccode\u003e~/www\u003c/code\u003e로 가정한다.\u003c/li\u003e\n\u003cli\u003e주의할 것은 hugo의 구조가 \u003ccode\u003e~/www/contents/\u003c/code\u003e이하에 markdown 파일을 넣어주어야 하고, 이하 폴더는 적절히 만들되 \u003ccode\u003eindex.md\u003c/code\u003e파일은 만들면 웹페이지 메인 화면에 내용이 뜨질 않는다는 점이다.\u003c/li\u003e\n\u003cli\u003e설정은 \u003ccode\u003e~/www/config.yml\u003c/code\u003e이다.\u003c/li\u003e\n\u003cli\u003e설정을 변경하면 \u003ccode\u003ehugo -D server\u003c/code\u003e 동작시 자동으로 반영된다.\u003c/li\u003e\n\u003cli\u003e만약 설정 변경 사항이 브라우저에서 보이지 않으면 서버를 재실행 한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install-and-update\"\u003eInstall and Update\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eInstall\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ~/www\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eUpdate\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e themes/PaperMod\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git pull\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"setup-관련-링크\"\u003eSetup 관련 링크\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래 사이트에 \u003ccode\u003econfig.yml\u003c/code\u003e 및 \u003ccode\u003epost.md\u003c/code\u003e 샘플이 있으니 참고한다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://adityatelange.github.io/hugo-PaperMod/posts/papermod/papermod-installation/\"\u003ehttps://adityatelange.github.io/hugo-PaperMod/posts/papermod/papermod-installation/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"테마-설정\"\u003e테마 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003epapermod 의 테마는 light/dark/auto 가 있다.\u003c/li\u003e\n\u003cli\u003e홈화면 좌측 상단에 해/달 아이콘 클릭\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ebaseURL\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;https://your_idname.github.io/\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 자신의 깃페이지 URL\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eMy Blog and wiki\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그홈 제목\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003epaginate\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e5\u003c/span\u003e\u003cspan class=\"w\"\u003e             \u003c/span\u003e\u003cspan class=\"c\"\u003e# 홈에서 보여줄 블로그 표시 갯수\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003etheme\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;PaperMod\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e       \u003c/span\u003e\u003cspan class=\"c\"\u003e# 테마 PaperMod로 지정\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"nt\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c\"\u003e# defaultTheme: light\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c\"\u003e# defaultTheme: light\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003edefaultTheme\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eauto   \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# auto로 설정하면 사용자가 바꿀 수 있다.\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c\"\u003e# disableThemeToggle: true  # 해/달 아이콘을 보이지 않게 하기\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"메뉴설정\"\u003e메뉴설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e홈 우측 상단 메뉴를 다음과 같이 추가한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003emenu\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecategories   \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그 카테고리 메뉴\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecategories\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/categories/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003esearch       \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그 검색 메뉴\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eSearch\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/search\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e30\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etags         \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그 태그 메뉴\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etags\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/tags/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e20\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e- \u003cspan class=\"nt\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003earchives         \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# 블로그 태그 메뉴\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etags\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e/tags/\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003e\u003cspan class=\"nt\"\u003eweight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"m\"\u003e20\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eArchive Page - 아카이브 페이지, 날짜별로 올린 포스트문서가 정리됨\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat \u0026lt;\u0026lt; EOF \u0026gt; ~/www/content/archives.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003etitle: \u0026#34;Archive\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003elayout: \u0026#34;archives\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e url: \u003cspan class=\"s2\"\u003e\u0026#34;/archives\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esummary: \u0026#34;archives\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eSearch Page - 검색페이지, 퍼지 스타일의 빠른 검색\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e cat \u0026lt;\u0026lt; EOF \u0026gt; ~/www/content/search.md\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003etitle: \u0026#34;Search\u0026#34; # in any language you want\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003elayout: \u0026#34;search\u0026#34; # is necessary\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e url: \u003cspan class=\"s2\"\u003e\u0026#34;/archive\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e description: \u003cspan class=\"s2\"\u003e\u0026#34;Description for Search\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esummary: \u0026#34;search\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eplaceholder: \u0026#34;검색어를 입력하세요\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003etags와 categories는 올릴 포스트문서 \u003ccode\u003epost.md\u003c/code\u003e 등의 frontmatter에 기록하면 자동으로 분류되고 홈 상단 메뉴에서 볼 수 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"post-cover-image\"\u003ePost Cover Image\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e~/www/config.yml\u003c/code\u003e에 설정해주고 아래 설명대로 포스트문서에 링크를 걸어주면 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003ecover\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c\"\u003e# can also paste direct link from external site\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"c\"\u003e# ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.png\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ealt\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026lt;alt text\u0026gt;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecaption\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026lt;text\u0026gt;\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003erelative\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# To use relative path for cover image, used in hugo Page-bundles\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e이미지 사이즈를 줄이고 처리속도를 높이려면 아래 설정 추가\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecover\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eresponsiveImages\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e그러나 실제로 적용해도 페이지는 변화하지 않는다.\u003c/p\u003e","title":"PaperMod - Hugo Theme"},{"content":"2023-08 2023-08-07: openrc, doas 문서 정리, 업로드 2023-08-06: vimwiki hugo github: 프로젝트를 자동 업데이트하도록 nvim 추가 2023-08-06: blogen.lua: 수정: vimwiki-hugo와 githubio 모두 git push 하도록 수정 nvim에 등록, 는 ~/git/* git pull 2023-08-05: blogen.lua 스크립트 nvim내 실행시 출력 깨지는 문제 해결 2023-08-03: windows wsl + alpine + docker + git 설치 완료 및 문서 정리 2022-09 2022-09-08 nvim에서 왜 autosave가 되지 않는가 nvim lua 공부 lua 공부 계속 2022-09-02 nvim lua 공부 lua 공부 계속 ssh keygen 문서 정리 2022-09-01 yadm 설치 및 설정, 문서 정리 lua 공부 계속 2022-08 2022-08-31 rclone 설치 및 설정 그리고 문서 정리 2022-08-26 nvim lua 공부 www 프로젝트 문서 업데이트 hugo project: blog.sh 링크 필터링 부분 수정 2022-08-25 nvim 플러그인 공부 www 프로젝트 문서 업데이트 2022-08-24 vim 공부 www 프로젝트 문서 업데이트 generate.sh 파일명 수정: blog.sh {gen|push} 그리고 ~/bin 링크 2022-08-23 vimwiki 문서 정리 깃허브에 만든 블로그 올리고 테스트 www 프로젝트 정리하고 수정 보완 papermod 에 lastmod 표시하기 vim 에 abbr 추가 및 설정: generate.sh 실행 ","permalink":"https://neosolaris.github.io/posts/todo/","summary":"\u003ch2 id=\"2023-08\"\u003e2023-08\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2023-08-07: openrc, doas 문서 정리, 업로드\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2023-08-06: \u003ca href=\"../vimwiki-hugo-github\"\u003evimwiki hugo github\u003c/a\u003e: 프로젝트를 자동 업데이트하도록 nvim 추가\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2023-08-06: blogen.lua: 수정: vimwiki-hugo와 githubio 모두 git push 하도록 수정 nvim에 \u003c!-- raw HTML omitted --\u003e 등록, \u003c!-- raw HTML omitted --\u003e는 ~/git/* git pull\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2023-08-05: blogen.lua 스크립트 nvim내 실행시 출력 깨지는 문제 해결\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2023-08-03: windows wsl + alpine + docker + git 설치 완료 및 문서 정리\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2022-09\"\u003e2022-09\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-09-08\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e nvim에서 왜 autosave가 되지 않는가\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../nvim-lua\"\u003envim lua\u003c/a\u003e 공부\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../lua\"\u003elua\u003c/a\u003e 공부 계속\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-09-02\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../nvim-lua\"\u003envim lua\u003c/a\u003e 공부\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../lua\"\u003elua\u003c/a\u003e 공부 계속\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../ssh-keygen\"\u003essh keygen\u003c/a\u003e 문서 정리\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-09-01\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../yadm\"\u003eyadm\u003c/a\u003e 설치 및 설정, 문서 정리\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../lua\"\u003elua\u003c/a\u003e 공부 계속\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"2022-08\"\u003e2022-08\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-08-31\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../rclone\"\u003erclone\u003c/a\u003e 설치 및 설정 그리고 문서 정리\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-08-26\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e nvim lua 공부\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e www 프로젝트 문서 업데이트\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e hugo project: blog.sh 링크 필터링 부분 수정\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-08-25\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e nvim 플러그인 공부\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e www 프로젝트 문서 업데이트\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-08-24\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e vim 공부\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e www 프로젝트 문서 업데이트\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e generate.sh 파일명 수정: blog.sh {gen|push} 그리고 ~/bin 링크\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 2022-08-23\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../vimwiki\"\u003evimwiki\u003c/a\u003e 문서 정리\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 깃허브에 만든 블로그 올리고 테스트\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e www 프로젝트 정리하고 수정 보완\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../hugo-papermod\"\u003epapermod\u003c/a\u003e 에 lastmod 표시하기\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e \u003ca href=\"../vim\"\u003evim\u003c/a\u003e 에 abbr 추가 및 설정: generate.sh 실행\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"TODO"},{"content":"markdown은 일반 텍스트 기반의 경량 마크업 언어다.\n","permalink":"https://neosolaris.github.io/posts/markdown/","summary":"\u003cp\u003emarkdown은 일반 텍스트 기반의 경량 마크업 언어다.\u003c/p\u003e","title":"Markdown"},{"content":" github에서 무료로 제공하는 개발자용 홈페이지이다. 예를 들어 github.com/user_name의 계정을 가지고 있다면 https://user_name.github.io의 도메인 이름으로 자신의 홈페이지를 개설할 수 있다. github에 user_name.github.io라는 저장소를 새로 생성하고 공개(public)하면 바로 사용할 수 있다. README.md \u0026lt; index.md \u0026lt; index.html 우선권 순서로 동작한다. 처음 테스트 파일을 깃허브에 올린 후 브라우저에서 2-3분 후 확인 가능하다. ","permalink":"https://neosolaris.github.io/posts/github.io/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../github\"\u003egithub\u003c/a\u003e에서 무료로 제공하는 개발자용 홈페이지이다.\u003c/li\u003e\n\u003cli\u003e예를 들어 \u003ccode\u003egithub.com/user_name\u003c/code\u003e의 계정을 가지고 있다면 \u003ccode\u003ehttps://user_name.github.io\u003c/code\u003e의 도메인 이름으로 자신의 홈페이지를 개설할 수 있다.\u003c/li\u003e\n\u003cli\u003egithub에 \u003ccode\u003euser_name.github.io\u003c/code\u003e라는 저장소를 새로 생성하고 공개(public)하면 바로 사용할 수 있다.\u003c/li\u003e\n\u003cli\u003eREADME.md \u0026lt; index.md \u0026lt; index.html 우선권 순서로 동작한다.\u003c/li\u003e\n\u003cli\u003e처음 테스트 파일을 깃허브에 올린 후 브라우저에서 2-3분 후 확인 가능하다.\u003c/li\u003e\n\u003c/ul\u003e","title":"Github Page"},{"content":"소개 마크다운 문서를 vimwiki로 작성하여 간단한 메모에서 부터 블로그, 리포트, 기술 문서에 이르기까지 손쉽게 만들 수 있다. 이를 기반으로 하여 깃허브에서 제공하는 무료 웹사이트에 올리는 방법을 설명하고자 한다. 아래는 간략한 개요이다.\nvimwiki + hugo + github.io 를 연결하는 프로젝트이다. vim의 vimwiki 플러그인을 사용하여 위키문서를 작성한다. 위키문서의 작성은 마크다운(markdown) 문법으로 한다. hugo를 사용하여 임시 로컬웹서버를 띄우고 위키문서를 html로 변환하고 브라우저에서 확인한다. 변환된 정적 html 문서를 깃허브에 올린다. 깃허브 페이지에서 이를 확인한다. UTF-8인코딩이라면 한글도 특별히 문제가 없고 잘 된다. 다만 마크다운 파일명에 공백이 들어가면 관리가 좋지 않으니 -등으로 연결해서 쓴다. 설치 환경 OS 및 프로그램 버전\nos: Ubuntu 22.04 LTS git: 2.34.1 vim: 8.2 vimwiki 플러그인: 2.5 hugo: 0.92.2 firefox: 104.0 ~/data/vimwiki/ : 위키 저장 폴더 (1.위키를 작성하고)\n~/data/www/ : hugo 웹개발 폴더 (2.웹페이지 생성, 테스트, 개발)\n~/data/your_idname.github.io/ : 깃허브 로컬 저장소, 웹페이지 위치 (3.결과물을 저장소에 업로드)\n이 프로젝트의 목적과 방향 마크다운 (markdown)을 기본 문서 포맷으로 정한 이유\nms word나 hwp 등은 해당 프로그램이 있어야하고 linux, unix 에서 사용하기 곤란하다. 언제 어디에서나 작성 가능한 txt 파일이 가장 좋으나 다른 문서로 변환이 곤란하다. 마크다운 문법이 가장 쉬우면서 여러 포맷으로 변환이 가능하다. vimwiki 를 사용하게 된 이유\n깃허브에서 사용되는 마크다운 문법을 지원한다. 위키이므로 문서를 서로 연결하고 조금씩 개선되는 방식이라 좋다. 일기나 할일 등의 기능을 제공하여 일정 관리가 편하다. vi 또는 vim에 익숙한 사용자에게는 가장 좋은 해결책이다. 하나의 위키 또는 여러개의 위키 프로젝트를 만들 수 있다. 설정된 폴더에 위키를 저장하고 깃허브 또는 dropbox 등에 백업하기 편리하다. vim의 다양한 플러그인과 기능 설정을 활용하여 작업의 자동화, 문서 변환 등을 쉽게 할 수 있다. hugo를 통해 웹개발과 html 변환\n깃허브에서 제공하는 github io는 정적인 html만을 올릴 수 있다. 물론 md(마크다운) 파일을 올려도 볼 수 있지만 hugo와 테마를 이용하면 근사한 개인 블로그를 만들 수 있다. 또한 깃허브에 업로드하면 2-3분 정도 후에야 변경을 확인할 수 있다. 따라서 vimwiki로 만든 파일을 html로 변환하고 로컬에서 테스트할 개발 환경이 필요해진다. 대표적인 것으로 jekyll 과 hugo가 있다. jekyll은 ruby 기반으로 설치가 복잡하고 모듈 의존성, 처리 속도 문제 등이 있다. hugo는 go 기반으로 의존성 문제없이 프로그램 하나만 설치하면 되고 처리 속도도 매우 빠르다. 테마는 papermod를 사용하기로 했다. 가장 심플하고 안정적이고 깔끔하다. 테마를 적용하면 search, tag, category, archive, 통계, 댓글 등 다양한 기능이 지원된다. github io에 블로그 또는 위키페이지를 올리는 이유\n홈페이지가 무료이다. your_idname.github.io도메인을 기본 제공하고 개인 도메인 설정도 가능하다. 문서의 변경사항 추적 및 복원, 버전관리도 된다. 내 위키 문서에 대한 백업도 편리하게 할 수 있다. 기본 설치와 설정 방법 본 문서에는 실제로 설치 및 설정을 순서대로 간략하게 흐름을 잃지 않는 선에서 설명하고 각각의 자세한 설명은 아래 문서로 대체한다.\ngithub io 페이지 등록 및 설정 vimwiki 설치 및 설정 hugo 설치 및 설정 papermod 테마 설치 및 설정 Step1. github.io 페이지 등록 및 설정 github.com에 가입하고 새 저장소를 만든다.\nhttps://github.com/your_idname 로 로그인한다. 우측 상단 + 아이콘을 눌러 Create a new repository 클릭. Repository name은 반드시 자신의 사용자명을 이용해서 만든다. your_idname.github.io\npublic 선택 \u0026gt; Create repository 로 생성 완료. git 설치 및 설정: 깃허브인증방식은 ssh key 인증을 사용: github ssh key 인증을 참조\n$ sudo apt install git $ cd ~/data/ $ git config --global user.name your_idname $ git config --global user.email yourid@gmail.com $ git clone git@github.com:your_idname/your_idname.github.io.git $ cd your_idname.github.io.git $ git remote set-url git@github.com:github.com:your_idname/your_idname.github.io.git $ echo \u0026#34;\u0026lt;H1\u0026gt; Hello World! \u0026lt;/H1\u0026gt;\u0026#34; \u0026gt; index.html $ git add . \u0026amp;\u0026amp; git commit . -m \u0026#34;Upload files\u0026#34; \u0026amp;\u0026amp; git push $ firefox https://your_idname.github.io \u0026amp; Step2. Vimwiki 설치 및 설정 vim vim-plug 설치 $ sudo apt install vim $ curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim $ vim ~/.vimrc ~/.vimrc 설정 파일 call plug#begin() Plug \u0026#39;vimwiki/vimwiki\u0026#39;, {\u0026#39;branch\u0026#39;: \u0026#39;dev\u0026#39;} call plug#end() \u0026#34; vimwiki 설정 \u0026#34; 위키(github.io) 설정 let g:vimwiki_list = [ \\{ \\ \u0026#39;path\u0026#39;: \u0026#39;~/data/vimwiki\u0026#39;, \u0026#34;위키문서의 위치 \\ \u0026#39;syntax\u0026#39; : \u0026#39;markdown\u0026#39;, \u0026#34;마크다운 문법 지정 \\ \u0026#39;ext\u0026#39; : \u0026#39;.md\u0026#39;, \u0026#34;저장 문서 포멧 \\ \u0026#39;diary_rel_path\u0026#39;: \u0026#39;.\u0026#39;, \\} \\] \u0026#34; vimwiki의 conceallevel 을 끔 let g:vimwiki_conceallevel = 0 \u0026#34; vimwiki 설정이 markdown의 모든 설정을 제어하지 않게하기 let g:vimwiki_global_ext = 0 vimwik 플러그인 설치 $ vim +PlugInstall +qall vimwiki로 테스트 문서 작성: vim 실행후 \\ww 명령 후 ~/data/vimwiki/index.md 문서를 시작으로 테스트로 2-3 개의 문서를 작성해 본다. $ vim Step3. Hugo 설치 및 설정 hugo 및 테마 papermod 설치 $ sudo apt install hugo $ hugo version $ hugo new site ~/data/www -f yml $ tree ~/data/www . ├── themes ├── static ├── layouts ├── data ├── content ├── config.toml └── archetypes └── default.md $ cd ~/data/www $ git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 설정 및 테스트 설정파일: ~/data/www/config.yml 테스트파일: ~/data/www/content/wiki/my-first-post.md $ cd ~/data/www $ echo \u0026#39;Theme: \u0026#34;PaperMod\u0026#34;\u0026#39; \u0026gt;\u0026gt; config.yml $ hugo new wiki/my-first-post.md $ vim wiki/my-first-post.md html 파일을 임시로 자동생성하고 로컬 웹서버를 띄우기 $ cd ~/data/www $ hugo -D server 브라우저에서 확인 http://127.0.0.1:1313\nhtml 파일을 목적지에 생성하기\n$ cd ~/data/www $ hugo -D # default: `~/data/www/public` $ hugo -D -d ~/data/your_idname.github.io # 깃허브 로컬저장소 Step4. Vimwiki문서를 Hugo에서 처리하여 깃허브에 업로드하기 vimwiki 작성시 반드시 frontmatter를 넣어 문서를 작성한다. --- title: 문서1 date: 2022-08-24T16:28:44+09:00 (vim의 strftime이용, iabbr기능이용) lastmod: 위형식으로 수정한 날짜 입력(vim의 strftime 이용) tags: [\u0026#34;테그1\u0026#34;,\u0026#34;테그2\u0026#34;] categories: [\u0026#34;category1\u0026#34;,\u0026#34;category2\u0026#34;] \u0026#34;weight\u0026#34;: 1 --- ## 소제목 1 * 내용 1 * 내용 2 ## 소제목 2 * 내용 3 * 내용 4 * [문서2](../문서2) 작성된 문서(마크다운)들을 링크를 변환하여 hugo 웹개발 폴더에 복사한다.\n이 부분이 제일 문제인데 vimwiki 파일 내의 링크 형식 [문서2](../문서2)가 hugo에서 html변환 시 링크를 잘 못 처리하는 데 있다. 이를 여러 가지로 알아 보았는데 hugo에서는 복잡한 설정으로 사용하기 어렵고 자동화하기도 어렵다. 각 페이지마다 hugo식의 링크방식을 넣어주어야 한다. vimwiki에서 이를 변경할 수 있다해도 vimwiki 본래의 링크 연결이 안되어 문제가 된다. 현재로서는 vimwiki의 모든 md파일을 hugo 웹개발 폴더에 복사하는 중간에 이것을 처리해 주도록 하면 된다. 즉, [문서2](../문서2) 부분을 [문서2](../../문서2)로 바꾸어 준다. 그 이유는 html 결과물이 BASE_URL/문서1/index.html 이런 폴더 형식으로 바뀌기 때문에 hugo프로젝트에 들어온 마크다운의 링크 입장에서는 상위로 가서 문서2 폴더로 이동해야 하기 때문이다. 파일 내 링크 변환\n~/data/vimwiki/*.md --\u0026gt; 파일 내 링크 변환 --\u0026gt; ~/data/www/content/wiki/\n이를 처리하는 스크립트를 작성 (핵심만 표현) #!/usr/bin/env bash # prog_name: blogen.sh src=\u0026#34;~/data/vimwiki\u0026#34; dst=\u0026#34;~/data/www/content/wiki for file in ${src}/*.md do # 기본 파일 이름을 구함 base_name=$(basename $file) # 넘어온 파일 중에 index.md는 파일이름을 바꿈: hugo에서 문제 발생 if [ \u0026#34;$base_name\u0026#34; == \u0026#34;index.md\u0026#34; ];then base_name=\u0026#34;wiki-index.md\u0026#34; # 파일 내에 있는 링크를 모두 수정해서 hugo 개발폴더에 넣어준다. # 아래 필터링은 마크다운의 인용구에 대해서도 링크를 처리하는 문제점이 있다. # 추후 정교하게 다시 만들 필요가 있다. cat $file | \\ sed -e \u0026#39;s|](|](../|g\u0026#39; -e \u0026#39;s|](../http|](http|g\u0026#39; \\ \u0026gt; ${dst}/${basename} done 수정사항 - 위 코드의 문제점 때문에 쉘스크립트를 파일로 부터 한 줄씩 넘기면서 처리토록 하였다. 한 줄에 하나 이상의 링크일 경우, 외부 링크일 경우, 단어 인용, 구문인용 등을 식별하여 모두 처리하도록 하였다. 그러나 grep이나 sed 등을 모든 경우에 사용하다보니 속도가 많이 느려졌다. 이를 개선하기 위해 lua를 공부하여 만들었는데 매우 빠른 처리가 가능했다. 그리고 더욱 처리 성능을 높인 것은 변경된 또는 새로 추가된 파일만 식별해서 처리하도록 한 것이다. 기본 아이디어는 스크립트를 실행시 시간을 자동 저장하고, 다음 처리 때 이 시간과 파일의 mtime을 비교하는 것이다. 이 스크립트는 며칠 공부하고 만든 것이라 많이 부족하지만 혹시 참고가 될까 하여 링크를 걸어 두었다. 이를 vim에서 단축키 실행 등록을 해두면 편하다. 글에만 집중할 수 있게 된다. https://github.com/neosolaris/neosolaris.github.io/blob/main/www/blogen-0.1.lua 로컬 웹서버를 띄우고 브라우저에서 오류나 문제점들을 확인한다. $ hugo -D server 웹페이지를 로컬저장소에 만들고, github 저장소로 업데이트 한다. $ cd ~/data/www $ hugo -D -d ~/data/your_idname.github.io $ cd ~/data/your_idname.github.io $ git add . \u0026amp;\u0026amp; git commit . -m \u0026#34;update files\u0026#34; \u0026amp;\u0026amp; git push 브라우저에서 확인한다. (업데이트 이후 변경을 확인하는데 2-5분 소요) Step5. 자동화 하기 vimwiki에서 작성한 문서를 vimwki2html이라는 기능으로 변환이 가능하나 이는 hugo 스타일과 맞지 않기 때문에 위의 blogen.sh를 수행하도록 한다.\nbolgen.sh {gen|push|all}로 기능을 확장시키고 이를 상황에 따라 실행한다. blogen.sh gen - vimwiki에서 hugo로 옮길 때 링크변환 및 html 생성하기 blogen.sh push - github에 올리기 blogen.sh all - 위 두 과정 모두 실행 vimwiki에서 문서 작업 완료 후 실행하기 - vim lastline mode\n물론 blogen.sh가 PATH에 설정되어 있어야 한다. :! blogen.sh {gen|push|all} 참고 사항 vimwik의 기준이 되는 문서 index.md 파일은 hugo에서의 충돌로 wiki-index.md로 바꿔주어야 한다. hugo에서는 가장 최신의 문서가 블로그 홈화면의 최상위로 뜨며 다섯개가 기본. 우선 순위는 frontmatter에서 weight=1 식으로 줄 수 있다. 1이 최상. ~/data/www도 어차피 개발 폴더이기 때문에 ~/data/your_idname.github.io/www로 포함시키고 깃허브에서 통합해서 관리하는 것도 좋겠다. 이 경우 분리된 상태로 먼저 작업했다가 페이지가 안정적으로 동작하고 난 후에 개발폴더를 옮겨 준다. 이에 따라 변경된 폴더들을 blogen.sh에도 잘 반영해야한다. 기본 15 페이지 기준으로 ~/data/www는 약 1.2Mb 정도이다. 이제 웹개발 환경이 구축되었으므로 블로그를 본격적으로 꾸며간다. 이것은 테마 papermod를 사용하였으므로 papermod 설치 및 설정을 참고한다. TODO 2022.10.06: 오타 수정, shell 명령어 인용코드 정리 2022.09.12: vimwiki에서 파일명과 링크를 수정했을 때 hugo에서 과거 파일이 남는 문제 처리 프로그램 blogen.lua에 양쪽의 파일을 조사하여 동기화 처리 Links https://cristianpb.github.io/blog/vimwiki-hugo https://gohugo.io/getting-started/quick-start/ https://themes.gohugo.io/themes/hugo-papermod/ ","permalink":"https://neosolaris.github.io/posts/vimwik_hugo_github/","summary":"\u003ch2 id=\"소개\"\u003e소개\u003c/h2\u003e\n\u003cp\u003e마크다운 문서를 vimwiki로 작성하여 간단한 메모에서 부터 블로그, 리포트, 기술 문서에 이르기까지 손쉽게 만들 수 있다. 이를 기반으로 하여 깃허브에서 제공하는 무료 웹사이트에 올리는 방법을 설명하고자 한다. 아래는 간략한 개요이다.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003evimwiki + hugo + github.io\u003c/code\u003e 를 연결하는 프로젝트이다.\u003c/li\u003e\n\u003cli\u003evim의 vimwiki 플러그인을 사용하여 위키문서를 작성한다.\u003c/li\u003e\n\u003cli\u003e위키문서의 작성은 마크다운(\u003ca href=\"../markdown\"\u003emarkdown\u003c/a\u003e) 문법으로 한다.\u003c/li\u003e\n\u003cli\u003ehugo를 사용하여 임시 로컬웹서버를 띄우고 위키문서를 html로 변환하고 브라우저에서 확인한다.\u003c/li\u003e\n\u003cli\u003e변환된 정적 html 문서를 깃허브에 올린다.\u003c/li\u003e\n\u003cli\u003e깃허브 페이지에서 이를 확인한다.\u003c/li\u003e\n\u003cli\u003eUTF-8인코딩이라면 한글도 특별히 문제가 없고 잘 된다. 다만 마크다운 파일명에 공백이 들어가면 관리가 좋지 않으니 \u003ccode\u003e-\u003c/code\u003e등으로 연결해서 쓴다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설치-환경\"\u003e설치 환경\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eOS 및 프로그램 버전\u003c/p\u003e","title":"Vimwiki Hugo Github.io 연동하기"},{"content":"소개 마크다운 문서를 vimwiki로 작성하여 간단한 메모에서 부터 블로그, 리포트, 기술 문서에 이르기까지 손쉽게 만들 수 있다. 이를 기반으로 하여 깃허브에서 제공하는 무료 웹사이트에 올리는 방법을 설명하고자 한다. 아래는 간략한 개요이다.\nvimwiki + hugo + github.io 를 연결하는 프로젝트이다. vim의 vimwiki 플러그인을 사용하여 위키문서를 작성한다. 위키문서의 작성은 마크다운(../markdown) 문법으로 한다. hugo를 사용하여 임시 로컬웹서버를 띄우고 위키문서를 html로 변환하고 브라우저에서 확인한다. 변환된 정적 html 문서를 깃허브에 올린다. 깃허브 페이지에서 이를 확인한다. UTF-8인코딩이라면 한글도 특별히 문제가 없고 잘 된다. 다만 마크다운 파일명에 공백이 들어가면 관리가 좋지 않으니 -등으로 연결해서 쓴다. 설치 환경 OS 및 프로그램 버전\nos: Ubuntu 22.04 LTS git: 2.34.1 vim: 8.2 vimwiki 플러그인: 2.5 hugo: 0.92.2 firefox: 104.0 ~/data/vimwiki/ : 위키 저장 폴더 (1.위키를 작성하고)\n~/data/www/ : hugo 웹개발 폴더 (2.웹페이지 생성, 테스트, 개발)\n~/data/your_idname.github.io/ : 깃허브 로컬 저장소, 웹페이지 위치 (3.결과물을 저장소에 업로드)\n이 프로젝트의 목적과 방향 마크다운 (../markdown)을 기본 문서 포맷으로 정한 이유\nms word나 hwp 등은 해당 프로그램이 있어야하고 linux, unix 에서 사용하기 곤란하다. 언제 어디에서나 작성 가능한 txt 파일이 가장 좋으나 다른 문서로 변환이 곤란하다. 마크다운 문법이 가장 쉬우면서 여러 포맷으로 변환이 가능하다. vimwiki 를 사용하게 된 이유\n깃허브에서 사용되는 마크다운 문법을 지원한다. 위키이므로 문서를 서로 연결하고 조금씩 개선되는 방식이라 좋다. 일기나 할일 등의 기능을 제공하여 일정 관리가 편하다. vi 또는 vim에 익숙한 사용자에게는 가장 좋은 해결책이다. 하나의 위키 또는 여러개의 위키 프로젝트를 만들 수 있다. 설정된 폴더에 위키를 저장하고 깃허브 또는 dropbox 등에 백업하기 편리하다. vim의 다양한 플러그인과 기능 설정을 활용하여 작업의 자동화, 문서 변환 등을 쉽게 할 수 있다. hugo를 통해 웹개발과 html 변환\n깃허브에서 제공하는 github io는 정적인 html만을 올릴 수 있다. 물론 md(마크다운) 파일을 올려도 볼 수 있지만 hugo와 테마를 이용하면 근사한 개인 블로그를 만들 수 있다. 또한 깃허브에 업로드하면 2-3분 정도 후에야 변경을 확인할 수 있다. 따라서 vimwiki로 만든 파일을 html로 변환하고 로컬에서 테스트할 개발 환경이 필요해진다. 대표적인 것으로 jekyll가 있다. jekyll 기반으로 설치가 복잡하고 모듈 의존성, 처리 속도 문제 등이 있다. hugo 기반으로 의존성 문제없이 프로그램 하나만 설치하면 되고 처리 속도도 매우 빠르다. 테마는 papermod를 사용하기로 했다. 가장 심플하고 안정적이고 깔끔하다. 테마를 적용하면 search, tag, category, archive, 통계, 댓글 등 다양한 기능이 지원된다. github io에 블로그 또는 위키페이지를 올리는 이유\n홈페이지가 무료이다. your_idname.github.io도메인을 기본 제공하고 개인 도메인 설정도 가능하다. 문서의 변경사항 추적 및 복원, 버전관리도 된다. 내 위키 문서에 대한 백업도 편리하게 할 수 있다. 기본 설치와 설정 방법 본 문서에는 실제로 설치 및 설정을 순서대로 간략하게 흐름을 잃지 않는 선에서 설명하고 각각의 자세한 설명은 아래 문서로 대체한다.\ngithub io 페이지 등록 및 설정 vimwiki 설치 및 설정 hugo 설치 및 설정 papermod 테마 설치 및 설정 Step1. github.io 페이지 등록 및 설정 github.com에 가입하고 새 저장소를 만든다.\nhttps://github.com/your_idname 로 로그인한다. 우측 상단 + 아이콘을 눌러 Create a new repository 클릭. Repository name은 반드시 자신의 사용자명을 이용해서 만든다. your_idname.github.io\npublic 선택 \u0026gt; Create repository 로 생성 완료. git을 참조\n$ sudo apt install git $ cd ~/data/ $ git config --global user.name your_idname $ git config --global user.email yourid@gmail.com $ git clone git@github.com:your_idname/your_idname.github.io.git $ cd your_idname.github.io.git $ git remote set-url git@github.com:github.com:your_idname/your_idname.github.io.git $ echo \u0026#34;\u0026lt;H1\u0026gt; Hello World! \u0026lt;/H1\u0026gt;\u0026#34; \u0026gt; index.html $ git add . \u0026amp;\u0026amp; git commit . -m \u0026#34;Upload files\u0026#34; \u0026amp;\u0026amp; git push $ firefox https://your_idname.github.io \u0026amp; Step2. Vimwiki 설치 및 설정 vim vim-plug 설치 $ sudo apt install vim $ curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim $ vim ~/.vimrc ~/.vimrc 설정 파일 call plug#begin() Plug \u0026#39;vimwiki/vimwiki\u0026#39;, {\u0026#39;branch\u0026#39;: \u0026#39;dev\u0026#39;} call plug#end() \u0026#34; vimwiki 설정 \u0026#34; 위키(github.io) 설정 let g:vimwiki_list = [ \\{ \\ \u0026#39;path\u0026#39;: \u0026#39;~/data/vimwiki\u0026#39;, \u0026#34;위키문서의 위치 \\ \u0026#39;syntax\u0026#39; : \u0026#39;markdown\u0026#39;, \u0026#34;마크다운 문법 지정 \\ \u0026#39;ext\u0026#39; : \u0026#39;.md\u0026#39;, \u0026#34;저장 문서 포멧 \\ \u0026#39;diary_rel_path\u0026#39;: \u0026#39;.\u0026#39;, \\} \\] \u0026#34; vimwiki의 conceallevel 을 끔 let g:vimwiki_conceallevel = 0 \u0026#34; vimwiki 설정이 markdown의 모든 설정을 제어하지 않게하기 let g:vimwiki_global_ext = 0 vimwik 플러그인 설치 $ vim +PlugInstall +qall vimwiki로 테스트 문서 작성: vim 실행후 \\ww 명령 후 ~/data/vimwiki/index.md 문서를 시작으로 테스트로 2-3 개의 문서를 작성해 본다. $ vim Step3. Hugo 설치 및 설정 hugo 및 테마 papermod 설치 $ sudo apt install hugo $ hugo version $ hugo new site ~/data/www -f yml $ tree ~/data/www . ├── themes ├── static ├── layouts ├── data ├── content ├── config.toml └── archetypes └── default.md $ cd ~/data/www $ git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 설정 및 테스트 설정파일: ~/data/www/config.yml 테스트파일: ~/data/www/content/wiki/my-first-post.md $ cd ~/data/www $ echo \u0026#39;Theme: \u0026#34;PaperMod\u0026#34;\u0026#39; \u0026gt;\u0026gt; config.yml $ hugo new wiki/my-first-post.md $ vim wiki/my-first-post.md html 파일을 임시로 자동생성하고 로컬 웹서버를 띄우기 $ cd ~/data/www $ hugo -D server 브라우저에서 확인 http://127.0.0.1:1313\nhtml 파일을 목적지에 생성하기\n$ cd ~/data/www $ hugo -D # default: `~/data/www/public` $ hugo -D -d ~/data/your_idname.github.io # 깃허브 로컬저장소 Step4. Vimwiki문서를 Hugo에서 처리하여 깃허브에 업로드하기 vimwiki 작성시 반드시 frontmatter를 넣어 문서를 작성한다. --- title: 문서1 date: 2022-08-24T16:28:44+09:00 (vim의 strftime이용, iabbr기능이용) lastmod: 위형식으로 수정한 날짜 입력(vim의 strftime 이용) tags: [\u0026#34;테그1\u0026#34;,\u0026#34;테그2\u0026#34;] categories: [\u0026#34;category1\u0026#34;,\u0026#34;category2\u0026#34;] \u0026#34;weight\u0026#34;: 1 --- ## 소제목 1 * 내용 1 * 내용 2 ## 소제목 2 * 내용 3 * 내용 4 * [문서2](문서2) 작성된 문서(마크다운)들을 링크를 변환하여 hugo 웹개발 폴더에 복사한다.\n이 부분이 제일 문제인데 vimwiki 파일 내의 링크 형식 [문서2](문서2)가 hugo에서 html변환 시 링크를 잘 못 처리하는 데 있다. 이를 여러 가지로 알아 보았는데 hugo에서는 복잡한 설정으로 사용하기 어렵고 자동화하기도 어렵다. 각 페이지마다 hugo식의 링크방식을 넣어주어야 한다. vimwiki에서 이를 변경할 수 있다해도 vimwiki 본래의 링크 연결이 안되어 문제가 된다. 현재로서는 vimwiki의 모든 md파일을 hugo 웹개발 폴더에 복사하는 중간에 이것을 처리해 주도록 하면 된다. 즉, [문서2](문서2) 부분을 [문서2](../문서2)로 바꾸어 준다. 그 이유는 html 결과물이 BASE_URL/문서1/index.html 이런 폴더 형식으로 바뀌기 때문에 hugo프로젝트에 들어온 마크다운의 링크 입장에서는 상위로 가서 문서2 폴더로 이동해야 하기 때문이다. 파일 내 링크 변환\n~/data/vimwiki/*.md --\u0026gt; 파일 내 링크 변환 --\u0026gt; ~/data/www/content/wiki/\n이를 처리하는 스크립트를 작성 (핵심만 표현) #!/usr/bin/env bash # prog_name: blogen.sh src=\u0026#34;~/data/vimwiki\u0026#34; dst=\u0026#34;~/data/www/content/wiki for file in ${src}/*.md do # 기본 파일 이름을 구함 base_name=$(basename $file) # 넘어온 파일 중에 index.md는 파일이름을 바꿈: hugo에서 문제 발생 if [ \u0026#34;$base_name\u0026#34; == \u0026#34;index.md\u0026#34; ];then base_name=\u0026#34;wiki-index.md\u0026#34; # 파일 내에 있는 링크를 모두 수정해서 hugo 개발폴더에 넣어준다. # 아래 필터링은 마크다운의 인용구에 대해서도 링크를 처리하는 문제점이 있다. # 추후 정교하게 다시 만들 필요가 있다. cat $file | \\ sed -e \u0026#39;s|](|](../|g\u0026#39; -e \u0026#39;s|](../http|](http|g\u0026#39; \\ \u0026gt; ${dst}/${basename} done 수정사항 - 위 코드의 문제점 때문에 쉘스크립트를 파일로 부터 한 줄씩 넘기면서 처리토록 하였다. 한 줄에 하나 이상의 링크일 경우, 외부 링크일 경우, 단어 인용, 구문인용 등을 식별하여 모두 처리하도록 하였다. 그러나 grep이나 sed 등을 모든 경우에 사용하다보니 속도가 많이 느려졌다. 이를 개선하기 위해 lua를 공부하여 만들었는데 매우 빠른 처리가 가능했다. 그리고 더욱 처리 성능을 높인 것은 변경된 또는 새로 추가된 파일만 식별해서 처리하도록 한 것이다. 기본 아이디어는 스크립트를 실행시 시간을 자동 저장하고, 다음 처리 때 이 시간과 파일의 mtime을 비교하는 것이다. 이 스크립트는 며칠 공부하고 만든 것이라 많이 부족하지만 혹시 참고가 될까 하여 링크를 걸어 두었다. 이를 vim에서 단축키 실행 등록을 해두면 편하다. 글에만 집중할 수 있게 된다. https://github.com/neosolaris/neosolaris.github.io/blob/main/www/blogen-0.1.lua 로컬 웹서버를 띄우고 브라우저에서 오류나 문제점들을 확인한다. $ hugo -D server 웹페이지를 로컬저장소에 만들고, github 저장소로 업데이트 한다. $ cd ~/data/www $ hugo -D -d ~/data/your_idname.github.io $ cd ~/data/your_idname.github.io $ git add . \u0026amp;\u0026amp; git commit . -m \u0026#34;update files\u0026#34; \u0026amp;\u0026amp; git push 브라우저에서 확인한다. (업데이트 이후 변경을 확인하는데 2-5분 소요) Step5. 자동화 하기 vimwiki에서 작성한 문서를 vimwki2html이라는 기능으로 변환이 가능하나 이는 hugo 스타일과 맞지 않기 때문에 위의 blogen.sh를 수행하도록 한다.\nbolgen.sh {gen|push|all}로 기능을 확장시키고 이를 상황에 따라 실행한다. blogen.sh gen - vimwiki에서 hugo로 옮길 때 링크변환 및 html 생성하기 blogen.sh push - github에 올리기 blogen.sh all - 위 두 과정 모두 실행 vimwiki에서 문서 작업 완료 후 실행하기 - vim lastline mode\n물론 blogen.sh가 PATH에 설정되어 있어야 한다. :! blogen.sh {gen|push|all} 참고 사항 vimwik의 기준이 되는 문서 index.md 파일은 hugo에서의 충돌로 wiki-index.md로 바꿔주어야 한다. hugo에서는 가장 최신의 문서가 블로그 홈화면의 최상위로 뜨며 다섯개가 기본. 우선 순위는 frontmatter에서 weight=1 식으로 줄 수 있다. 1이 최상. ~/data/www도 어차피 개발 폴더이기 때문에 ~/data/your_idname.github.io/www로 포함시키고 깃허브에서 통합해서 관리하는 것도 좋겠다. 이 경우 분리된 상태로 먼저 작업했다가 페이지가 안정적으로 동작하고 난 후에 개발폴더를 옮겨 준다. 이에 따라 변경된 폴더들을 blogen.sh에도 잘 반영해야한다. 기본 15 페이지 기준으로 ~/data/www는 약 1.2Mb 정도이다. 이제 웹개발 환경이 구축되었으므로 블로그를 본격적으로 꾸며간다. 이것은 테마 papermod를 사용하였으므로 papermod 설치 및 설정을 참고한다. TODO 2022.10.06: 오타 수정, shell 명령어 인용코드 정리 2022.09.12: vimwiki에서 파일명과 링크를 수정했을 때 hugo에서 과거 파일이 남는 문제 처리 프로그램 blogen.lua에 양쪽의 파일을 조사하여 동기화 처리 Links https://cristianpb.github.io/blog/vimwiki-hugo https://gohugo.io/getting-started/quick-start/ https://themes.gohugo.io/themes/hugo-papermod/ ","permalink":"https://neosolaris.github.io/posts/vimwiki-hugo-github/","summary":"\u003ch2 id=\"소개\"\u003e소개\u003c/h2\u003e\n\u003cp\u003e마크다운 문서를 vimwiki로 작성하여 간단한 메모에서 부터 블로그, 리포트, 기술 문서에 이르기까지 손쉽게 만들 수 있다. 이를 기반으로 하여 깃허브에서 제공하는 무료 웹사이트에 올리는 방법을 설명하고자 한다. 아래는 간략한 개요이다.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003evimwiki + hugo + github.io\u003c/code\u003e 를 연결하는 프로젝트이다.\u003c/li\u003e\n\u003cli\u003evim의 vimwiki 플러그인을 사용하여 위키문서를 작성한다.\u003c/li\u003e\n\u003cli\u003e위키문서의 작성은 마크다운(../markdown) 문법으로 한다.\u003c/li\u003e\n\u003cli\u003ehugo를 사용하여 임시 로컬웹서버를 띄우고 위키문서를 html로 변환하고 브라우저에서 확인한다.\u003c/li\u003e\n\u003cli\u003e변환된 정적 html 문서를 깃허브에 올린다.\u003c/li\u003e\n\u003cli\u003e깃허브 페이지에서 이를 확인한다.\u003c/li\u003e\n\u003cli\u003eUTF-8인코딩이라면 한글도 특별히 문제가 없고 잘 된다. 다만 마크다운 파일명에 공백이 들어가면 관리가 좋지 않으니 \u003ccode\u003e-\u003c/code\u003e등으로 연결해서 쓴다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설치-환경\"\u003e설치 환경\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eOS 및 프로그램 버전\u003c/p\u003e","title":"Vimwiki Hugo Github.io 연동하기"},{"content":"Install \u0026amp; Setup ubuntu firefox - 우분투에서 파이어폭스 설치 Plugins Markdown Viewer Webext - 로컬의 마크다운 파일을 html로 보기 vimium c - vim 명령어 환경으로 파이어폭스 사용하기 ","permalink":"https://neosolaris.github.io/posts/firefox/","summary":"\u003ch2 id=\"install--setup\"\u003eInstall \u0026amp; Setup\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../ubuntu-firefox\"\u003eubuntu firefox\u003c/a\u003e - 우분투에서 파이어폭스 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"plugins\"\u003ePlugins\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../markdown-viewer-webtext\"\u003eMarkdown Viewer Webext\u003c/a\u003e - 로컬의 마크다운 파일을 html로 보기\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../vimium-c\"\u003evimium c\u003c/a\u003e - vim 명령어 환경으로 파이어폭스 사용하기\u003c/li\u003e\n\u003c/ul\u003e","title":"Firefox"},{"content":"GitHub TOC 만들기 방법 다음처럼 작성하면 된다. # My menu * [목차1][home] * [목차2][techdocs] * [목차3][usermanual] [home]: https://github.com/myproject/wiki/목차1 [techdocs]: https://github.com/myproject/wiki/목차2 [usermanual]: https://github.com/myproject/wiki/목차3 Reference Github Wiki에서 TOC 만들기 ","permalink":"https://neosolaris.github.io/posts/github-toc/","summary":"\u003ch1 id=\"github-toc-만들기\"\u003eGitHub TOC 만들기\u003c/h1\u003e\n\u003ch2 id=\"방법\"\u003e방법\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e다음처럼 작성하면 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# My menu \n\t* [목차1][home] \n\t* [목차2][techdocs] \n\t* [목차3][usermanual] \n\n[home]: https://github.com/myproject/wiki/목차1 \n[techdocs]: https://github.com/myproject/wiki/목차2 \n[usermanual]: https://github.com/myproject/wiki/목차3\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://ruby-kim.github.io/2022/04/07/Hexo/Install/\"\u003eGithub Wiki에서 TOC 만들기\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Github toc"},{"content":" 2023-08-26: TIP 추가: gitignore 깃허브 가입과 설정 GitHub Home 에 가입한다. 새로운 저장소(Repository)를 만든다. 저장소의 주소를 확인한다.(Code 아이콘를 클릭) Github 제약사항 비공개 저장소(Private Repository): 유료에서 무료로 변경 (협업 3명까지) Github 가격페이지 (개인용플랜 Free, 유료플랜 Pro)\nPro의 장점 비공개 저장소에 대한 페이지와 위키 제공 비공개 저장소에 대한 공동작업자 무제한 2019.1월 기준으로 모든 Repository 및 파일 무제한 단, 다음을 권장\n모든 Repository의 갯수는 무제한 각 Repository를 1GB가 넘지 않도록 한다.(100GB Hard Limit) 각 파일은 100MB를 넘지 않는다. Github 등록 username, email address neosolaris/batutah@gmail.com git 설치 sudo apt install git Create Repository Repository Name: cmdTree Security Stat: Private initialize this repository with a README Add .gitignore: 깃허브로 올리지 않을 파일 선택 Add a license: 저장소 생성과 함께 라이센스 파일의 설치가 자동 수행 My Address: https://github.com/neosolaris/cmdTree Readme를 생성하지 말고\nClient Setup Git User Setup $ git config --global user.name neosolaris $ git config --global user.email batutah@gmail.com New project Setup mkdir -p ~/mygit/cmdTree # 프로젝트 폴더 생성 cd ~/mygit/cmdTree # 이동 git init # git 초기화 git status # 상태확인 ( Coding ...) touch Readme.txt # 코딩 또는 파일 생성 git add Readme.txt # git에 파일 추가 git add . (현재 디렉토리의 모든 파일) git commit -m \u0026#34;Comment\u0026#34; # 커밋해서 스냅샷 만들기 원격저장소 연결 $ git remote add origin https://github.com/neosolaris/cmdTree.git $ git remote -v # 연결상태 확인 $ git push origin master # 깃허브로 푸시 일과 정리 cd ~/mygit/cmdTree git pull # check first before coding ( Coding ...) git add . git commit -m \u0026#34;Edit ...\u0026#34; git push Client Setup2 이것을 하기전에 github ssh key 인증을 사용하여 github에 등록을 먼저한다.\n그리고 저장소(repository)를 생성한다.\nCreate New Repository Github.com\nclient에서 하는 방법이 있는지는 아직 모르겠다.\n저장소 생성은 우선 GitHub 홈페이지에서 만든다.\nGit User Setup\ncd ~/devel_git git config --global user.name neosolaris git config --global user.email batutah@gmail.com git clone git@github.com:neosolaris/memo.git memo cd memo git remote set-url git@github.com:neosolaris/memo.git #저장소등록 Coding and Push git pull ... (Coding) git add . git commit . -m \u0026#34;Edit...\u0026#34; git push 저장소 생성 및 업로드 - 최신 Create a new repository on the command line echo \u0026#34;# myproject\u0026#34; \u0026gt;\u0026gt; README.mkdir git init git add README.md git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin git@github.com:neosolaris/myproject.git git push -u origin main Push an existing repository from the command line git remote add origin git@github.com:neosolaris/myproject.git git branch -M main git push -u origin main TIPS .gitignore $ vi ~/.gitignore *.log *.bak temp/ .local/state/ :wq $ git rm -r --cached . $ git add . $ git commit -m \u0026#34;Apply .gitignore\u0026#34; ","permalink":"https://neosolaris.github.io/posts/github-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/","summary":"\u003cul\u003e\n\u003cli\u003e2023-08-26: TIP 추가: gitignore\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"깃허브-가입과-설정\"\u003e깃허브 가입과 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://github.com\"\u003eGitHub Home\u003c/a\u003e 에 가입한다.\u003c/li\u003e\n\u003cli\u003e새로운 저장소(Repository)를 만든다.\u003c/li\u003e\n\u003cli\u003e저장소의 주소를 확인한다.(Code 아이콘를 클릭)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"github-제약사항\"\u003eGithub 제약사항\u003c/h2\u003e\n\u003cp\u003e비공개 저장소(Private Repository): 유료에서 무료로 변경 (협업 3명까지)\nGithub 가격페이지 (개인용플랜 Free, 유료플랜 Pro)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePro의 장점\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003e비공개 저장소에 대한 페이지와 위키 제공\u003c/li\u003e\n\u003cli\u003e비공개 저장소에 대한 공동작업자 무제한\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e2019.1월 기준으로 모든 Repository 및 파일 무제한\n단, 다음을 권장\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e모든 Repository의 갯수는 무제한\u003c/li\u003e\n\u003cli\u003e각 Repository를 1GB가 넘지 않도록 한다.(100GB Hard Limit)\u003c/li\u003e\n\u003cli\u003e각 파일은 100MB를 넘지 않는다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"github-등록\"\u003eGithub 등록\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eusername, email address\nneosolaris/batutah@gmail.com\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"git-설치\"\u003egit 설치\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install git\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-repository\"\u003eCreate Repository\u003c/h2\u003e\n\u003cp\u003eRepository Name: cmdTree\nSecurity Stat: Private\ninitialize this repository with a README\nAdd .gitignore: 깃허브로 올리지 않을 파일 선택\nAdd a license: 저장소 생성과 함께 라이센스 파일의 설치가 자동 수행\nMy Address: \u003ca href=\"https://github.com/neosolaris/cmdTree\"\u003ehttps://github.com/neosolaris/cmdTree\u003c/a\u003e\nReadme를 생성하지 말고\u003c/p\u003e","title":"Github 사용하기"},{"content":" Laste Updated: 2022.08.17 깃허브에서 정책이 변경되어 비밀번호로 인증을 더이상 지원하지 않는다. 다른 인증 방법은 github의 보안키 발급과 ssh key를 등록하는 방법이 있다. 여기에서는 ssh key를 만들어 github에 등록하여 사용하는 방법이다. CREATE SSH KEY: enter, enter, enter rsa로 키를 만들 경우 ssh-keygen -t rsa -b 4096 -C $email ls ~/.ssh/id_rsa #private key ls ~/.ssh/id_rsa.pub #public key ed25519로 키를 만들 경우 (추천: 보다 간결하고 강화된 방식) ssh-keygen -t ed25519 -C “yourmail@mail.com” ls ~/.ssh/id_ed25519 #private key ls ~/.ssh/id_ed25519.pub #public key 생성한 pub 키를 GitHub에 등록하기 생성한 키 중 pub키를 복사한다. 깃허브에 로그인하여 다음 메뉴를 찾아 클릭. |Github Home \u0026gt; Settings \u0026gt; SSH and GPG Keys \u0026gt; New SSH Key Title에 제목을 입력하고 \u0026ldquo;Add SSH Key\u0026quot;를 눌러 등록 완료. 터미널에서 새로운 프로토콜(SSH 인증방식)으로 연결 깃허브에 성공적으로 연결되는 지 확인 ssh -T git@github.com 깃허브에 연결 및 저장소 등록 git remote set-url origin git@github.com:user_name/repo_name.git Comment 이 방식은 https방식보다 간결한 URL과 편리한 사용법이 좋다. 또한 깃허브로부터 인증키를 받는 방식은 기간제한이 있다. 다른 컴퓨터에서 연결할 경우 ssh 키를 만들어 pub키를 깃허브에 추가해주면 된다. Reference https://medium.com/ntust-aivc/instruction-for-adding-an-ssh-key-to-your-github-account-ubuntu20-04-3-lts-f9f7802ed734 ","permalink":"https://neosolaris.github.io/posts/github-ssh-key-%EC%9D%B8%EC%A6%9D/","summary":"\u003cul\u003e\n\u003cli\u003eLaste Updated: 2022.08.17\u003c/li\u003e\n\u003cli\u003e깃허브에서 정책이 변경되어 비밀번호로 인증을 더이상 지원하지 않는다.\u003c/li\u003e\n\u003cli\u003e다른 인증 방법은 github의 보안키 발급과 ssh key를 등록하는 방법이 있다.\u003c/li\u003e\n\u003cli\u003e여기에서는 ssh key를 만들어 github에 등록하여 사용하는 방법이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"create-ssh-key-enter-enter-enter\"\u003eCREATE SSH KEY: enter, enter, enter\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../rsa\"\u003ersa\u003c/a\u003e로 키를 만들 경우\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003essh-keygen -t rsa -b 4096 -C $email\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003els ~/.ssh/id_rsa      #private key\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003els ~/.ssh/id_rsa.pub  #public key\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../ed25519\"\u003eed25519\u003c/a\u003e로 키를 만들 경우 (추천: 보다 간결하고 강화된 방식)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003essh-keygen -t ed25519 -C “yourmail@mail.com”\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003els ~/.ssh/id_ed25519      #private key\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003els ~/.ssh/id_ed25519.pub  #public key\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"생성한-pub-키를-github에-등록하기\"\u003e생성한 pub 키를 GitHub에 등록하기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e생성한 키 중 pub키를 복사한다.\u003c/li\u003e\n\u003cli\u003e깃허브에 로그인하여 다음 메뉴를 찾아 클릭.\n|Github Home \u0026gt; Settings \u0026gt; SSH and GPG Keys \u0026gt; New SSH Key\u003c/li\u003e\n\u003cli\u003eTitle에 제목을 입력하고 \u0026ldquo;Add SSH Key\u0026quot;를 눌러 등록 완료.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"터미널에서-새로운-프로토콜ssh-인증방식으로-연결\"\u003e터미널에서 새로운 프로토콜(SSH 인증방식)으로 연결\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e깃허브에 성공적으로 연결되는 지 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003essh -T git@github.com\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e깃허브에 연결 및 저장소 등록\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003egit remote set-url origin git@github.com:user_name/repo_name.git\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"comment\"\u003eComment\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e이 방식은 https방식보다 간결한 URL과 편리한 사용법이 좋다.\u003c/li\u003e\n\u003cli\u003e또한 깃허브로부터 인증키를 받는 방식은 기간제한이 있다.\u003c/li\u003e\n\u003cli\u003e다른 컴퓨터에서 연결할 경우 ssh 키를 만들어 pub키를 깃허브에 추가해주면 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://medium.com/ntust-aivc/instruction-for-adding-an-ssh-key-to-your-github-account-ubuntu20-04-3-lts-f9f7802ed734\"\u003ehttps://medium.com/ntust-aivc/instruction-for-adding-an-ssh-key-to-your-github-account-ubuntu20-04-3-lts-f9f7802ed734\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"GitHub에 SSH Key로 인증하기"},{"content":" 2022.09.08 - 링크 수정, 오타 수정 Install ubuntu 에서 패키지로 설치 $ sudo apt install hugo $ hugo version Create a New SIte $ hugo new site my_site -f yml Add a Theme 설치와 설정에 대한 자세한 사항은 hugo papermod를 참고.\nPaperMod 테마 설치\n$ cd my_site $ git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 Update $ cd themes/PaperMod $ git pull Add theme set in config.yml $ echo \u0026#39;theme: \u0026#34;PaperMod\u0026#34;\u0026#39; \u0026gt;\u0026gt; config.yml 또는 PaperMod 홈에 가서 config.yml을 복사한다. Sample Page 만들기 --- title: \u0026#34;My 1st post\u0026#34; date: 2020-09-15T11:30:03+00:00 # weight: 1 # aliases: [\u0026#34;/first\u0026#34;] tags: [\u0026#34;first\u0026#34;] author: \u0026#34;Me\u0026#34; # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors showToc: true TocOpen: false draft: false hidemeta: false comments: false description: \u0026#34;Desc Text.\u0026#34; canonicalURL: \u0026#34;https://canonical.url/to/page\u0026#34; disableHLJS: true # to disable highlightjs disableShare: false disableHLJS: false hideSummary: false searchHidden: true ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true cover: image: \u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34; # image path/url alt: \u0026#34;\u0026lt;alt text\u0026gt;\u0026#34; # alt text caption: \u0026#34;\u0026lt;text\u0026gt;\u0026#34; # display caption under cover relative: false # when using page bundles set this to true hidden: true # only hide on current single page editPost: URL: \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text: \u0026#34;Suggest Changes\u0026#34; # edit text appendFilePath: true # to append file path to Edit link --- ## This is sample Page Hello World! 페이지 생성1: my_site/contents/sample.md가 들어간다. $ hugo new --kind post sample.md 페이지 생성2: my_site/contents/posts/my-first-post.md가 생성된다. $ hugo new posts/my-first-post.md LANGUAGE CODE 설정 my_site/langcode.yaml 을 추가하고 설정한다. - id: prev_page translation: \u0026#34;Prev\u0026#34; - id: next_page translation: \u0026#34;Next\u0026#34; - id: read_time translation: one: \u0026#34;1 min\u0026#34; other: \u0026#34;{{ .Count }} min\u0026#34; - id: words translation: one: \u0026#34;word\u0026#34; other: \u0026#34;{{ .Count }} words\u0026#34; - id: toc translation: \u0026#34;Table of Contents\u0026#34; - id: translations translation: \u0026#34;Translations\u0026#34; - id: home translation: \u0026#34;Home\u0026#34; - id: edit_post translation: \u0026#34;Edit\u0026#34; - id: code_copy translation: \u0026#34;copy\u0026#34; - id: code_copied translation: \u0026#34;copied!\u0026#34; Start the Hugo Server 아래와 같이 서버를 실행하고 브라우저에서 http://localhost:1313 으로 확인 실행 위치는 my_site/ 내에서 해야한다. $ hugo server -D Links https://cristianpb.github.io/blog/vimwiki-hugo https://gohugo.io/getting-started/quick-start/ https://themes.gohugo.io/themes/hugo-papermod/ ","permalink":"https://neosolaris.github.io/posts/hugo/","summary":"\u003cul\u003e\n\u003cli\u003e2022.09.08 - 링크 수정, 오타 수정\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../ubuntu\"\u003eubuntu\u003c/a\u003e 에서 패키지로 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e sudo apt install hugo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e hugo version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"create-a-new-site\"\u003eCreate a New SIte\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e hugo new site my_site -f yml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"add-a-theme\"\u003eAdd a Theme\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e설치와 설정에 대한 자세한 사항은 \u003ca href=\"../hugo-papermod\"\u003ehugo papermod\u003c/a\u003e를 참고.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePaperMod 테마 설치\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e my_site\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eUpdate\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e themes/PaperMod\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e git pull\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eAdd theme set in \u003ccode\u003econfig.yml\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;theme: \u0026#34;PaperMod\u0026#34;\u0026#39;\u003c/span\u003e \u0026gt;\u0026gt; config.yml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e또는 \u003ca href=\"../https://github.com/adityatelange/hugo-PaperMod/wiki/Installation\"\u003ePaperMod\u003c/a\u003e 홈에 가서 config.yml을 복사한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"sample-page-만들기\"\u003eSample Page 만들기\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-markdown\" data-lang=\"markdown\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etitle: \u0026#34;My 1st post\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edate: 2020-09-15T11:30:03+00:00\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gh\"\u003e# weight: 1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gh\"\u003e# aliases: [\u0026#34;/first\u0026#34;]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gh\"\u003e\u003c/span\u003etags: [\u0026#34;first\u0026#34;]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eauthor: \u0026#34;Me\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gh\"\u003e# author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gh\"\u003e\u003c/span\u003eshowToc: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eTocOpen: false\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edraft: false\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehidemeta: false\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecomments: false\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edescription: \u0026#34;Desc Text.\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecanonicalURL: \u0026#34;https://canonical.url/to/page\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edisableHLJS: true # to disable highlightjs\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edisableShare: false\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003edisableHLJS: false\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehideSummary: false\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esearchHidden: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eShowReadingTime: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eShowBreadCrumbs: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eShowPostNavLinks: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eShowWordCount: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eShowRssButtonInSectionTermList: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eUseHugoToc: true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecover:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\timage: \u0026#34;\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003eimage\u003c/span\u003e \u003cspan class=\"na\"\u003epath\u003c/span\u003e\u003cspan class=\"err\"\u003e/\u003c/span\u003e\u003cspan class=\"na\"\u003eurl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u0026#34; # image path/url\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\talt: \u0026#34;\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003ealt\u003c/span\u003e \u003cspan class=\"na\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u0026#34; # alt text\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\tcaption: \u0026#34;\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u0026#34; # display caption under cover\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\trelative: false # when using page bundles set this to true\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\thidden: true # only hide on current single page\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eeditPost:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\tURL: \u0026#34;https://github.com/\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nt\"\u003epath_to_repo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e/content\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\tText: \u0026#34;Suggest Changes\u0026#34; # edit text\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\tappendFilePath: true # to append file path to Edit link\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e---\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gu\"\u003e## This is sample Page\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gu\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eHello World!\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e페이지 생성1: \u003ccode\u003emy_site/contents/sample.md\u003c/code\u003e가 들어간다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e hugo new --kind post sample.md\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e페이지 생성2: \u003ccode\u003emy_site/contents/posts/my-first-post.md\u003c/code\u003e가 생성된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e hugo new posts/my-first-post.md\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"language-code-설정\"\u003eLANGUAGE CODE 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003emy_site/langcode.yaml\u003c/code\u003e 을 추가하고 설정한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eprev_page\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Prev\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003enext_page\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Next\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eread_time\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;1 min\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;{{ .Count }} min\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ewords\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;word\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003eother\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;{{ .Count }} words\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etoc\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Table of Contents\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003etranslations\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Translations\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehome\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Home\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eedit_post\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;Edit\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecode_copy\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;copy\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e- \u003cspan class=\"nt\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecode_copied\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003etranslation\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;copied!\u0026#34;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"start-the-hugo-server\"\u003eStart the Hugo Server\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래와 같이 서버를 실행하고 브라우저에서 \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e 으로 확인\u003c/li\u003e\n\u003cli\u003e실행 위치는 \u003ccode\u003emy_site/\u003c/code\u003e 내에서 해야한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e hugo server -D\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://cristianpb.github.io/blog/vimwiki-hugo\"\u003ehttps://cristianpb.github.io/blog/vimwiki-hugo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://gohugo.io/getting-started/quick-start/\"\u003ehttps://gohugo.io/getting-started/quick-start/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://themes.gohugo.io/themes/hugo-papermod/\"\u003ehttps://themes.gohugo.io/themes/hugo-papermod/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Hugo - Fast and flexible Static Site Generator written in Go"},{"content":"소개 깃허브에서 제공하는 깃페이지 github io에 웹 블로그 환경을 만들 수 있는 프로젝트이다. 현재 나는 hugo로 전환하였다. 이 문서는 더 이상 업데이트 되지 않을 것이다. 혹시 이 문서를 보는 분을 위하여 가장 잘 설명해 놓은 곳을 소개한다. https://devinlife.com/howto/ Install sudo apt update sudo apt install ruby ruby-dev cat\u0026gt;\u0026gt;EOF \u0026gt;\u0026gt; ~/.bashrc # Ruby exports export GEM_HOME=$HOME/gems export PATH=$HOME/gems/bin:$PATH EOF source ~/.bashrc gem install jekyll bundler 개발 사이트 만들기 프로젝트 생성 후 서버 시작 jekyll new www cd www/ bundle exec jekyll serve jekyll 서버 실행 에러시 cd www/ echo \u0026#39;gem \u0026#34;webrick\u0026#34;\u0026#39; \u0026gt;\u0026gt; Gemfile bundle install bundle exec jekyll serve --host 127.0.0.1 --port 4000 브라우저에서 다음 URL로 확인 http://127.0.0.1:4000 폴더 내의 변경은 자동 업데이트된다. 그러나 _config.yml의 경우는 jekyll serve를 재실행 해주어야 한다. 테마 프로젝트 설치 minimal mistakes Links https://devinlife.com/howto Jekill 홈페이지 ","permalink":"https://neosolaris.github.io/posts/jekyll/","summary":"\u003ch2 id=\"소개\"\u003e소개\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e깃허브에서 제공하는 깃페이지 \u003ca href=\"../github.io\"\u003egithub io\u003c/a\u003e에 웹 블로그 환경을 만들 수 있는 프로젝트이다.\u003c/li\u003e\n\u003cli\u003e현재 나는 \u003ca href=\"../hugo\"\u003ehugo\u003c/a\u003e로 전환하였다.\u003c/li\u003e\n\u003cli\u003e이 문서는 더 이상 업데이트 되지 않을 것이다.\u003c/li\u003e\n\u003cli\u003e혹시 이 문서를 보는 분을 위하여 가장 잘 설명해 놓은 곳을 소개한다.\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://devinlife.com/howto/\"\u003ehttps://devinlife.com/howto/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install ruby ruby-dev\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003ecat\u0026gt;\u0026gt;EOF \u0026gt;\u0026gt; ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e Ruby exports\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eexport GEM_HOME=$HOME/gems\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eexport PATH=$HOME/gems/bin:$PATH\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003esource ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003egem install jekyll bundler\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"개발-사이트-만들기\"\u003e개발 사이트 만들기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e프로젝트 생성 후 서버 시작\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ejekyll new www\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ecd www/\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ebundle exec jekyll serve \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ejekyll 서버 실행 에러시\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ecd www/\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eecho \u0026#39;gem \u0026#34;webrick\u0026#34;\u0026#39; \u0026gt;\u0026gt; Gemfile\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ebundle install\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ebundle exec jekyll serve --host 127.0.0.1 --port 4000\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e브라우저에서 다음 URL로 확인\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehttp://127.0.0.1:4000\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e폴더 내의 변경은 자동 업데이트된다.\u003c/li\u003e\n\u003cli\u003e그러나 \u003ccode\u003e_config.yml\u003c/code\u003e의 경우는 \u003ccode\u003ejekyll serve\u003c/code\u003e를 재실행 해주어야 한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"테마-프로젝트-설치\"\u003e테마 프로젝트 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../minimal-mistakes\"\u003eminimal mistakes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://devinlife.com/howto\"\u003ehttps://devinlife.com/howto\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://jekyllrb.com/\"\u003eJekill 홈페이지\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Jekyll"},{"content":"설치 및 설정 아래한글 한컴오피스는 리눅스용 2020 베타버전이 나와있다. 그러나 기존 한글입력기로는 한글입력에 많은 문제가 있다. kime은 이 뿐만 아니라 wine등에서 한글입력 문제 등을 해결할 수 있는 방법이다. kime의 장점은 매우 간결하고 심플하다는 데 있다. 또 다른 장점은 vim 사용시 입력모드에서 한글 사용 중 esc로 명령모드로 들어가게 되면 영문으로 자동 변환된다. 한영 전환의 수고가 줄어든다. # install sudo dpkg -i kime_debian-buster_v2.5.3_amd64.deb # setup sudo mkdir -p /etc/dpkg/kime sudo cp /usr/share/doc/kime/default_config.yaml /etc/xdg/kime/config.yaml sudo vim /etc/xdg/kime/config.yaml #... #golbal_hotkeys: # Super-Space (이하여섯줄 복사해서 바로 위에 붙이고 S-Space로 수정) im-config -n kime sudo reboot # 재부팅 후 로그인 $ kime-check 한컴오피스 2020 베타 리눅스 버전 한글입력을 위한 설정 $ wget https://github.com/Riey/kime/releases/download/v2.5.2/libkime-qt-5.11.3.so $ sudo cp libkime-qt-5.11.3.so /opt/hnc/hoffice11/Bin/qt/plugins/platforminputcontexts/ 참고 한글이 안되어 이것저것 만지다보면 문제가 생긴다. 다음의 순서대로 설정한다. OS 언어환경을 en으로 유지하는 것이 가장 좋다. ubuntu 설치를 한글로 진행하면 필요한 폰트나 입력설정이 된다. 최초 로그인해서 설정\u0026gt;지역\u0026amp;언어로 들어가면 안내하는 필요패키지를 설치한다. kime 패키지를 설치한다. (sudo dpkg -i kime-xxx.deb) settings\u0026gt; keybord \u0026gt; input sources에는 English(US)와 Korean만 등록해둔다. settings\u0026gt; Region\u0026amp;Language \u0026gt; Manage Installed Languages \u0026gt; kime으로 변경 reboot후 확인 위에서 키보드에서 Korean을 설정해주어야 indicator 아이콘이 보인다. kime으로 변경하면 firefox snap에서 동작하지 않으므로 firefox 재설치 작업 REFERENCE Github Kime 설치 설치2 설치3 설치4 ","permalink":"https://neosolaris.github.io/posts/kime/","summary":"\u003ch2 id=\"설치-및-설정\"\u003e설치 및 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래한글 한컴오피스는 리눅스용 2020 베타버전이 나와있다.\u003c/li\u003e\n\u003cli\u003e그러나 기존 한글입력기로는 한글입력에 많은 문제가 있다.\u003c/li\u003e\n\u003cli\u003ekime은 이 뿐만 아니라 wine등에서 한글입력 문제 등을 해결할 수 있는 방법이다.\u003c/li\u003e\n\u003cli\u003ekime의 장점은 매우 간결하고 심플하다는 데 있다.\u003c/li\u003e\n\u003cli\u003e또 다른 장점은 vim 사용시 입력모드에서 한글 사용 중 \u003ccode\u003eesc\u003c/code\u003e로 명령모드로 들어가게 되면 영문으로 자동 변환된다. 한영 전환의 수고가 줄어든다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e install\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo dpkg -i kime_debian-buster_v2.5.3_amd64.deb\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e setup\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo mkdir -p /etc/dpkg/kime\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo cp /usr/share/doc/kime/default_config.yaml /etc/xdg/kime/config.yaml\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo vim /etc/xdg/kime/config.yaml\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003egolbal_hotkeys:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e#\u003c/span\u003e   Super-Space \u003cspan class=\"o\"\u003e(\u003c/span\u003e이하여섯줄 복사해서 바로 위에 붙이고 S-Space로 수정\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003eim-config -n kime\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo reboot # 재부팅 후 로그인\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e kime-check\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"한컴오피스-2020-베타-리눅스-버전-한글입력을-위한-설정\"\u003e한컴오피스 2020 베타 리눅스 버전 한글입력을 위한 설정\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ wget https://github.com/Riey/kime/releases/download/v2.5.2/libkime-qt-5.11.3.so\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ sudo cp libkime-qt-5.11.3.so /opt/hnc/hoffice11/Bin/qt/plugins/platforminputcontexts/\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"참고\"\u003e참고\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e한글이 안되어 이것저것 만지다보면 문제가 생긴다.\u003c/li\u003e\n\u003cli\u003e다음의 순서대로 설정한다. OS 언어환경을 en으로 유지하는 것이 가장 좋다.\n\u003col\u003e\n\u003cli\u003eubuntu 설치를 한글로 진행하면 필요한 폰트나 입력설정이 된다.\u003c/li\u003e\n\u003cli\u003e최초 로그인해서 설정\u0026gt;지역\u0026amp;언어로 들어가면 안내하는 필요패키지를 설치한다.\u003c/li\u003e\n\u003cli\u003ekime 패키지를 설치한다. (sudo dpkg -i kime-xxx.deb)\u003c/li\u003e\n\u003cli\u003esettings\u0026gt; keybord \u0026gt; input sources에는 English(US)와 Korean만 등록해둔다.\u003c/li\u003e\n\u003cli\u003esettings\u0026gt; Region\u0026amp;Language \u0026gt; Manage Installed Languages \u0026gt; kime으로 변경\u003c/li\u003e\n\u003cli\u003ereboot후 확인\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e위에서 키보드에서 Korean을 설정해주어야 indicator 아이콘이 보인다.\u003c/li\u003e\n\u003cli\u003ekime으로 변경하면 firefox snap에서 동작하지 않으므로 firefox 재설치 작업\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eREFERENCE\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://github.com/Riey/kime\"\u003eGithub Kime\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://shanepark.tistory.com/318\"\u003e설치\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://www.linuxcapable.com/how-to-install-wine-on-debian-11-bullseye\"\u003e설치2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://dawoum.tistory.com/88\"\u003e설치3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../http://no1linux.org/board_WEnl84/39530\"\u003e설치4\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"KIME (Korean IME) 한글 입력기"},{"content":"firefox: markdown viewer 플러그인 firefox의 플러그인으로 로컬내에서 마크다운을 html 페이지로 보여준다. vim과 연동하여 마크다운파일을 작성하고 실시간으로 볼 때 유용하다. Laste Updated: 2022.08.11 설치 및 설정 firefox plugin은 markdown viewer Webext 이다. 이를 설치. cat \u0026lt;\u0026lt;EOF \u0026gt; ~/.local/share/mime/packages/text-markdown.xml \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;mime-info xmlns=\u0026#39;http://www.freedesktop.org/standards/shared-mime-info\u0026#39;\u0026gt; \u0026lt;mime-type type=\u0026#34;text/plain\u0026#34;\u0026gt; \u0026lt;glob pattern=\u0026#34;*.md\u0026#34;/\u0026gt; \u0026lt;glob pattern=\u0026#34;*.mkd\u0026#34;/\u0026gt; \u0026lt;glob pattern=\u0026#34;*.mkdn\u0026#34;/\u0026gt; \u0026lt;glob pattern=\u0026#34;*.mdwn\u0026#34;/\u0026gt; \u0026lt;glob pattern=\u0026#34;*.mdown\u0026#34;/\u0026gt; \u0026lt;glob pattern=\u0026#34;*.markdown\u0026#34;/\u0026gt; \u0026lt;/mime-type\u0026gt; \u0026lt;/mime-info\u0026gt; EOF update-mime-database ~/.local/share/mime 확인 테스트 방법1) 브라우저에서 로컬에 있는 md 파일을 불러서 잘 동작하는 지 확인.\nfile:///home/user/markdown/test.md\n방법2) vim에서 test.md 파일을 작성하고 keymap으로 설정한 firefox 실행.\n~/.vimrc 설정 \u0026#34;실행키는 \u0026lt;F8\u0026gt;, firefox실행, %는 현재 편집 중인 파일, \u0026lt;CR\u0026gt;은 리턴키 map \u0026lt;F8\u0026gt; :!firefox % \u0026lt;cr\u0026gt; vim으로 작성 중 \u0026lt;F8\u0026gt;로 firefox 실행 주의사항: 작성한 파일 이름에 공백이 있으면 안된다. 참고사항 firefox가 실행중이더라도 위의 update-mime-database 명령으로 바로 적용된다. firefox에서 file:///my_url/markdown_file.md 파일을 불러오면 멋지게 보인다.* 화면의 좌측 절반은 firefox로 우측 절반은 터미널로 구성하고 vim으로 편집하고 firefox에서 확인한다. 이렇게하면 문서의 수정과 확인을 충분히 한다음 github에 한번만 커밋해서 올릴 수 있다. 시간과 인터넷자원을 절약할 수 있다. Reference Markdown Viewer Firefox ","permalink":"https://neosolaris.github.io/posts/markdown-viewer-webtext/","summary":"\u003ch1 id=\"firefox-markdown-viewer-플러그인\"\u003efirefox: markdown viewer 플러그인\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../firefox\"\u003efirefox\u003c/a\u003e의 플러그인으로 로컬내에서 \u003ca href=\"../%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4\"\u003e마크다운\u003c/a\u003e을 html 페이지로 보여준다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../vim\"\u003evim\u003c/a\u003e과 연동하여 \u003ca href=\"../%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4\"\u003e마크다운\u003c/a\u003e파일을 작성하고 실시간으로 볼 때 유용하다.\u003c/li\u003e\n\u003cli\u003eLaste Updated: 2022.08.11\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설치-및-설정\"\u003e설치 및 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../firefox\"\u003efirefox\u003c/a\u003e plugin은 markdown viewer Webext 이다. 이를 설치.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ecat \u0026lt;\u0026lt;EOF \u0026gt; ~/.local/share/mime/packages/text-markdown.xml\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u0026lt;mime-info xmlns=\u0026#39;http://www.freedesktop.org/standards/shared-mime-info\u0026#39;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e  \u0026lt;mime-type type=\u0026#34;text/plain\u0026#34;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    \u0026lt;glob pattern=\u0026#34;*.md\u0026#34;/\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    \u0026lt;glob pattern=\u0026#34;*.mkd\u0026#34;/\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    \u0026lt;glob pattern=\u0026#34;*.mkdn\u0026#34;/\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    \u0026lt;glob pattern=\u0026#34;*.mdwn\u0026#34;/\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    \u0026lt;glob pattern=\u0026#34;*.mdown\u0026#34;/\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e    \u0026lt;glob pattern=\u0026#34;*.markdown\u0026#34;/\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e  \u0026lt;/mime-type\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u0026lt;/mime-info\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eEOF\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003e\u003c/span\u003e\u003cspan class=\"err\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e\u003c/span\u003e\u003cspan class=\"go\"\u003eupdate-mime-database ~/.local/share/mime\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"확인-테스트\"\u003e확인 테스트\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e방법1) 브라우저에서 로컬에 있는 md 파일을 불러서 잘 동작하는 지 확인.\u003c/p\u003e","title":"Markdown Viewer Webext"},{"content":"INSTALL git clone https://github.com/mmistakes/minimal-mistakes.git cd minimal-mistakes/ echo \u0026#39;gem \u0026#34;webrick\u0026#34;\u0026#39; \u0026gt;\u0026gt; Gemfile bundle install bundle exec jeckyll serve --host 127.0.0.1 --port 4000 블로그 포스팅 vim _posts/my-first-post.md Links minimal-mistakes Install Setup Quick Start Guide ","permalink":"https://neosolaris.github.io/posts/minimal-mistakes/","summary":"\u003ch2 id=\"install\"\u003eINSTALL\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003egit clone https://github.com/mmistakes/minimal-mistakes.git\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ecd minimal-mistakes/\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003eecho \u0026#39;gem \u0026#34;webrick\u0026#34;\u0026#39; \u0026gt;\u0026gt; Gemfile\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ebundle install\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ebundle exec jeckyll serve --host 127.0.0.1 --port 4000\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"블로그-포스팅\"\u003e블로그 포스팅\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003evim _posts/my-first-post.md\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"links\"\u003eLinks\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://devinlife.com/howto%20github%20pages/new-blog-from-template/\"\u003eminimal-mistakes Install Setup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide/\"\u003eQuick Start Guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Minimal mistakes"},{"content":"MMTC: Minimal mpd terminal client Intro Rust로 작성된 심플한 MPD client program 현재 느낌으로는 mpc보다 조금 나은 수준이다. Install 사전에 mpc 먼저 설치해야한다. 이유는 뮤직라이브러리 관리를 지원하지 않기 때문 sudo apt install mpc git clone https://github.com/figsoda/mmtc.git cd mmtc cargo build --release mv target/release/mmtc ~/bin mmtc --help Usage q: quit r: toggle repeat R: toggle random p: pause ;: stop h or Left: seek backwards l or Right: seek forwards H: previous song L: next song Enter: play selected song or quit searching mode Space: select current song j, Down: go down in the queue k, Up: go up in the queue g: go to the top of the queue G: go to the botton of the queue /: search ctrl+u: empty search query escape: quit serching mode and empty query Reference mmtc github page mmtc-minimal mpd terminal client ","permalink":"https://neosolaris.github.io/posts/mmtc/","summary":"\u003ch1 id=\"mmtc-minimal-mpd-terminal-client\"\u003eMMTC: Minimal mpd terminal client\u003c/h1\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRust로 작성된 심플한 MPD client program\u003c/li\u003e\n\u003cli\u003e현재 느낌으로는 \u003ca href=\"../mpc\"\u003empc\u003c/a\u003e보다 조금 나은 수준이다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e사전에 \u003ca href=\"../mpc\"\u003empc\u003c/a\u003e 먼저 설치해야한다.\u003c/li\u003e\n\u003cli\u003e이유는 뮤직라이브러리 관리를 지원하지 않기 때문\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install mpc\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003egit clone https://github.com/figsoda/mmtc.git\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ecd mmtc\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003ecargo build --release\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003emv target/release/mmtc ~/bin\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003emmtc --help\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eq: quit\nr: toggle repeat\nR: toggle random\np: pause\n;: stop\nh or Left: seek backwards\nl or Right: seek forwards\nH: previous song\nL: next song\nEnter: play selected song or quit searching mode\nSpace: select current song\nj, Down: go down in the queue\nk, Up: go up in the queue\ng: go to the top of the queue\nG: go to the botton of the queue\n/: search\nctrl+u: empty search query\nescape: quit serching mode and empty query\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://github.com/figsoda/mmtc\"\u003emmtc github page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://www.linuxlinks.com/mmtc-minimal-mpd-terminal-client/\"\u003emmtc-minimal mpd terminal client\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Mmtc"},{"content":"소개 mpd의 client 프로그램으로 간결하다. mmtc, ncmpcpp 도 있으니 참고. 사용법 아래 환경변수는 ~.bashrc에 넣어두면 편리하다. $ export MPD_HOST=192.168.1.100 $ export MPD_PORT=6600 $ man mpc\t# 도움말 $ mpc play\t# 현재 리스트를 플레이 Reference Mpc Manual ","permalink":"https://neosolaris.github.io/posts/mpc/","summary":"\u003ch2 id=\"소개\"\u003e소개\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../mpd\"\u003empd\u003c/a\u003e의 client 프로그램으로 간결하다.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../mmtc\"\u003emmtc\u003c/a\u003e, \u003ca href=\"../ncmpcpp\"\u003encmpcpp\u003c/a\u003e 도 있으니 참고.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"사용법\"\u003e사용법\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래 환경변수는 \u003ccode\u003e~.bashrc\u003c/code\u003e에 넣어두면 편리하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eMPD_HOST\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e192.168.1.100\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eexport\u003c/span\u003e \u003cspan class=\"nv\"\u003eMPD_PORT\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"m\"\u003e6600\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e man mpc\t\t\u003cspan class=\"c1\"\u003e# 도움말\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e mpc play\t\u003cspan class=\"c1\"\u003e# 현재 리스트를 플레이 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://www.musicpd.org/doc/mpc/html\"\u003eMpc Manual\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"MPC - Music Player Deamon Client"},{"content":"Mpd Clients CLI mpc : 가장 간단한 프로그램 mmtc : rust 로 작성된 심플한 프로그램 ncmpc : c++로 작성, ncurse를 이용한 프로그램 ncmpcpp : ncmpc를 더욱 발전시킴, 제일 기능이 많고 편하고 마음에 든다. ","permalink":"https://neosolaris.github.io/posts/mpd/","summary":"\u003ch2 id=\"mpd-clients-cli\"\u003eMpd Clients CLI\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../mpc\"\u003empc\u003c/a\u003e : 가장 간단한 프로그램\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../mmtc\"\u003emmtc\u003c/a\u003e : \u003ca href=\"../rust\"\u003erust\u003c/a\u003e 로 작성된 심플한 프로그램\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../ncmpc\"\u003encmpc\u003c/a\u003e : c++로 작성, ncurse를 이용한 프로그램\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../ncmpcpp\"\u003encmpcpp\u003c/a\u003e : ncmpc를 더욱 발전시킴, 제일 기능이 많고 편하고 마음에 든다.\u003c/li\u003e\n\u003c/ul\u003e","title":"MPD Music Player Daemon"},{"content":" 2023-08-25: 문서 수정, 사용법 Usage 추가 설치하고 기본설정으로 사용하여도 무난하다. Install sudo apt install ncmpcpp ncmpcpp --version Setup 설정파일 편집 vim ~/.config/ncmpcpp/config 설정파일 내용 mpd_host = 192.168.1.100 mpd_port = 6600 # Enabling visualization (mpd 호스트 내에서만 동작가능) visualizer_data_source = \u0026#34;/tmp/mpd.fifo\u0026#34; visualizer_output_name = \u0026#34;my_fifo\u0026#34; visualizer_in_stereo = \u0026#34;yes\u0026#34; visualizer_type = \u0026#34;spectrum\u0026#34; visualizer_look = \u0026#34;+|\u0026#34; visualizer_look = \u0026#34;●▮\u0026#34; 설정에 관한 보다 자세한 예시\n/usr/share/doc/ncmpcpp/example/config\nEnableing Visualization 음악감상시 비주얼한 음변화를 볼 수 있는 기능 이 기능을 위해 위의 주석을 제거하고 실행한다. 단, mpd와 동일한 시스템에서 가능하다. /etc/mpd.conf 에 다음과 같이 설정하고 mpd를 재실행한다. audio_output { type \u0026#34;fifo\u0026#34; name \u0026#34;my_fifo\u0026#34; path \u0026#34;/tmp/mpd.fifo\u0026#34; format \u0026#34;44100:16:2\u0026#34; } Usage $ ncmpcpp F1 : show help 1 : show playlist ; 2 : show directory browser 3 : show search 4 : show library 5 : playlist editor 6 : tags editor 8 : visualizer p : toggle play/pause a : add selection to playlist \u0026gt; : play next track \u0026lt; :play previous track Reference AchiLinux Ncmpcpp Wiki Ncmpcpp GitHub ","permalink":"https://neosolaris.github.io/posts/ncmpcpp/","summary":"\u003cul\u003e\n\u003cli\u003e2023-08-25: 문서 수정, 사용법 Usage 추가\u003c/li\u003e\n\u003cli\u003e설치하고 기본설정으로 사용하여도 무난하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install ncmpcpp\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003encmpcpp --version\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"setup\"\u003eSetup\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e설정파일 편집\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003evim ~/.config/ncmpcpp/config\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e설정파일 내용\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003empd_host = 192.168.1.100\nmpd_port = 6600\n\n# Enabling visualization (mpd 호스트 내에서만 동작가능)\nvisualizer_data_source = \u0026#34;/tmp/mpd.fifo\u0026#34;\nvisualizer_output_name = \u0026#34;my_fifo\u0026#34;\nvisualizer_in_stereo = \u0026#34;yes\u0026#34;\nvisualizer_type = \u0026#34;spectrum\u0026#34;\nvisualizer_look = \u0026#34;+|\u0026#34;\nvisualizer_look = \u0026#34;●▮\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e설정에 관한 보다 자세한 예시\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e/usr/share/doc/ncmpcpp/example/config\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"enableing-visualization\"\u003eEnableing Visualization\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e음악감상시 비주얼한 음변화를 볼 수 있는 기능\u003c/li\u003e\n\u003cli\u003e이 기능을 위해 위의 주석을 제거하고 실행한다.\u003c/li\u003e\n\u003cli\u003e단, mpd와 동일한 시스템에서 가능하다.\u003c/li\u003e\n\u003cli\u003e/etc/mpd.conf 에 다음과 같이 설정하고 mpd를 재실행한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eaudio_output {\n    type                    \u0026#34;fifo\u0026#34;\n    name                    \u0026#34;my_fifo\u0026#34;\n    path                    \u0026#34;/tmp/mpd.fifo\u0026#34;\n    format                  \u0026#34;44100:16:2\u0026#34;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ ncmpcpp\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eF1\u003c/code\u003e : show help\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e1\u003c/code\u003e : show playlist ;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e2\u003c/code\u003e : show directory browser\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e3\u003c/code\u003e : show search\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e4\u003c/code\u003e : show library\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e5\u003c/code\u003e : playlist editor\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e6\u003c/code\u003e : tags editor\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e8\u003c/code\u003e : visualizer\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ep\u003c/code\u003e : toggle play/pause\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ea\u003c/code\u003e : add selection to playlist\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026gt;\u003c/code\u003e : play next track\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;\u003c/code\u003e :play previous track\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://wiki.archlinux.org/title/Ncmpcpp\"\u003eAchiLinux Ncmpcpp Wiki\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://github.com/ncmpcpp/ncmpcpp\"\u003eNcmpcpp GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"NCMPCPP - NCurses Music Player Client (Plus Plus)"},{"content":"","permalink":"https://neosolaris.github.io/posts/netscape/","summary":"","title":"Netscape"},{"content":"vis 간단한 루아스크립트를 어떻게 vis내에서 동작하게 하는가? 아직은 잘 모르겠으나 nvim처럼 초기화 파일에서 require하는 방식이다. luajit이 아닌 lua 3.x 버전의 API를 제공한다. 튜토리얼이나 example이 없다. vim / nvim lsp - lua language server 의 3GB 넘는 메모리 사용과 CPU 오버로드는? workspace를 한정하면 된다고 하는데 1GB로 줄었으나 노트북이 계속 헉헉댄다. nvim에서 lua로 코딩하는 이유가 심플하고 빠르고 적은 메모리 사용이 장점인데 개발 환경은 너무 지나치다. 최신 버전으로 업데이트 했으나 조금 나아졌을 뿐 여전하다. nvim을 /usr/local에 빌드하고 기존 패키지를 지웠고 PATH도 잡았는데 실행이 안된다. $ which nvim 경로가 /usr/local/bin/nvim으로 나온다. $ /usr/local/bin/nvim --verion 하면 실행도 잘 된다. $ nvim 하면 /usr/bin/nvim이 없다고 나온다. 재부팅해서 다시 로그인하면 해결된다. 옛날 Solaris에서는 이런 문제가 없었는데\u0026hellip; 사용 중 80컬럼 이상 작성하면 자동으로 개행이 되는 문제 ~/.config/nvim/init.lua에 다음 설정 vim.wo.wrap = true 자동완성 기능에서 엔터가 아니라 탭으로 완성하려면 nvim-cmp 설정에서 mapping에 [\u0026quot;\u0026lt;Tab\u0026gt;\u0026quot;]과 [\u0026quot;\u0026lt;S+Tab\u0026gt;\u0026quot;]을 설정 자세한 사항은 nvim cmp 자동완성 문서를 참조하거나 settings.lua참조 nvim에서 lua 플러그인과 설정 중 쏟아지는 에러는 어찌해야 하는가? 하나씩 공부해서 적용하고 테스트한다. 한 번에 많은 설정을 적용하지 않는다. 에러 메시지를 잘 읽어 보고 구글링 또는 해당 github의 issue 등을 참고한다. nvim 버전과 플러그인 버전이 맞지 않는 경우가 많다. nvim을 최신버전으로 설치 또는 빌드하고 플러그인도 최신버전으로 업데이트 해주면 대부분 해결된다. 이것을 몰라 정말 개고생.. vim에서는 vimwiki 파일을 편집하며 넘나들어도 자동 저장이 되었는데 nvim에서는 동작하지 않았다. 왜? vim에서 nvim으로 옮긴 후 vimwiki사용 시 이것이 많이 불편했다. 수 많은 사이트를 조사하고 알아 보았지만 똑같은 설정에도 불구하고 안됨. 해결: nvim을 최신 버전으로 업데이트하고 다음 설정을 해 주었다. md 파일을 편집하고 버퍼를 나갈 때 이를 자동으로 저장한다. init.lua: vim.api.nvim_create_autocmd(\u0026quot;BufLeave\u0026quot;, {pattern = \u0026quot;*.md\u0026quot;, command = \u0026quot;silent! wall\u0026quot;}) 만약에 내가 글을 쓰는 데 문장이 길어질 때가 있다. 그러나 내가 원하는 것은 화면 끝에 오면 자동으로 라인이 내려가는 것이다. 하지만 자동 줄바꿈이 되는 것을 원하는 것은 아니다. Linux 일반 우분투에서 default shell을 zsh로 바꾼 후 한글입력(kime)이 작동하지 않는다. 리눅스에서 폴더를 구조적 계층적으로 볼 수 있는 방법은? tree 명령어를 사용하면 된다. ls -R도 어느정도 가능 github 잘 되던 github.io의 내 블로그가 갑자기 정상적으로 보여지지 않는가?\n페이지 업데이트는 잘 이루어지나 검색이나 스타일, 폰트 등이 모두 엉망 무수한 삽질 끝에 vimwiki도 hugo도 git 명령어도 github.io도 문제가 없었다. 원인은 내가 사용하던 브라우저에서 Adblocker가 내 주소만 적용되었다. 왜? 단축키를 잘 못 눌렀거나 Adblocker의 오작동인 듯. 스마트폰으로 혹시나 해서 접속하니 잘 되었다. 그렇게 머리카락이 몇 개 더 빠졌고 내 수명이 단축되었다. github.io에 index.md, index.html 중 누가 우선하는가.\nindex.md와 index.html 모두 존재할 경우 index.html이 우선한다. github.io에서 한 폴더에 책을 만든다면 링크는 잘 연결되는가.\n계층적 구조를 만들면 조금 복잡해지지만 같은 폴더 내에서의 링크는 잘 된다. github.io에서 그리고 TOC는 어떻게 만드는가.\ngithub toc에 정리해 둠. 내 git 프로젝트 내에 또 다른 깃허브 프로젝트가 있을 때 충돌 현상은?\n여러 가지 방법이 검색하면 나오는데 내 경우는 .gitignore로 해결 상위 프로젝트의 .gitignore에 하위 프로젝트의 .git폴더를 등록하면 된다. 이렇게 해서 상위 통합 프로젝트는 통째로 깃허브에 올라가고 하위 프로젝트는 따로 깃허브에 올리는 식으로 해결했다. 예를 들어 github.io 웹페이지는 하위 공개 프로젝트로하고, 웹페이지 개발 및 생성 프로젝트는 상위 프로젝트로 만들어서 통합 관리하는 것이 좋다고 생각했기 때문이다. vimwiki nvim 업데이트 후 설정은 그대로인데 리스트 만들기인 \u0026lt;Control-Space\u0026gt;가 잘안된다. 해결: nmap('\u0026lt;C-l\u0026gt;', ':VimwikiToggleListItem\u0026lt;CR\u0026gt;')로 재정의하여 해결, 그러나 space가 왜 안 먹는지는 지금도 모른다. 이 위키가 많아지면 검색을 어떻게 해야하는가? 보긴 봤는데\u0026hellip; :VWS /검색어/, :VWB /검색어/, :lopen를 이용하면 된다. wimwiki 문서의 검색 부분 참조. ","permalink":"https://neosolaris.github.io/posts/qna/","summary":"\u003ch2 id=\"vis\"\u003evis\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 간단한 루아스크립트를 어떻게 vis내에서 동작하게 하는가?\n\u003cul\u003e\n\u003cli\u003e아직은 잘 모르겠으나 nvim처럼 초기화 파일에서 require하는 방식이다.\u003c/li\u003e\n\u003cli\u003eluajit이 아닌 lua 3.x 버전의 API를 제공한다. 튜토리얼이나 example이 없다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"vim--nvim\"\u003evim / nvim\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e lsp - lua language server 의 3GB 넘는 메모리 사용과 CPU 오버로드는?\n\u003cul\u003e\n\u003cli\u003eworkspace를 한정하면 된다고 하는데 1GB로 줄었으나 노트북이 계속 헉헉댄다. nvim에서 lua로 코딩하는 이유가 심플하고 빠르고 적은 메모리 사용이 장점인데 개발 환경은 너무 지나치다.\u003c/li\u003e\n\u003cli\u003e최신 버전으로 업데이트 했으나 조금 나아졌을 뿐 여전하다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e nvim을 /usr/local에 빌드하고 기존 패키지를 지웠고 PATH도 잡았는데 실행이 안된다.\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e$ which nvim\u003c/code\u003e 경로가 \u003ccode\u003e/usr/local/bin/nvim\u003c/code\u003e으로 나온다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e$ /usr/local/bin/nvim --verion\u003c/code\u003e 하면 실행도 잘 된다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e$ nvim\u003c/code\u003e 하면 \u003ccode\u003e/usr/bin/nvim\u003c/code\u003e이 없다고 나온다.\u003c/li\u003e\n\u003cli\u003e재부팅해서 다시 로그인하면 해결된다.\u003c/li\u003e\n\u003cli\u003e옛날 Solaris에서는 이런 문제가 없었는데\u0026hellip;\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 사용 중 80컬럼 이상 작성하면 자동으로 개행이 되는 문제\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e~/.config/nvim/init.lua\u003c/code\u003e에 다음 설정 \u003ccode\u003evim.wo.wrap = true\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 자동완성 기능에서 엔터가 아니라 탭으로 완성하려면\n\u003cul\u003e\n\u003cli\u003envim-cmp 설정에서 mapping에 \u003ccode\u003e[\u0026quot;\u0026lt;Tab\u0026gt;\u0026quot;]\u003c/code\u003e과 \u003ccode\u003e[\u0026quot;\u0026lt;S+Tab\u0026gt;\u0026quot;]\u003c/code\u003e을 설정\u003c/li\u003e\n\u003cli\u003e자세한 사항은 \u003ca href=\"../nvim-cmp\"\u003envim cmp\u003c/a\u003e 자동완성 문서를 참조하거나 settings.lua참조\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e nvim에서 lua 플러그인과 설정 중 쏟아지는 에러는 어찌해야 하는가?\n\u003cul\u003e\n\u003cli\u003e하나씩 공부해서 적용하고 테스트한다. 한 번에 많은 설정을 적용하지 않는다.\u003c/li\u003e\n\u003cli\u003e에러 메시지를 잘 읽어 보고 구글링 또는 해당 github의 issue 등을 참고한다.\u003c/li\u003e\n\u003cli\u003envim 버전과 플러그인 버전이 맞지 않는 경우가 많다. nvim을 최신버전으로 설치 또는 빌드하고 플러그인도 최신버전으로 업데이트 해주면 대부분 해결된다. 이것을 몰라 정말 개고생..\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e vim에서는 vimwiki 파일을 편집하며 넘나들어도 자동 저장이 되었는데 nvim에서는 동작하지 않았다. 왜?\n\u003cul\u003e\n\u003cli\u003evim에서 nvim으로 옮긴 후 vimwiki사용 시 이것이 많이 불편했다.\u003c/li\u003e\n\u003cli\u003e수 많은 사이트를 조사하고 알아 보았지만 똑같은 설정에도 불구하고 안됨.\u003c/li\u003e\n\u003cli\u003e해결: nvim을 최신 버전으로 업데이트하고 다음 설정을 해 주었다.\u003c/li\u003e\n\u003cli\u003emd 파일을 편집하고 버퍼를 나갈 때 이를 자동으로 저장한다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003einit.lua\u003c/code\u003e: \u003ccode\u003evim.api.nvim_create_autocmd(\u0026quot;BufLeave\u0026quot;, {pattern = \u0026quot;*.md\u0026quot;, command = \u0026quot;silent! wall\u0026quot;})\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e만약에 내가 글을 쓰는 데 문장이 길어질 때가 있다. 그러나 내가 원하는 것은 화면 끝에 오면 자동으로 라인이 내려가는 것이다.\u003c/li\u003e\n\u003cli\u003e하지만 자동 줄바꿈이 되는 것을 원하는 것은 아니다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"linux-일반\"\u003eLinux 일반\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e 우분투에서 default shell을 \u003ca href=\"../zsh\"\u003ezsh\u003c/a\u003e로 바꾼 후 한글입력(kime)이 작동하지 않는다.\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 리눅스에서 폴더를 구조적 계층적으로 볼 수 있는 방법은?\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../tree\"\u003etree\u003c/a\u003e 명령어를 사용하면 된다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003els -R\u003c/code\u003e도 어느정도 가능\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"github\"\u003egithub\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e 잘 되던 github.io의 내 블로그가 갑자기 정상적으로 보여지지 않는가?\u003c/p\u003e","title":"QnA"},{"content":" raspbian update - Update Raspbian from an Older Version to Buster ","permalink":"https://neosolaris.github.io/posts/raspberry-pi/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../raspbian-update\"\u003eraspbian update\u003c/a\u003e - Update Raspbian from an Older Version to Buster\u003c/li\u003e\n\u003c/ul\u003e","title":"Raspberry Pi 라즈베리파이"},{"content":" rust install - 러스트 설치 rust compile size - 컴파일 사이즈 줄이기 ","permalink":"https://neosolaris.github.io/posts/rust/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../rust-install\"\u003erust install\u003c/a\u003e - 러스트 설치\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../rust-compile-size\"\u003erust compile size\u003c/a\u003e - 컴파일 사이즈 줄이기\u003c/li\u003e\n\u003c/ul\u003e","title":"Rust Programming Language"},{"content":" 우분투에서는 기본설치가 아니므로 설치. Install sudo apt install tree Usage tree \u0026ndash; show folder and file tree current directory tree dir-name \u0026ndash; show folder and file tree dir-name tree -a \u0026ndash; show all dir and files (hidden dir also) tree -d \u0026ndash; show directory only tree -f \u0026ndash; show path prefix tree -o output.txt \u0026ndash; save result to output.txt Reference 내용이 더 있는데 아래 참고해서 정리 Waht is Tree Command in Ubuntu ","permalink":"https://neosolaris.github.io/posts/tree/","summary":"\u003cul\u003e\n\u003cli\u003e우분투에서는 기본설치가 아니므로 설치.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install tree\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"usage\"\u003eUsage\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003etree\u003c/code\u003e \u0026ndash; show folder and file tree current directory\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etree dir-name\u003c/code\u003e \u0026ndash; show folder and file tree dir-name\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etree -a\u003c/code\u003e \u0026ndash; show all dir and files (hidden dir also)\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etree -d\u003c/code\u003e \u0026ndash; show directory only\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etree -f\u003c/code\u003e \u0026ndash; show path prefix\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etree -o output.txt\u003c/code\u003e \u0026ndash; save result to output.txt\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e내용이 더 있는데 아래 참고해서 정리\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://linuxhint.com/tree-command-in-ubuntu/\"\u003eWaht is Tree Command in Ubuntu\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Tree Command"},{"content":"","permalink":"https://neosolaris.github.io/posts/ubuntu/","summary":"","title":"Ubuntu"},{"content":"Ubuntu 22.04 LTS 환경에서 Firefox 재설치 및 설정 Intro 우분투 22.04에서 firefox는 snap으로 설치된다. 문제는 한글입력기 kime으로 설치했을때 snap firefox는 한글 입력이 안된다. 다른 문제는 우분투 윈도우 환경에서 top bar를 숨길 수 없다. 달리 말하면, gnome-shell을 설치하고 관련 플러그인을 모두 쓸 수 없다는 것. snap firefox uninstall sudo snap remove firefox Add Mozilla Team PPA and Install 모질라팀 저장소를 추가한다. sudo add-apt-repository ppa:mozillateam/ppa 우선권을 주어 snap firefox가 설치되지 않도록 한다. (오타가 없도록 주의) sudo vim /etc/apt/preferences.d/mozillateamppa Package: firefox* Pin: release o=LP-PPA-mozillateam Pin-Priority: 501 apt update \u0026amp; install sudo apt update sudo apt install firefox Enable Top Panel Auto-Hide Install gnome-shell sudo apt install chrome-gnome-shell gnome-shell-extension-prefs Install extension firefox 실행 후 gnome shell extension을 먼저 설치한다. extension \u0026gt; hide top bar 검색 후 설치(Click to change: ON) 참고 kime dev pkg v2.5.6 설치 후 우분투윈도우 입력기를 kime으로 수정. settings\u0026gt; Region \u0026amp; Language\u0026gt; Manage Installed Languages \u0026gt; Keyboard input method system: kime 로그아웃 후 다시 로그인하면 터미널 및 firefox에 모두 한글 가능 top bar도 창이 접촉하면 자동으로 숨겨진다. 화면 공간이 더욱 여유가 생겼다. ubuntu에서 업데이트 후 한글 입력이 안되는 경우 firefox가 snap으로 자동 업그레이드 된다. 이로 인해 많은 문제 발생 local 디렉토리 중 OS외의 파티션을 firefox에서 브라우징 할 수 없다. 한글 입력이 안된다. snap remove 으로 firefox를 제거하고 ppa 저장소로 부터 재설치한다. snap이 위의 ppa priority를 무시할 경우가 있으므로 사용하지 않는 경우 데몬을 중지시킨다. $ sudo systemctl stop snapd Reference Firefox install ubuntu-22.04 https://ubuntuhandbook.org/index.php/2022/04/install-firefox-deb-ubuntu-22-04/ Autohide Top-topbar ubuntu-22.04 https://ubuntuhandbook.org/index.php/2020/08/top-panel-auto-hide-ubuntu-20-04/ ","permalink":"https://neosolaris.github.io/posts/ubuntu-firefox/","summary":"\u003ch1 id=\"ubuntu-2204-lts-환경에서-firefox-재설치-및-설정\"\u003eUbuntu 22.04 LTS 환경에서 Firefox 재설치 및 설정\u003c/h1\u003e\n\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e우분투 22.04에서 firefox는 snap으로 설치된다.\u003c/li\u003e\n\u003cli\u003e문제는 한글입력기 kime으로 설치했을때 snap firefox는 한글 입력이 안된다.\u003c/li\u003e\n\u003cli\u003e다른 문제는 우분투 윈도우 환경에서 top bar를 숨길 수 없다.\u003c/li\u003e\n\u003cli\u003e달리 말하면, gnome-shell을 설치하고 관련 플러그인을 모두 쓸 수 없다는 것.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"snap-firefox-uninstall\"\u003esnap firefox uninstall\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo snap remove firefox\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"add-mozilla-team-ppa-and-install\"\u003eAdd Mozilla Team PPA and Install\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e모질라팀 저장소를 추가한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo add-apt-repository ppa:mozillateam/ppa\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e우선권을 주어 snap firefox가 설치되지 않도록 한다. (오타가 없도록 주의)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo vim /etc/apt/preferences.d/mozillateamppa\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePackage: firefox*\nPin: release o=LP-PPA-mozillateam\nPin-Priority: 501\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003eapt update \u0026amp; install\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt update\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install firefox\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"enable-top-panel-auto-hide\"\u003eEnable Top Panel Auto-Hide\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eInstall gnome-shell\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003esudo apt install chrome-gnome-shell gnome-shell-extension-prefs\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eInstall extension\nfirefox 실행 후 gnome shell extension을 먼저 설치한다.\nextension \u0026gt; hide top bar 검색 후 설치(Click to change: ON)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"참고\"\u003e참고\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ekime dev pkg v2.5.6 설치 후 우분투윈도우 입력기를 kime으로 수정.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esettings\u0026gt; Region \u0026amp; Language\u0026gt; Manage Installed Languages \u0026gt; Keyboard input method system: kime\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e로그아웃 후 다시 로그인하면 터미널 및 firefox에 모두 한글 가능\u003c/li\u003e\n\u003cli\u003etop bar도 창이 접촉하면 자동으로 숨겨진다. 화면 공간이 더욱 여유가 생겼다.\u003c/li\u003e\n\u003cli\u003eubuntu에서 업데이트 후 한글 입력이 안되는 경우\n\u003cul\u003e\n\u003cli\u003efirefox가 snap으로 자동 업그레이드 된다. 이로 인해 많은 문제 발생\u003c/li\u003e\n\u003cli\u003elocal 디렉토리 중 OS외의 파티션을 firefox에서 브라우징 할 수 없다.\u003c/li\u003e\n\u003cli\u003e한글 입력이 안된다.\u003c/li\u003e\n\u003cli\u003esnap remove 으로 firefox를 제거하고 ppa 저장소로 부터 재설치한다.\u003c/li\u003e\n\u003cli\u003esnap이 위의 ppa priority를 무시할 경우가 있으므로 사용하지 않는 경우 데몬을 중지시킨다.\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e$ sudo systemctl stop snapd\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirefox install ubuntu-22.04\n\u003ca href=\"https://ubuntuhandbook.org/index.php/2022/04/install-firefox-deb-ubuntu-22-04/\"\u003ehttps://ubuntuhandbook.org/index.php/2022/04/install-firefox-deb-ubuntu-22-04/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAutohide Top-topbar ubuntu-22.04\n\u003ca href=\"https://ubuntuhandbook.org/index.php/2020/08/top-panel-auto-hide-ubuntu-20-04/\"\u003ehttps://ubuntuhandbook.org/index.php/2020/08/top-panel-auto-hide-ubuntu-20-04/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Ubuntu firefox"},{"content":" 설치 버전: 22.04 LTS 설치일: 2022.07.25 설치 준비 기존 윈도우11 에서 우분투를 위한 파티션 나누기 우분투 설치 USB 만들기 윈도우11의 디스크 보안 키값을 복사: 리눅스 설치 후 윈도우11 부팅\u0026gt; 시에 문제가 된다. 설치하기 준비해 둔 USB로 부팅 설치 (미리 나누어 둔 파티션에 설치) 설치 완료 설치 후 설정 한글환경 설정: 한글폰트, 시스템언어설정, 한글입력기 우분투 윈도우 환경 설정 패키지 설치 devel tools: build essential, rust, python3(기본설치) utils: rsync, curl, wget, vim, nvim, fd-find, batcat \u0026hellip; blender: 최신패키지로 설치(PPA) firefox: 최신패키지로 재설치(PPA) + plugins freecad: 최신패키지로 설치(default apt) sketchup: winehq(PPA) + sketchup2017make + plugins vim, nvim plugins 설치 및 설정 ","permalink":"https://neosolaris.github.io/posts/ubuntu-install/","summary":"\u003cul\u003e\n\u003cli\u003e설치 버전: 22.04 LTS\u003c/li\u003e\n\u003cli\u003e설치일: 2022.07.25\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설치-준비\"\u003e설치 준비\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e기존 \u003ca href=\"../windows11\"\u003e윈도우11\u003c/a\u003e 에서 우분투를 위한 파티션 나누기\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../%EC%9A%B0%EB%B6%84%ED%88%AC\"\u003e우분투\u003c/a\u003e 설치 USB 만들기\u003c/li\u003e\n\u003cli\u003e윈도우11의 디스크 보안 키값을 복사: \u003ca href=\"../linux\"\u003e리눅스\u003c/a\u003e 설치 후 윈도우11 부팅\u0026gt;    시에 문제가 된다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설치하기\"\u003e설치하기\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e준비해 둔 USB로 부팅\u003c/li\u003e\n\u003cli\u003e설치 (미리 나누어 둔 파티션에 설치)\u003c/li\u003e\n\u003cli\u003e설치 완료\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"설치-후-설정\"\u003e설치 후 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e한글환경 설정: 한글폰트, 시스템언어설정, 한글입력기\u003c/li\u003e\n\u003cli\u003e우분투 윈도우 환경 설정\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"패키지-설치\"\u003e패키지 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003edevel tools: build essential, \u003ca href=\"../rust\"\u003erust\u003c/a\u003e, python3(기본설치)\u003c/li\u003e\n\u003cli\u003eutils: rsync, curl, wget, \u003ca href=\"../vim\"\u003evim\u003c/a\u003e, \u003ca href=\"../nvim\"\u003envim\u003c/a\u003e, fd-find, batcat \u0026hellip;\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../blender\"\u003eblender\u003c/a\u003e: 최신패키지로 설치(PPA)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../firefox\"\u003efirefox\u003c/a\u003e: 최신패키지로 재설치(PPA) + plugins\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../freecad\"\u003efreecad\u003c/a\u003e: 최신패키지로 설치(default apt)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../sketchup\"\u003esketchup\u003c/a\u003e: winehq(PPA) + sketchup2017make + plugins\u003c/li\u003e\n\u003cli\u003evim, nvim plugins 설치 및 설정\u003c/li\u003e\n\u003c/ul\u003e","title":"Ubuntu install"},{"content":" vim minimal - 플러그인 없이 최소한으로 사용하기\nPlugins\nvimwiki \u0026ndash; 위키 플러그인 startify \u0026ndash; 시작화면 플러그인 nerdtree \u0026ndash; 파일 탐색 플러그인 vim devicons \u0026ndash; 아이콘 확장 플러그인 spacevim\nLinks\nvim guide commands https://vimguide.readthedocs.io/en/latest/vim.html ","permalink":"https://neosolaris.github.io/posts/vim/","summary":"\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"../vim-minimal\"\u003evim minimal\u003c/a\u003e - 플러그인 없이 최소한으로 사용하기\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePlugins\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../vimwiki\"\u003evimwiki\u003c/a\u003e \u0026ndash; 위키 플러그인\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../startify\"\u003estartify\u003c/a\u003e \u0026ndash; 시작화면 플러그인\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../nerdtree\"\u003enerdtree\u003c/a\u003e \u0026ndash; 파일 탐색 플러그인\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../vim-devicons\"\u003evim devicons\u003c/a\u003e \u0026ndash; 아이콘 확장 플러그인\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"../spacevim\"\u003espacevim\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLinks\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003evim guide commands \u003ca href=\"https://vimguide.readthedocs.io/en/latest/vim.html\"\u003ehttps://vimguide.readthedocs.io/en/latest/vim.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Vim"},{"content":"Install Plug \u0026#39;mhinz/vim-startify\u0026#39; Key Binding \u0026#34; `SPC l s` - save current session nnoremap \u0026lt;leader\u0026gt;ls :SSave\u0026lt;CR\u0026gt; \u0026#34; `SPC l l` - list sessions / switch to different project nnoremap \u0026lt;leader\u0026gt;ll :SClose\u0026lt;CR\u0026gt; Extra Configuration 아래 참조하여 더 정리 문제점 vim 에서는 잘 되는데 nvim 에서는 구버전(0.6.x), 최신버전(0.7.x) 모두 vimwiki 자동저장이 안되는 문제가 있다. Reference Github home Project Switcher Using Startify ","permalink":"https://neosolaris.github.io/posts/startify/","summary":"\u003ch2 id=\"install\"\u003eInstall\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-vimrc\" data-lang=\"vimrc\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ePlug\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;mhinz/vim-startify\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"key-binding\"\u003eKey Binding\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-vimrc\" data-lang=\"vimrc\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026#34; `SPC l s` - save current session\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ennoremap\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eleader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nx\"\u003els\u003c/span\u003e :\u003cspan class=\"nx\"\u003eSSave\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eCR\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026#34; `SPC l l` - list sessions / switch to different project\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ennoremap\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eleader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"nx\"\u003ell\u003c/span\u003e :\u003cspan class=\"nx\"\u003eSClose\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nx\"\u003eCR\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"extra-configuration\"\u003eExtra Configuration\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e아래 참조하여 더 정리\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"문제점\"\u003e문제점\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../vim\"\u003evim\u003c/a\u003e 에서는 잘 되는데 \u003ca href=\"../nvim\"\u003envim\u003c/a\u003e 에서는 구버전(0.6.x), 최신버전(0.7.x) 모두 \u003ca href=\"../vimwiki\"\u003evimwiki\u003c/a\u003e 자동저장이 안되는 문제가 있다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"reference\"\u003eReference\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../https://github.com/mhinz/vim-startify\"\u003eGithub home\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../https://ricostacruz.com/til/project-switcher-using-startify\"\u003eProject Switcher Using Startify\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Vim Startify"},{"content":" 2023-08-31: 오타 수정, 할일과 일기 항목 내용 추가 2023-08-04: nvim에서의 설정 추가, 오타 및 링크 수정 2022-09-12: vimwiki cheatsheet 링크 추가 vim에서 설치 vim의 vimwiki 플러그인을 설정 추가하고 설치한다. vim ~/.vimrc 설정 추가 내용 \u0026#34;vimwiki 플러그인 Plug \u0026#39;vimwiki/vimwiki\u0026#39;, {\u0026#39;branch\u0026#39;: \u0026#39;dev\u0026#39;} \u0026#34;vimwiki의 편한 시작을 위한 vim starter tool Plug \u0026#39;mhinz/vim-startify\u0026#39; 플러그인 설치 $ vim +PluginInstall +qall vim에서 설정 $ vim ~/.vimrc \u0026#34; vimwiki 설정 \u0026#34; 공개용 위키(github와 연동), 개인용 위키 두개를 설정(gdrive, dropbox 연동) let g:vimwiki_list = [ \\{ \\ \u0026#39;path\u0026#39;: \u0026#39;/data/vimwiki/wiki\u0026#39;, \\ \u0026#39;syntax\u0026#39; : \u0026#39;markdown\u0026#39;, \\ \u0026#39;ext\u0026#39; : \u0026#39;.md\u0026#39;, \\ \u0026#39;diary_rel_path\u0026#39;: \u0026#39;.\u0026#39;, \\}, \\{ \\ \u0026#39;path\u0026#39;: \u0026#39;/data/vimwiki/mywiki\u0026#39;, \\ \u0026#39;ext\u0026#39; : \u0026#39;.md\u0026#39;, \\ \u0026#39;diary_rel_path\u0026#39;: \u0026#39;.\u0026#39;, \\}, \\] \u0026#34; vimwiki의 conceallevel 을 끄는 것이 좋다 let g:vimwiki_conceallevel = 0 \u0026#34; vimwiki 설정이 markdown 설정을 침투하지 않게 하기 let g:vimwiki_global_ext = 0 Neovim에서 설치 플러그인 등록: ~/.config/nvim/lua/plugins.lua use {\u0026#39;vimwiki/vimwiki\u0026#39;} 플러그인 설치: nvim 내에서 :PackerInstall 플러그인 설치: shell 내에서 $ nvim + $ nvim +PluginInstall +qall Neovim에서 설정 설정: ~/.config/nvim/lua/settings.lua -- vimwiki - https://github.com/vimwiki/vimwiki ---------------------------------------------------------------- vim.cmd([[ iabbr __email abcd@efgh.com iabbr \u0026lt;expr\u0026gt; __time strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;) iabbr \u0026lt;expr\u0026gt; __date strftime(\u0026#34;%FT%R:%S+09:00\u0026#34;) iabbr \u0026lt;expr\u0026gt; __today strftime(\u0026#34;%F\u0026#34;) iabbr \u0026lt;expr\u0026gt; __file expand(\u0026#39;%:p\u0026#39;) iabbr \u0026lt;expr\u0026gt; __name expand(\u0026#39;%\u0026#39;) iabbr \u0026lt;expr\u0026gt; __pwd expand(\u0026#39;%:p:h\u0026#39;) iabbr \u0026lt;expr\u0026gt; __front system(\u0026#34;/home/borisu/bin/frontmatter.sh\u0026#34;) iabbr \u0026lt;expr\u0026gt; __luajit \u0026#39;#!/usr/bin/env luajit\u0026#39; ]]) -- Key Mapping nmap(\u0026#39;\u0026lt;C-l\u0026gt;\u0026#39;, \u0026#39;:VimwikiToggleListItem\u0026lt;CR\u0026gt;\u0026#39;) -- Contol + Space is default -- vim.g.vimwiki_autowriteall = true -- automatically save a modified wiki buffer -- vimwiki의 conceallevel 을 끔 vim.g.vimwiki_conceallevel = 0 -- vimwiki 설정이 markdown 설정을 침투하지 않게 하기 vim.g.vimwiki_global_ext = 0 -- 모든 마크다운에 대해 동작하지 않도록 함 vim.g.vimwiki_list = { { path = \u0026#39;$HOME/vimwiki/\u0026#39;, syntax = \u0026#39;markdown\u0026#39;, ext = \u0026#39;.md\u0026#39;, diary_rel_path = \u0026#39;.\u0026#39;, } } 재인식 :luafile % -- 또는 :so % 기본 키정의 :h vimwiki-local-mappings \u0026ndash; See default key binding\n:h vimwiki-mappings \u0026ndash; See many more bindings.\n\\ww \u0026ndash; Open default wiki index file (Default: ~/vimwiki/index.wiki)\n\\wt \u0026ndash; Open default wiki index file in a new tab\n\\ws \u0026ndash; Select and open wiki index file. (1.wiki -\u0026gt; 2.mywiki)\n\\wd \u0026ndash; Delete wiki file you are in.\n\\wr \u0026ndash; Rename wiki file you are in.\n\u0026lt;Enter\u0026gt; \u0026ndash; Follow/Create wiki link.\n\u0026lt;Shift-Enter\u0026gt; \u0026ndash; Split and follow/create wiki link.\n\u0026lt;Ctrl-Enter\u0026gt; \u0026ndash; Vertical split and follow/create wiki link.\n\u0026lt;Backspace\u0026gt; \u0026ndash; Go back to parent(previous) wiki link.\n\u0026lt;Tab\u0026gt; \u0026ndash; Find next wiki link.\n\u0026lt;Shift-Tab\u0026gt; \u0026ndash; Find previous wiki link.\n명령어 :Vimwiki2HTML \u0026ndash; Convert current wiki link to HTML. :VimwikiAll2HTML \u0026ndash; Convert all your wiki links to HTML. :help vimwiki-commands \u0026ndash; List all commands. :help vimwiki \u0026ndash; General vimwiki help docs. 위키검색 :VWS /검색어/ \u0026ndash; 위키내 검색어를 포함하는 모든 위키 검색\n:VWB /검색어/ \u0026ndash; 현재 위키를 링크하고 있는 모든 위키 검색\n:lopen \u0026ndash; 검색된 위키 리스트를 출력\n검색자동화 \u0026lsquo;~/.vimrc\u0026rsquo;\n\u0026#34; F1 키를 누르면 커서가 놓인 단어를 위키에서 검색한다. nnoremap \u0026lt;F1\u0026gt; :execute \u0026#34;VWS /\u0026#34; . expand(\u0026#34;\u0026lt;cword\u0026gt;\u0026#34;) . \u0026#34;/\u0026#34; \u0026lt;Bar\u0026gt; :lopen\u0026lt;CR\u0026gt; \u0026#34; F2 키를 누르면 현재 문서를 링크한 모든 문서를 검색한다 nnoremap \u0026lt;F2\u0026gt; :execute \u0026#34;VWB\u0026#34; \u0026lt;Bar\u0026gt; :lopen\u0026lt;CR\u0026gt; 할일과 일기 아래 명령어들을 자주 사용한다면 nmap에 키매핑해서 사용하면 편리하다. Ctrl + Space 로 체크박스를 자동생성하고 체크표시를 할 수 있다. :VimwikiMakeDiaryNote로 오늘 날짜의 일기를 만들 수 있다. 예) 2022-08-12.md :VimwikiDiaryIndex - Diary index로 가기 :VimwikiDiaryGenerateLinks - Diary Generate (반드시 Diary Index 페이지에서 수행) :VimwikiDiarTomorrowDiaryNote - 내일 일기 생성 :VimwikiDiarYesterdayDiaryNote - 어제 일기 생성 Vimwiki와 Github.io 연결해서 사용하기 깃허브에서 user-name.github.io 저장소를 git clone 으로 로컬에서 가져온다. vimwiki로 로컬폴더를 ~/.vimrc에 등록해준다. 문서를 index.md로 시작하여 위키문서를 작성한다. 이를 github에 올리고 브라우저에서 user-name.github.io 주소로 확인한다. 주의할 점은 index.html이 있는 경우 우선권을 가지므로 index.html을 지우거나 index.md로 연결하도록 해주어야 한다. github.io의 무료 위키관리 시스템이 있으나 위 방법으로 그냥 써도 무방하다. 보다 자세한 문서는 VimWik Hugo Github.io 연동문서를 참조. Reference Vimwiki 사용법: https://johngrib.github.io/wiki/vimwiki/ Vimwiki Home: https://github.com/vimwiki/vimwiki vimwiki cheatsheet: http://thedarnedestthing.com/vimwiki%20cheatsheet ","permalink":"https://neosolaris.github.io/posts/vimwiki/","summary":"\u003cul\u003e\n\u003cli\u003e2023-08-31: 오타 수정, \u003ccode\u003e할일과 일기\u003c/code\u003e 항목 내용 추가\u003c/li\u003e\n\u003cli\u003e2023-08-04: nvim에서의 설정 추가, 오타 및 링크 수정\u003c/li\u003e\n\u003cli\u003e2022-09-12: vimwiki cheatsheet 링크 추가\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"vim에서-설치\"\u003evim에서 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../vim\"\u003evim\u003c/a\u003e의 vimwiki 플러그인을 설정 추가하고 설치한다.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"go\"\u003evim ~/.vimrc\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e설정 추가 내용\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-vimrc\" data-lang=\"vimrc\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026#34;vimwiki 플러그인\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ePlug\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;vimwiki/vimwiki\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e {\u003cspan class=\"s1\"\u003e\u0026#39;branch\u0026#39;\u003c/span\u003e: \u003cspan class=\"s1\"\u003e\u0026#39;dev\u0026#39;\u003c/span\u003e} \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026#34;vimwiki의 편한 시작을 위한 vim starter tool\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nx\"\u003ePlug\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;mhinz/vim-startify\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e플러그인 설치\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim +PluginInstall +qall\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"vim에서-설정\"\u003evim에서 설정\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e vim ~/.vimrc\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-vimrc\" data-lang=\"vimrc\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026#34; vimwiki 설정\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026#34; 공개용 위키(github와 연동), 개인용 위키 두개를 설정(gdrive, dropbox 연동)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eg\u003c/span\u003e:\u003cspan class=\"nx\"\u003evimwiki_list\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e [\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\{\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\   \u003cspan class=\"s1\"\u003e\u0026#39;path\u0026#39;\u003c/span\u003e: \u003cspan class=\"s1\"\u003e\u0026#39;/data/vimwiki/wiki\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\   \u003cspan class=\"s1\"\u003e\u0026#39;syntax\u0026#39;\u003c/span\u003e : \u003cspan class=\"s1\"\u003e\u0026#39;markdown\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\   \u003cspan class=\"s1\"\u003e\u0026#39;ext\u0026#39;\u003c/span\u003e : \u003cspan class=\"s1\"\u003e\u0026#39;.md\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\   \u003cspan class=\"s1\"\u003e\u0026#39;diary_rel_path\u0026#39;\u003c/span\u003e: \u003cspan class=\"s1\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\}\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\{\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\   \u003cspan class=\"s1\"\u003e\u0026#39;path\u0026#39;\u003c/span\u003e: \u003cspan class=\"s1\"\u003e\u0026#39;/data/vimwiki/mywiki\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\   \u003cspan class=\"s1\"\u003e\u0026#39;ext\u0026#39;\u003c/span\u003e : \u003cspan class=\"s1\"\u003e\u0026#39;.md\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\   \u003cspan class=\"s1\"\u003e\u0026#39;diary_rel_path\u0026#39;\u003c/span\u003e: \u003cspan class=\"s1\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\}\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\\]\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026#34; vimwiki의 conceallevel 을 끄는 것이 좋다\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eg\u003c/span\u003e:\u003cspan class=\"nx\"\u003evimwiki_conceallevel\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c\"\u003e\u0026#34; vimwiki 설정이 markdown 설정을 침투하지 않게 하기\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"nx\"\u003eg\u003c/span\u003e:\u003cspan class=\"nx\"\u003evimwiki_global_ext\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e0\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"neovim에서-설치\"\u003eNeovim에서 설치\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e플러그인 등록: \u003ccode\u003e~/.config/nvim/lua/plugins.lua\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003euse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;vimwiki/vimwiki\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e플러그인 설치: nvim 내에서\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e:PackerInstall\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e플러그인 설치: shell 내에서\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-console\" data-lang=\"console\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e nvim +\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e nvim +PluginInstall +qall\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"neovim에서-설정\"\u003eNeovim에서 설정\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e설정: \u003ccode\u003e~/.config/nvim/lua/settings.lua\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- vimwiki - https://github.com/vimwiki/vimwiki \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e----------------------------------------------------------------\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evim.cmd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e[[\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eiabbr __email abcd@efgh.com\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eiabbr \u0026lt;expr\u0026gt; __time strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eiabbr \u0026lt;expr\u0026gt; __date strftime(\u0026#34;%FT%R:%S+09:00\u0026#34;)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eiabbr \u0026lt;expr\u0026gt; __today strftime(\u0026#34;%F\u0026#34;)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eiabbr \u0026lt;expr\u0026gt; __file expand(\u0026#39;%:p\u0026#39;)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eiabbr \u0026lt;expr\u0026gt; __name expand(\u0026#39;%\u0026#39;)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eiabbr \u0026lt;expr\u0026gt; __pwd expand(\u0026#39;%:p:h\u0026#39;)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eiabbr \u0026lt;expr\u0026gt; __front system(\u0026#34;/home/borisu/bin/frontmatter.sh\u0026#34;)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eiabbr \u0026lt;expr\u0026gt; __luajit \u0026#39;#!/usr/bin/env luajit\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e]]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- Key Mapping\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003enmap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026lt;C-l\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;:VimwikiToggleListItem\u0026lt;CR\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e-- Contol + Space is default\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- vim.g.vimwiki_autowriteall = true        -- automatically save a modified wiki buffer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- vimwiki의 conceallevel 을 끔\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evim.g\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evimwiki_conceallevel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e-- vimwiki 설정이 markdown 설정을 침투하지 않게 하기\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evim.g\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evimwiki_global_ext\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e                \u003cspan class=\"c1\"\u003e-- 모든 마크다운에 대해 동작하지 않도록 함\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003evim.g\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003evimwiki_list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"n\"\u003epath\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;$HOME/vimwiki/\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"n\"\u003esyntax\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;markdown\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"n\"\u003eext\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;.md\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"n\"\u003ediary_rel_path\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e재인식\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e:luafile %  -- 또는\n:so %\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"기본-키정의\"\u003e기본 키정의\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003e:h vimwiki-local-mappings\u003c/code\u003e \u0026ndash; See default key binding\u003c/p\u003e","title":"Vimwiki"},{"content":"노트북 사양 ASUS 젠북 14 UM3402YA-KP095W 노트북 / 운영체제(OS) : 윈도우11홈 / 일반유통상품 / 용도 : 사무/인강용 , 휴대용 / 화면정보 35.56cm(14인치) / 2560x1600(WQXGA) / sRGB : 100% / 400nit / IPS / 광시야각 / 슬림형 베젤 / 프로세서 AMD / 라이젠7-4세대 / 바르셀로 / 5825U (2.0GHz) / 옥타코어 / 메모리 LPDDR4x(온보드) / 메모리 용량 : 16GB / 메모리 교체: 불가능 / 저장장치 M.2(NVMe) / 512GB / 그래픽 내장그래픽 / Radeon Graphics / 네트워크 무선랜: 802.11ax(Wi-Fi 6E) / 영상입출력 HDMI 2.0 / 웹캠(HD) / 단자 USB-C: 2개 / USB-A: 1개 / USB 3.2 / MicroSD카드 / 부가기능 지문인식(전원버튼) / USB-PD / DP Alt Mode / MIL-STD / 리프트 힌지 / 입력장치 키보드 라이트 / ㅗ형 방향키 / 파워 배터리 : 75Wh / 어댑터 : 65W / 충전단자 : 타입C / 주요제원 두께 : 16.9mm / 무게 : 1.39kg / 색상: 블랙 OS 설치 환경 윈도우11 우분투 22.04 ","permalink":"https://neosolaris.github.io/posts/zenbook14/","summary":"\u003ch2 id=\"노트북-사양\"\u003e노트북 사양\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eASUS 젠북 14 UM3402YA-KP095W\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e노트북 / 운영체제(OS) : 윈도우11홈 / 일반유통상품 / 용도 : 사무/인강용 , 휴대용 /\n화면정보 35.56cm(14인치) / 2560x1600(WQXGA) / sRGB : 100% / 400nit / IPS / 광시야각 / 슬림형 베젤 /\n프로세서 AMD / 라이젠7-4세대 / 바르셀로 / 5825U (2.0GHz) / 옥타코어 /\n메모리 LPDDR4x(온보드) / 메모리 용량 : 16GB / 메모리 교체: 불가능 /\n저장장치 M.2(NVMe) / 512GB /\n그래픽 내장그래픽 / Radeon Graphics /\n네트워크 무선랜: 802.11ax(Wi-Fi 6E) /\n영상입출력 HDMI 2.0 / 웹캠(HD) /\n단자 USB-C: 2개 / USB-A: 1개 / USB 3.2 / MicroSD카드 /\n부가기능 지문인식(전원버튼) / USB-PD / DP Alt Mode / MIL-STD / 리프트 힌지 /\n입력장치 키보드 라이트 / ㅗ형 방향키 /\n파워 배터리 : 75Wh / 어댑터 : 65W / 충전단자 : 타입C /\n주요제원 두께 : 16.9mm / 무게 : 1.39kg / 색상: 블랙\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"os-설치-환경\"\u003eOS 설치 환경\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../windows11\"\u003e윈도우11\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"../ubuntu\"\u003e우분투 22.04\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Zenbook14"},{"content":" zsh install - zsh 설치 및 설정 ","permalink":"https://neosolaris.github.io/posts/zsh/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"../zsh-install\"\u003ezsh install\u003c/a\u003e - zsh 설치 및 설정\u003c/li\u003e\n\u003c/ul\u003e","title":"Zsh"},{"content":"\n","permalink":"https://neosolaris.github.io/posts/modes/","summary":"\u003cp\u003e\u003ca href=\"\"\u003e\u003c/a\u003e\u003c/p\u003e","title":""}]