<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tools on Borisu Wiki Home</title>
    <link>https://neosolaris.github.io/categories/tools/</link>
    <description>Recent content in Tools on Borisu Wiki Home</description>
    <image>
      <title>Borisu Wiki Home</title>
      <url>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Jun 2025 18:29:03 +0900</lastBuildDate>
    <atom:link href="https://neosolaris.github.io/categories/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wezterm - Terminal Emulator</title>
      <link>https://neosolaris.github.io/posts/wezterm/</link>
      <pubDate>Mon, 16 Jun 2025 16:27:08 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/wezterm/</guid>
      <description>&lt;p&gt;&lt;strong&gt;WezTerm&lt;/strong&gt;은 GPU 가속을 지원하는 고성능 터미널 에뮬레이터로, Windows, macOS, Linux 등 다양한 운영체제에서 사용할 수 있다.
개인적으로 더욱 좋은 것은 Lua 기반의 설정을 제공한다는 것이다.
탭/분할 창, 이미지 표시, SSH 멀티플렉싱 등 현대적인 다양한 기능을 제공합니다.&lt;/p&gt;
&lt;h2 id=&#34;소개-이유&#34;&gt;소개 이유&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;빠른 화면 속도&lt;/li&gt;
&lt;li&gt;Lua로 설정&lt;/li&gt;
&lt;li&gt;tmux를 대체할 수 있고 오히려 더 편리한 사용성&lt;/li&gt;
&lt;li&gt;터미널 내 복사, 붙여넣기, 검색 등의 편리함&lt;/li&gt;
&lt;li&gt;다양한 테마와 Nerd Font 기본 지원, 폰트 별도 설치 불필요&lt;/li&gt;
&lt;li&gt;왜 그동안 이걸 몰랐을까? 정말 모던하고 깔끔하고 안정적이고 풍부한 기능 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;주요-기능&#34;&gt;&lt;strong&gt;주요 기능&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;크로스 플랫폼 지원&lt;/strong&gt;: Windows, macOS, Linux.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GPU 가속&lt;/strong&gt;: 부드러운 렌더링 성능.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;탭/분할 창&lt;/strong&gt;: 다중 작업 환경 지원.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lua 설정&lt;/strong&gt;: 사용자 정의 가능한 테마, 키 바인딩, 동작.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;이미지/폰트 지원&lt;/strong&gt;: Sixel, Iterm2 이미지 및 Nerd Fonts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSH 멀티플렉싱&lt;/strong&gt;: 단일 연결로 다중 세션 관리.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;설치&#34;&gt;설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;다음 링크에 여러 플랫폼 별 설치법이 나와 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fritzing</title>
      <link>https://neosolaris.github.io/posts/fritzing/</link>
      <pubDate>Wed, 13 Dec 2023 11:49:32 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/fritzing/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;nodemcu나 arduino를 이용한 회로 설계에 활용&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;깃허브 개발용을 설치
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fritzing/fritzing-app/releases&#34;&gt;https://github.com/fritzing/fritzing-app/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;자신의 OS에 맞는 것을 선택 (ex. Windows: fritzing-xxx-develop-548.windows.64.zip)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;압축을 풀고 적당한 곳에 옮긴 후 실행파일을 바탕화면에 링크복사&lt;/li&gt;
&lt;li&gt;실행
&lt;ul&gt;
&lt;li&gt;parts관련 업데이트 창: clean parts선택 후 업데이트&lt;/li&gt;
&lt;li&gt;windows User Files Folder: &lt;code&gt;C:\Users\사용자명\OneDrive\문서\Fritzing&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nodemcu-parts-등록하기&#34;&gt;Nodemcu parts 등록하기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기본 설치시 esp32, esp8266이 없으므로 사용자 등록을 해준다.&lt;/li&gt;
&lt;li&gt;[esp32-parts]
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.fritzing.org/uploads/default/original/2X/8/8d99adbb2e8f966178bdb46f5cffa7bd72ce2c2a.fzpz&#34;&gt;https://forum.fritzing.org/uploads/default/original/2X/8/8d99adbb2e8f966178bdb46f5cffa7bd72ce2c2a.fzpz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[esp8266-parts]
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog-cms.tasnimzotder.com/content/files/2022/01/NodeMCU-V1.0-1.fzpz&#34;&gt;https://blog-cms.tasnimzotder.com/content/files/2022/01/NodeMCU-V1.0-1.fzpz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;다운받은 파일을 우측상단 Parts 패널의 &lt;code&gt;부메뉴&amp;gt;import&lt;/code&gt;를 클릭하여 로드한다.&lt;/li&gt;
&lt;li&gt;Parts 패널에 &lt;code&gt;Mine&amp;gt;My parts&lt;/code&gt;에 등록된 것을 확인한다.&lt;/li&gt;
&lt;li&gt;import하여 등록한 parts는 &lt;code&gt;C:\Users\사용자명\OneDrive\문서\Fritzing&lt;/code&gt; 이하에 저장된다.&lt;/li&gt;
&lt;li&gt;따라서 이를 백업해두면 나중에 쉽게 자신의 환경을 복원할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;REFERENCE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fritzing Home: &lt;a href=&#34;https://fritzing.org/&#34;&gt;https://fritzing.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fritzing Github: &lt;a href=&#34;https://github.com/fritzing/fritzing-app&#34;&gt;https://github.com/fritzing/fritzing-app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;learning Fritzing: &lt;a href=&#34;https://fritzing.org/learning/&#34;&gt;https://fritzing.org/learning/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>GPG - GNU Privacy Guard</title>
      <link>https://neosolaris.github.io/posts/gpg/</link>
      <pubDate>Sat, 09 Sep 2023 16:32:54 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/gpg/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GNU Privacy Guard, is a public key cryptography implementation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Alpine&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ doas apk add gpg gpg-agent
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Ubuntu/Debian&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt-get install gnupg
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;gpg 키생성: default로 진행: Real name과 Email 입력: 비밀번호 입력&lt;/li&gt;
&lt;li&gt;암호화방식: 최신의 ECC(ed25519) 방식 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ gpg --full-gen-key
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;create-a-revocation-certificate&#34;&gt;Create a Revocation Certificate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;무효화 인증키 생성 (보안키분실시 사용, 따로 잘 보관)&lt;/li&gt;
&lt;li&gt;파일모드가 600인지 확인&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ gpg --output ~/revocation.crt --gen-revoke your_email@address.com
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;how-to-import-other-users-public-keys&#34;&gt;How To Import Other Users’ Public Keys&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ gpg --import name_of_pub_key_file
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;how-to-verify-and-sign-keys&#34;&gt;How To Verify and Sign Keys&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ gpg --fingerprint your_email@address.com 
$ gpg --list-keys       # 키리스트 확인
$ gpg --armor --export  # public key 확인

-----BEGIN PGP PUBLIC KEY BLOCK-----

mDMEZPwe2hYJwKYBBAHaRw8BAQdATXg1HK+wZW/sZlDXfs7KEJeEyX6YRKx9a60c
P5pj4mwtAPwP2wq1ACEdj+V6VOH/1ZE5KlH7L8UkYlJ8lK+ZdZBK+wEAlknNS5O7
...
-----END PGP PUBLIC KEY BLOCK-----
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;encrypt-and-decrypt-messages-with-gpg&#34;&gt;Encrypt and Decrypt Messages with GPG&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Encrypt Messages&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ gpg --encrypt --sing --armor -r &amp;lt;your_email@address.com&amp;gt; &amp;lt;name_of_file&amp;gt;
$ ls
$ &amp;lt;name_of_file&amp;gt;.asc
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Decrypt Messages&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ gpg &amp;lt;name_of_file&amp;gt;.asc
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;key-maintenance&#34;&gt;Key Maintenance&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ gpg --list-keys    # list available GPG keys
$ gpg --refresh-keys # update the key information
$ gpg --keyserver &amp;lt;key_server&amp;gt; --refresh-keys  # pull information from a specific key server
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;bakcup--restore&#34;&gt;Bakcup &amp;amp; Restore&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;backup (사용중인 PC)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# tree로 ~/.gnupg 확인
tree ~/.gnupg

# 현재 사용중인 키 확인
gpg --list-secret-keys --keyid-format LONG

# 백업
mkdir ~/gpg-backup
gpg --export --export-options backup --output ~/gpg-backup/public-key.gpg
gpg --export-secret-keys --export-options backup --output ~/gpg-backup/private-key.gpg
gpg --export-ownertrust &amp;gt; ~/gpg-backup/trust_key.gpg
tar cvf &amp;lt;USB-mount-path&amp;gt;/gpg-backup.tar gpg-backup
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;restore (다른 PC)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# USB mount
tar xvf &amp;lt;USB-mount-path&amp;gt;/gpg-backup.tar
cd gpg-backup/

# 키 복원
gpg --import public-key.gpg
gpg --import private-key.gpg
gpg --import-ownertrust trust-key.gpg

# 키 확인
gpg --list-secret-keys --keyid-format LONG
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;passthe-standard-unix-password-manager-with-gpg&#34;&gt;PASS(The Standard Unix Password Manager) with gpg&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pass는 유닉스에서 개인의 패스워드를 관리하는 표준 툴이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>tmux - 다중 터미널 관리 툴</title>
      <link>https://neosolaris.github.io/posts/tmux/</link>
      <pubDate>Sun, 18 Dec 2022 13:36:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/tmux/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;다중 터미널 관리 프로그램&lt;/li&gt;
&lt;li&gt;원격지에서 다양한 세션과 윈도우와 pane을 만들어 유지 관리.&lt;/li&gt;
&lt;li&gt;다중 작업을 한 터미널 화면을 통해 구현할 수 있다.&lt;/li&gt;
&lt;li&gt;세션을 유지하며 필요시 화면에 바로 띄울 수 있다.&lt;/li&gt;
&lt;li&gt;터미널을 꺼도 세션이 살아있고 다시 연결할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Debian, Ubuntu&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt install tmux
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Alpine&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; doas apk add tmux
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기본 명령&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; tmux     &lt;span class=&#34;c1&#34;&gt;# 실행&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; tmux ls  &lt;span class=&#34;c1&#34;&gt;# 세션, 윈도우 등 확인  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; tmux a   &lt;span class=&#34;c1&#34;&gt;# detatch된 세션을 다시 attatch 하기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;기본키(이하 생략) - &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Example - 사용례</title>
      <link>https://neosolaris.github.io/posts/docker-example/</link>
      <pubDate>Sun, 13 Nov 2022 16:46:03 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/docker-example/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;INTRO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Requirement: Docker Hub registration&lt;/li&gt;
&lt;li&gt;Requirement: Docker install on local&lt;/li&gt;
&lt;li&gt;login and create and push images to docker hub&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;docker-login&#34;&gt;Docker Login&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker login
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Username: neosolaris
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Password: xxxxxxx
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Login Succeeded
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;create-sample-image&#34;&gt;Create Sample image&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;create project dir and files&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; mkdir myproject &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; myproject
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; vim server.js
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; vim Dockerfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;server.js&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handleRequest&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Received request for URL: &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;writeHead&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello World!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;www&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;handleRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8080&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Dockerfile&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FROM node:6.9.2
EXPOSE 8080
COPY server.js .
CMD node server.js
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;이미지-빌드&#34;&gt;이미지 빌드&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;명령 실행 후 브라우저에서 &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt; 확인&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker build -t neosolaris/hello-nodejs:v1 .  &lt;span class=&#34;c1&#34;&gt;#사용자명/저장소명:태그명&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker images  &lt;span class=&#34;c1&#34;&gt;# 빌드이미지 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker run -d -p 8080:8080 -t neosolaris/hello-nodejs:v1  &lt;span class=&#34;c1&#34;&gt;# 테스트&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;컨테이너 종료&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker ps  &lt;span class=&#34;c1&#34;&gt;# 현재 컨테이너들 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker stop &amp;lt;Container ID&amp;gt;  &lt;span class=&#34;c1&#34;&gt;# 해당 컨테이너 종료&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;이미지-업로드&#34;&gt;이미지 업로드&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker push neosolaris/hello-nodejs:v1  &lt;span class=&#34;c1&#34;&gt;#사용자명/저장소명:태그명&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Image 업로드는 도커허브에서 확인: &lt;a href=&#34;https://hub.docker.com/u/neosolaris&#34;&gt;https://hub.docker.com/u/neosolaris&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://snowdeer.github.io/docker/2018/02/14/docker-push-image-to-docker-hub/&#34;&gt;https://snowdeer.github.io/docker/2018/02/14/docker-push-image-to-docker-hub/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>DockerHub - 도커허브 소개 및 활용</title>
      <link>https://neosolaris.github.io/posts/dockerhub/</link>
      <pubDate>Sun, 13 Nov 2022 16:01:19 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/dockerhub/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;도커 이미지 원격 저장소&lt;/li&gt;
&lt;li&gt;만들어 놓은 이미지를 업로드 및 다운로드 활용&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;회원가입&#34;&gt;회원가입&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com&#34;&gt;https://hub.docker.com&lt;/a&gt; - 계정 및 이메일 등록 : 공개용(개인)은 무료&lt;/li&gt;
&lt;li&gt;hub.docker.com 접속 후 회원가입&lt;/li&gt;
&lt;li&gt;Email Confirm (자신의 이메일에서 인증)&lt;/li&gt;
&lt;li&gt;도커허브 로그인&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;저장소-생성하고-로컬에서-빌드한-이미지-올리기&#34;&gt;저장소 생성하고 로컬에서 빌드한 이미지 올리기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;로그인 후 Repository 생성
&lt;ul&gt;
&lt;li&gt;ex) 사용자명/저장소명:태그명 neosolaris/mdev:debian-luajit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;doocker client(my local pc)에서 다음과 같이 올린다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker login  &lt;span class=&#34;c1&#34;&gt;# hub에 회원가입한 id, password 등록&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker images &lt;span class=&#34;c1&#34;&gt;# 내 이미지 확인 (mdev:debian-luajit이라 가정)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker tag mdev:debian-luajit  neosolaris/mdev:debian-luajit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker push neosolaris/mdev:debian-luajit  &lt;span class=&#34;c1&#34;&gt;#사용자명/저장소명:태그명&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;hub.docker.com 접속 후 repository 확인&lt;/li&gt;
&lt;li&gt;위 과정 중 도커허브에서 저장소를 직접 만들지 않아도 local에서 로그인되어 있다면 &lt;code&gt;docker push&lt;/code&gt;로 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;이미지-다운로드&#34;&gt;이미지 다운로드&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;도커허브에서 자신이 원하는 이미지 또는 자신이 만든 이미지를 다운받는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker pull gcc:bullseye   &lt;span class=&#34;c1&#34;&gt;# 공식 debian-bullseye-gcc 환경 이미지&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker neosolaris/mdev:debian-luajit  &lt;span class=&#34;c1&#34;&gt;# 내 프로젝트 이미지&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com&#34;&gt;https://hub.docker.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>docker-build 도커이미지 빌드</title>
      <link>https://neosolaris.github.io/posts/docker-build/</link>
      <pubDate>Wed, 09 Nov 2022 23:06:21 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/docker-build/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;프로젝트폴더를 만들고 개발&lt;/li&gt;
&lt;li&gt;Dockerfile을 해당 프로젝트에 작성한다.&lt;/li&gt;
&lt;li&gt;한라인씩 확인하며 이미지를 빌드한다.&lt;/li&gt;
&lt;li&gt;빌드한 이미지를 컨테이너를 실행해서 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;example-lemo-apps-for-luajit&#34;&gt;Example Lemo Apps for Luajit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;프로젝트 폴더를 만들고 Dockerfile을 생성한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; mkdir myproject &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; myproject
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; vim Dockerfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;생성된 Dockerfile&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FROM nickblah/luajit:2.1.0-beta3-buster

## Default root Env Setup First
WORKDIR /root
RUN \
  echo &amp;#39;set -o vi&amp;#39; &amp;gt;&amp;gt; .bashrc

## LEMO Program Set
WORKDIR /usr/local
COPY lemo ./lemo
RUN \
  echo &amp;#39;exec &amp;#34;/usr/local/lemo/lib/main.lua&amp;#34; &amp;#34;$@&amp;#34;&amp;#39; &amp;gt; ./bin/lemo &amp;amp;&amp;amp;\
  chmod 755 ./bin/lemo
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;image-build&#34;&gt;Image Build&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker build -t buster:lemo .  &lt;span class=&#34;c1&#34;&gt;# 빌드&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker images  &lt;span class=&#34;c1&#34;&gt;# 빌드한 이미지 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker run --rm -it buster:lemo bash  &lt;span class=&#34;c1&#34;&gt;# 이미지를 컨테이너 실행 및 테스트&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/builder&#34;&gt;https://docs.docker.com/engine/reference/builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.44bits.io/ko/post/easy-deploy-with-docker&#34;&gt;https://www.44bits.io/ko/post/easy-deploy-with-docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Docker Setup - 설정</title>
      <link>https://neosolaris.github.io/posts/docker-setup/</link>
      <pubDate>Wed, 09 Nov 2022 22:57:27 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/docker-setup/</guid>
      <description>&lt;h2 id=&#34;docker-데몬-서비스-설정&#34;&gt;Docker 데몬 서비스 설정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;패키지를 설치할 경우 자동으로 등록되지만 실패할 경우 다음과 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl status docker  &lt;span class=&#34;c1&#34;&gt;# 서비스 Active 확인실패&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; docker  &lt;span class=&#34;c1&#34;&gt;# 부팅시 서비스 자동 실행 설정&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl start docker  &lt;span class=&#34;c1&#34;&gt;# 서비스 실행&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl restart docker  &lt;span class=&#34;c1&#34;&gt;# 서비스 재실행&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl status docker  &lt;span class=&#34;c1&#34;&gt;# 서비스 동작확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;docker를-일반-사용자-권한으로-변경&#34;&gt;Docker를 일반 사용자 권한으로 변경&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;항상 docker를 사용할 때 &lt;code&gt;sudo&lt;/code&gt;를 사용하므로 번거롭다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo usermod -aG docker &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 이후 로그아웃하거나 재부팅&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo reboot
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; groups  &lt;span class=&#34;c1&#34;&gt;# 그룹에 docker가 있는 지 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker ps -a  &lt;span class=&#34;c1&#34;&gt;# sudo 없이 명령 실행&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;docker-로컬-디렉토리-변경&#34;&gt;Docker 로컬 디렉토리 변경&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/var/lib/docker&lt;/code&gt;가 기본 디렉토리이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var&lt;/code&gt;는 보통 root 파티션이므로 사용중 공간문제가 발생할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/data/docker&lt;/code&gt;라는 충분한 공간으로 변경한다면 다음과 같다.&lt;/li&gt;
&lt;li&gt;우분투나 데비안 기준이고 &lt;code&gt;docker 20.10.21&lt;/code&gt; 버전의 예이다.&lt;/li&gt;
&lt;li&gt;이 설정은 docker 설치 초기에 해야한다. (그렇지 않다면 백업 필수)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl stop docker  &lt;span class=&#34;c1&#34;&gt;# 서비스 중지&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl status docker  &lt;span class=&#34;c1&#34;&gt;# 서비스 상태 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo cat&amp;lt;&amp;lt;EOF &amp;gt; /etc/docker/daemon.json   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;    &amp;#34;graph&amp;#34;: &amp;#34;/data/docker&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo rm -rf /var/lib/docker  &lt;span class=&#34;c1&#34;&gt;# 기존 디렉토리 제거&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl start  &lt;span class=&#34;c1&#34;&gt;# 서비스 실행&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker info &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;s1&#34;&gt;&amp;#39;Docker Root Dir&amp;#39;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 디렉토리 변경 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; Docker Root Dir: /data/docker
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ln -s /data/docker /var/lib/docker  &lt;span class=&#34;c1&#34;&gt;# 호환을 위해 링크를 생성&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Docker Install</title>
      <link>https://neosolaris.github.io/posts/docker-install/</link>
      <pubDate>Wed, 09 Nov 2022 22:37:49 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/docker-install/</guid>
      <description>&lt;h2 id=&#34;ubuntu-2204-install&#34;&gt;Ubuntu 22.04 Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기존 패키지로 설치 - 낮은 버전(1.5-2)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt install docker docker-engine docker.io containerd runc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;저장소로 최신 버전 설치 (20.10.21) - &lt;code&gt;docker-ce&lt;/code&gt;만 설치해도 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt install ca-certificates curl gnupg lsb-release -y
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo mkdir -p /etc/apt/keyrings
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; curl -fsSL https://download.docker.com/linux/ubuntu/gpg &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;  &amp;#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  $(lsb_release -cs) stable&amp;#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;script-install&#34;&gt;Script Install&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; curl -fsSL https://get.docker.com -o get-docker.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;DRY_RUN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; sudo sh ./get-docker.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;test&#34;&gt;Test&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo docker --version  &lt;span class=&#34;c1&#34;&gt;# 버전 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl status docker  &lt;span class=&#34;c1&#34;&gt;# 서비스 Active 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo docker run hello-world  &lt;span class=&#34;c1&#34;&gt;# 테스트&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo docker ps -a  &lt;span class=&#34;c1&#34;&gt;# 프로세스 fhrm ghkrdls&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;uninstall&#34;&gt;Uninstall&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/builder&#34;&gt;https://docs.docker.com/engine/reference/builder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxhint.com/install-docker-ubuntu-22-04&#34;&gt;https://linuxhint.com/install-docker-ubuntu-22-04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-22-04&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-22-04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Docker - 소프트웨어 개발 플랫폼</title>
      <link>https://neosolaris.github.io/posts/docker/</link>
      <pubDate>Wed, 09 Nov 2022 22:32:02 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/docker/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;docker는 응용프로그램 개발을 위한 소프트웨어 플랫폼이다.&lt;/li&gt;
&lt;li&gt;Linux 기반에서 독립된 컨테이너(하나의 프로세스) 형태로 동작한다.&lt;/li&gt;
&lt;li&gt;go 언어로 개발되었다.&lt;/li&gt;
&lt;li&gt;가상OS와는 다르게 가볍고 빠르다.&lt;/li&gt;
&lt;li&gt;빌드된 이미지를 언제 어디에서는 docker를 통해 문제 없이 실행할 수 있다.&lt;/li&gt;
&lt;li&gt;자신만의 개발환경을 이미지로 구축해 놓으면 개발 컴퓨터가 달라져도 동일한 환경에서 개발할 수 있다.&lt;/li&gt;
&lt;li&gt;실행환경을 이미지로 만들어 놓으면 사용자가 동일한 환경에서 문제없이 실행할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;docker-설치-및-기본-사용법&#34;&gt;Docker 설치 및 기본 사용법&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../docker-install&#34;&gt;docker install&lt;/a&gt; - Docker 설치&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../docker-setup&#34;&gt;docker setup&lt;/a&gt; - Docker 설정&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../docker-build&#34;&gt;docker build&lt;/a&gt; - Dockerfile 작성&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../dockerhub&#34;&gt;dockerhub&lt;/a&gt; - Docker Hub와 회원 가입&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../docker-example&#34;&gt;docker example&lt;/a&gt; - Docker Example: 사용례&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;docker-tips&#34;&gt;Docker Tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../docker-run-cmd-entrypoint&#34;&gt;docker run cmd entrypoint&lt;/a&gt; - Docker run, cmd, entrypoint 차이&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../docker-images-remove&#34;&gt;docker images remove&lt;/a&gt; - Docker Image 제거&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;docker-응용&#34;&gt;Docker 응용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../docker-busybox&#34;&gt;docker busybox&lt;/a&gt; - 도커 busybox 활용&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../docker-windows&#34;&gt;docker windows&lt;/a&gt; - 윈도우즈에서 도커 설치 및 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/&#34;&gt;https://hub.docker.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sobyte.net/post/2022-04/docker-copy/&#34;&gt;https://www.sobyte.net/post/2022-04/docker-copy/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/builder/&#34;&gt;https://docs.docker.com/engine/reference/builder/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Rclone 원격 백업 툴</title>
      <link>https://neosolaris.github.io/posts/rclone/</link>
      <pubDate>Wed, 31 Aug 2022 17:56:35 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/rclone/</guid>
      <description>&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt install rclone
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone --help
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone config
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;n/s/q&amp;gt; n
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;name&amp;gt; gdrive # rclone 사용시 원격지 드라이브 이름으로 사용
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Storage&amp;gt; 13  # google
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;client_id&amp;gt; Enter
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;client_secret&amp;gt; Enter
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;scope&amp;gt; 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;root_folder_id&amp;gt; Enter
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;service_account_file&amp;gt; Enter
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Edit advanced config?&amp;gt; n 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Use auto config? n  # 출력된 url을 복사하여 브라우저에 입력하고 승락하기
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                    # 승락한 후 받은 key를 복사
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Enter verification code&amp;gt; key입력
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Configure this as a team drive? n
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;y) Yes this is OK (default) y
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;q # 끝내기
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기본 사용법: 세세한 옵션이 많지만 흐름을 잃지 말자. 필요하면 관련 문서 참조.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone ls gdrive:                 &lt;span class=&#34;c1&#34;&gt;# list google drive files only&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone lsl gdrive:                &lt;span class=&#34;c1&#34;&gt;# list -l google drive files only&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone lsd gdrive:                &lt;span class=&#34;c1&#34;&gt;# list google drive folders&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone copy file1 gdrive:         &lt;span class=&#34;c1&#34;&gt;# copy file1 to gdrive:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone copy dir1 gdrive:          &lt;span class=&#34;c1&#34;&gt;# copy dir1/* to gdirve:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    # 디렉토리내 파일복사
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone copy dir1 gdrive:dir1      &lt;span class=&#34;c1&#34;&gt;# copy dir1 to gdirve:dir1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    # dir1 디렉토리복사
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone delete gdrive:file1        &lt;span class=&#34;c1&#34;&gt;# remove gdrive:file1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone delete gdrive:dir1         &lt;span class=&#34;c1&#34;&gt;# remove gdrive:dir1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; mkdir ~/gdrive 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone sync gdrive: ~/gdrive/     &lt;span class=&#34;c1&#34;&gt;# sync google drive to local ~/gdrive&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone sync ~/gdrive gdrive:      &lt;span class=&#34;c1&#34;&gt;# sync ~/gdrive to google drive&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone sync -i ~/gdrive gdirve:   &lt;span class=&#34;c1&#34;&gt;# interactive mode&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone sync -P ~/gdrive gdirve:   &lt;span class=&#34;c1&#34;&gt;# view real-time transfer statistics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone bisync ~/gdrive gdirve:    &lt;span class=&#34;c1&#34;&gt;# bidirectional sync between two paths&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;                                    # new, Newer, and Deleted files
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Mount&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; rclone mount gdrive: ~/google-drive &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ls ~/google-drive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;crypt---암호화&#34;&gt;Crypt - 암호화&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gdrive:&lt;/code&gt; 내의 특정 폴더를 암호화해서 gdrive내에서는 내용을 볼 수 없고 오직 local에서만 가능하다. 개인정보를 보다 안전하게 보관할 수 있는 방법이다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
