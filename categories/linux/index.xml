<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux on Borisu Wiki Home</title>
    <link>https://neosolaris.github.io/categories/linux/</link>
    <description>Recent content in Linux on Borisu Wiki Home</description>
    <image>
      <title>Borisu Wiki Home</title>
      <url>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.2</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 Jul 2025 06:26:19 +0900</lastBuildDate>
    <atom:link href="https://neosolaris.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Luajit - Nvim Lsp Config</title>
      <link>https://neosolaris.github.io/posts/luajit-nvim-lspconfig/</link>
      <pubDate>Sun, 27 Jul 2025 06:26:19 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/luajit-nvim-lspconfig/</guid>
      <description>&lt;h2 id=&#34;소개&#34;&gt;소개&lt;/h2&gt;
&lt;p&gt;리눅스 환경(Alpine Linux)에서 lua-language-server 설치하고 nvim에서 설정 및 활용하는 방법을 정리해 본다.
alpine 3.2x 기준으로 설명한다. 과거 alpine 버전들은 lua-language-server가 없거나 nvim의 버전이 낮아 플러그인 지원에 문제가 있었다. 현재 시점을 기준으로 모두 적절한 버전을 지원하고 패키지도 되어 있기 때문에 소스 컴파일 등의 부담이 없어졌다.&lt;/p&gt;
&lt;h2 id=&#34;설치&#34;&gt;설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;luajit및 lua-language-server 그리고 neovim관련 패키지 설치&lt;/li&gt;
&lt;li&gt;아래의 경우 nvim(neovim) 설치시 &lt;code&gt;lfs.so&lt;/code&gt;,&lt;code&gt;penlight&lt;/code&gt;등이 기본 포함하게 된다. (추가 설치 불필요)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apk add --no-cache luajit luajit-dev lua-language-server ldoc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apk add --no-cache neovim neovim-doc nvim-treesitter &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;        tree-sitter tree-sitter-cli tree-sitter-lua tree-sitter-bash &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;        tree-sitter-c tree-sitter-markdown tree-sitter-vimdoc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;설정&#34;&gt;설정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/.config/nvim/init.lua&lt;/code&gt;에 다음 설정을 추가&lt;/li&gt;
&lt;li&gt;&lt;code&gt;my_project_path&lt;/code&gt;는 개별 모듈을 추가하는 경우이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workspace&lt;/code&gt;의 library 범위가 크면 부하가 커지므로 적당히 조절해 주어야 nvim에서 무리가 없다.&lt;/li&gt;
&lt;li&gt;아래 주석 표시된 부분을 주의해서 확인하고 자신에게 맞는 환경을 설정한다.&lt;/li&gt;
&lt;li&gt;그리고 과거 &lt;code&gt;sumneko&lt;/code&gt;라는 식으로 설정했는데 현재 &lt;code&gt;lspconfig.lua_ls.setup&lt;/code&gt;으로 바뀌었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- Now set capabilities on your LSP servers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lspconfig&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lspconfig&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_project_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os.getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HOME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;..&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/.local/lib/lua&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_project_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;lspconfig.lua_ls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setup&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;--capabilities = capabilities,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;root_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lspconfig.util&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root_pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;.luarc.json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;.luarc.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;settings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;n&#34;&gt;Lua&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;runtime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Luajit&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vim.split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package.path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;diagnostics&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;globals&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;vim&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;update_in_insert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;workspace&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;library&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;c1&#34;&gt;--// 기본 vim 런타임 환경 모듈 추가&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;					&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vim.env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;VIMRUNTIME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;c1&#34;&gt;--// 모든 vim의 런타임 환경 모듈 추가&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;					&lt;span class=&#34;c1&#34;&gt;--[vim.api.nvim_get_runtime_file(&amp;#34;&amp;#34;, true)] = true,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;c1&#34;&gt;--// my project 모듈 추가&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;					&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vim.fn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_project_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;--// 제3의 모듈 제외&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;checkThirdParty&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;n&#34;&gt;telemetry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				&lt;span class=&#34;n&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;lua-language-server - Getting Started
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sumneko/lua-language-server/wiki/Getting-Started#command-line&#34;&gt;https://github.com/sumneko/lua-language-server/wiki/Getting-Started#command-line&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Windows WSL Alpine Linux - Docker - Git 설치 및 환경</title>
      <link>https://neosolaris.github.io/posts/wsl_alpine_docker_git/</link>
      <pubDate>Tue, 24 Jun 2025 08:47:29 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/wsl_alpine_docker_git/</guid>
      <description>&lt;h2 id=&#34;소개&#34;&gt;소개&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;기존에 쓰던 방법은 버전이 너무 오래되었거나 자신의 환경에 맞게 설치하기가 어려웠다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows 10, 11 에서 WSL2를 이용한 Alpine 설치를 최종 정리한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;설치 뿐만 아니라 필요한 환경(docker, git 등)을 자동으로 구성하도록 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;기본적인 테스트를 하고 추가 패키지를 보완한 후 이미지를 백업한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;추후 Windows를 재설치하거나 기타 문제가 발생할 경우 백업 이미지를 복원한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;또는 다른 PC로 백업 이미지를 사용할 때도 유용하다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;최소설치만 적용해서 설치파일이나 백업파일을 만들어 두면 빠른 백업, 복구를 할 수 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows WSL2 Alpine Install</title>
      <link>https://neosolaris.github.io/posts/alpine_wsl2/</link>
      <pubDate>Sat, 30 Dec 2023 06:15:32 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/alpine_wsl2/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;minimum 수동 설치 방법이 있으나 데몬 서비스, docker 설치 등에 어려움이 있다.&lt;/li&gt;
&lt;li&gt;여기에서는 다음 두 가지 설치 방법을 정리한다.&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Microsoft Store - Alpine WSL Install, 2. Github - AlpineWSL Install&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;특이사항:
&lt;ul&gt;
&lt;li&gt;default shell: ash (필요하면 bash를 추가 설치: apk add bash bash-completion)&lt;/li&gt;
&lt;li&gt;grep: busybox grep (고성능의 grep이 필요하다면 추가 설치: apk add grep)&lt;/li&gt;
&lt;li&gt;sudo: doas (필요하면 추가 설치: apk add doas)&lt;/li&gt;
&lt;li&gt;openssh: openssh (필요하면 설치: apk add openssh)&lt;/li&gt;
&lt;li&gt;curl: wget은 기본 설치 (필요하면 추가설치: apk add curl)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;microsoft-store----alpine-wsl-install&#34;&gt;Microsoft Store  - Alpine WSL Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;참고 사항&lt;/p&gt;</description>
    </item>
    <item>
      <title>Alpine Devel - 알파인 개발 환경</title>
      <link>https://neosolaris.github.io/posts/alpine_devel/</link>
      <pubDate>Sat, 30 Dec 2023 06:03:08 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/alpine_devel/</guid>
      <description>&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;build-base 설치
&lt;ul&gt;
&lt;li&gt;binutils file gcc g++ make libc-dev fortify-headers patch&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Install build-base
doas apk add build-base

# Check
gcc --version
make --version
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Alpine Linux</title>
      <link>https://neosolaris.github.io/posts/alpine/</link>
      <pubDate>Tue, 08 Aug 2023 15:58:42 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/alpine/</guid>
      <description>&lt;p&gt;last updated: {{ &amp;ldquo;1718885075&amp;rdquo; | date: &amp;ldquo;%Y-%m-%d %H:%M&amp;rdquo; }}&lt;/p&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Docker에서 많이 사용되어 유명해졌다.&lt;/li&gt;
&lt;li&gt;다음은 알파인 리눅스의 세가지 특징이자 철학이다.
&lt;ul&gt;
&lt;li&gt;Small: musl libc + busybox (container: 8MB, Minimal Disk Install: 130MB)&lt;/li&gt;
&lt;li&gt;Simple: package manager &lt;code&gt;apk&lt;/code&gt;, Init System &lt;code&gt;OpenRC&lt;/code&gt; and Fast&lt;/li&gt;
&lt;li&gt;Secure: Position Independent Executables(PIE)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install&#34;&gt;INSTALL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../alpine_install&#34;&gt;alpine_install&lt;/a&gt; - 설치&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../alpine_upgrade&#34;&gt;alpine_upgrade&lt;/a&gt; - 업그레이드&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../alpine_devel&#34;&gt;alpine_devel&lt;/a&gt; - 개발환경&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../alpine_wsl2&#34;&gt;alpine_wsl2&lt;/a&gt; - 윈도우즈 WSL2에서 alpine 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;REFERENCE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../docker-busybox&#34;&gt;docker-busybox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alpine FAQ: &lt;a href=&#34;https://wiki.alpinelinux.org/wiki/Alpine_Linux:FAQ&#34;&gt;https://wiki.alpinelinux.org/wiki/Alpine_Linux:FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alpine Tutorial and Howtos: &lt;a href=&#34;https://wiki.alpinelinux.org/wiki/Tutorials_and_Howtos&#34;&gt;https://wiki.alpinelinux.org/wiki/Tutorials_and_Howtos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Docker Images Remove - 도커 이미지 제거</title>
      <link>https://neosolaris.github.io/posts/docker-images-remove/</link>
      <pubDate>Mon, 21 Nov 2022 15:46:59 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/docker-images-remove/</guid>
      <description>&lt;h2 id=&#34;기본-사용법&#34;&gt;기본 사용법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker images  &lt;span class=&#34;c1&#34;&gt;# 도커 이미지 리스트 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker images -all  &lt;span class=&#34;c1&#34;&gt;# 히든 이미지까지 모두 보기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker rmi &amp;lt;ID&amp;gt;  &lt;span class=&#34;c1&#34;&gt;# image ID로 제거&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker rmi -f &amp;lt;ID&amp;gt;  &lt;span class=&#34;c1&#34;&gt;# image ID로 강제로 제거&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;docker-none-image-정리하기&#34;&gt;Docker none image 정리하기&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker container prune  &lt;span class=&#34;c1&#34;&gt;# 컨테이너 모두 종료&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker image prune   &lt;span class=&#34;c1&#34;&gt;# &amp;lt;none&amp;gt; 이미지 모두 제거&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker system pruen  &lt;span class=&#34;c1&#34;&gt;# 한 번에 처리&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Docker-Busybox</title>
      <link>https://neosolaris.github.io/posts/docker-busybox/</link>
      <pubDate>Mon, 21 Nov 2022 14:53:47 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/docker-busybox/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../busybox&#34;&gt;busybox&lt;/a&gt;는 작고 가볍고 빠른 POSIX 표준 유틸 모음이다.&lt;/li&gt;
&lt;li&gt;docker에서 여러 가지로 응용해서 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;응용&#34;&gt;응용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;임베디드 시스템에 빌드하기&lt;/li&gt;
&lt;li&gt;Kubernates에 init container로 사용하기&lt;/li&gt;
&lt;li&gt;HTTP 웹서버로 돌리기&lt;/li&gt;
&lt;li&gt;가상컨테이너 볼륨서버(스토리지)로 사용하기&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;기본-사용례&#34;&gt;기본 사용례&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;busybox 최신버전 이미지 받고 실행&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker run -it --rm busybox
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;busybox + myapp : myapp은 리눅스환경에서 정적컴파일한 바이너리&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; cat Dockerfile  &lt;span class=&#34;c1&#34;&gt;# Write Dockerfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;FROM busybox
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;COPY ./my-static-binary /my-static-binary
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;CMD [&amp;#34;/my-static-binary&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker build -t busybox-myapp .  &lt;span class=&#34;c1&#34;&gt;# Build Image&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker run -t --rm busybox-myapp  &lt;span class=&#34;c1&#34;&gt;# Run Container&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;busybox + httpserver : 웹서버동작(httpserver는 static compile binary)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; cat Dockerfile  &lt;span class=&#34;c1&#34;&gt;# Write Dockerfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;FROM busybox
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;COPY ./httpserver /home/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;CMD /home/httpserver
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker build -t go-server .  &lt;span class=&#34;c1&#34;&gt;# Build Image&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; docker run -p 8080:8080 --rm -it go-server &lt;span class=&#34;c1&#34;&gt;# Run Container&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; curl -v http://localhost:8080/  &lt;span class=&#34;c1&#34;&gt;# Test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;busybox에-관하여&#34;&gt;Busybox에 관하여&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;놀랍게도 busybox는 httpd를 내장하고 있다. 물론 대규모 처리는 곤란하다.&lt;/li&gt;
&lt;li&gt;내장된 grep도 기본 기능만 있다. 대용량 파일 검색을 써야한다면 효율이 좋지 않으므로 gnu grep을 얹어서 사용하는 것이 좋다.&lt;/li&gt;
&lt;li&gt;busybox는 glibc, musl 등을 지원하는 버전이 있다.&lt;/li&gt;
&lt;li&gt;이를 활용하면 여러개의 프로그램을 넣어야할 때 공유라이브러리를 활용할 수 있어 효율적이다.&lt;/li&gt;
&lt;li&gt;alpine 리눅스가 busybox + musl + os env 이므로 자신만의 이미지를 제작하는 것도 가능하다.&lt;/li&gt;
&lt;li&gt;기본적인 utf-8이 지원되지만 출력만 문제가 없는 것으로 보인다.&lt;/li&gt;
&lt;li&gt;sh, echo, vi 도 가볍게 쓰기는 좋으나 utf-8 한글입력이 안된다.&lt;/li&gt;
&lt;li&gt;이를 보완하기 위해서는 bash, echo, vi를 정적컴파일 바이너리로 대체&lt;/li&gt;
&lt;li&gt;또는 도커허브(DockerHub)의 toybox를 사용하는 것이다. utf-8 입출력을 모두 지원한다. 심지어 사이즈가 더 작다.&lt;/li&gt;
&lt;li&gt;utf-8의 입출력 환경이 모두 필요하다면 toybox를 사용하는 것이 더 낫다.&lt;/li&gt;
&lt;li&gt;busybox(약1.2MB)나 toybox(약764K)는 정말 가볍게 실행하고 배포할 수 있는 환경이다.&lt;/li&gt;
&lt;li&gt;결론적으로 이것에 대한 활용은 개발환경이나 큰규모의 실행환경보다는 작고 가벼운 환경에서 효율적인 운용이 필요할 때 사용하면 좋을 것 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How to Use th Busybox Docker Official Image
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/blog/use-cases-and-tips-for-using-the-busybox-docker-official-image/&#34;&gt;https://www.docker.com/blog/use-cases-and-tips-for-using-the-busybox-docker-official-image/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using the BusyBox Docker Image for Building Applications : A Complete Guide
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sohamkamani.com/docker/busybox-guide/&#34;&gt;https://www.sohamkamani.com/docker/busybox-guide/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Alpine - Lua Language Server Install</title>
      <link>https://neosolaris.github.io/posts/alpine-lua-language-server/</link>
      <pubDate>Mon, 21 Nov 2022 01:09:54 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/alpine-lua-language-server/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 25-07-27: Alpine Linux 3.2x 기준으로 &lt;a href=&#34;../luajit-nvim-lspconfig&#34;&gt;luajit-nvim-lspconfig&lt;/a&gt; 참고&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 23-08-08: nvim 버전이 3.18대로 올라오고, Community Repository를 추가하면 패키지로 간단히
설치할 수가 있다. 최적화나 컴파일 자체에 의미를 두지 않는다면 패키지로 설치하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;preinstall&#34;&gt;PREINSTALL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;clang 및 luajit 및 개발 툴 설치&lt;/li&gt;
&lt;li&gt;필수: build-base, clang, clang-extra-tools(clangd), cmake, luajit, luajit-dev&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; apk add --no-cache build-base clang clang-extra-tools lld compiler-rt compiler-rt-static cmake git luajit luajit-dev bash bash-completion grep rlwrap bat fd curl wget rsync sqlite jq tree
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;ninja 설치 - alpine 3.16.3 현재 기본 패키지 없음&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; git clone https://github.com/ninja-build/ninja &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ninja
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; cmake -Bbuild-cmake
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; cmake --build build-cmake
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; ./build-cmake/ninja_test
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; cp ./build-cmake/ninja /usr/local/bin/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; which ninja   &lt;span class=&#34;c1&#34;&gt;# PATH 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;lua-language-server-설치&#34;&gt;lua-language-server 설치&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /usr/local/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; git clone  --depth&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; https://github.com/sumneko/lua-language-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; lua-language-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; git submodule update --depth &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; --init --recursive
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; 3rd/luamake
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; ./compile/install.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ../..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; ./3rd/luamake/luamake rebuild
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; ./bin/lua-language-server --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; cat&amp;lt;&amp;lt;EOF &amp;gt; /usr/local/bin/lua-language-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;exec &amp;#34;/usr/local/lua-language-server/bin/lua-language-server&amp;#34; &amp;#34;$@&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; chmod &lt;span class=&#34;m&#34;&gt;755&lt;/span&gt; /usr/local/bin/lua-language-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; which lua-language-server  &lt;span class=&#34;c1&#34;&gt;# PATH 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;clangd-설치&#34;&gt;clangd 설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;clangd는 &lt;code&gt;c&lt;/code&gt;,&lt;code&gt;c++&lt;/code&gt;을 지원한다.&lt;/li&gt;
&lt;li&gt;clangd는 clang-extra-tools 패키지에 포함되어 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ninja build howto
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ninja-build/ninja&#34;&gt;https://github.com/ninja-build/ninja&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;lua-language-server - Getting Started
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sumneko/lua-language-server/wiki/Getting-Started#command-line&#34;&gt;https://github.com/sumneko/lua-language-server/wiki/Getting-Started#command-line&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Archlinux Install - 아치리눅스 설치</title>
      <link>https://neosolaris.github.io/posts/archlinux-install/</link>
      <pubDate>Thu, 15 Sep 2022 21:46:46 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/archlinux-install/</guid>
      <description>&lt;h2 id=&#34;todo&#34;&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 한글 환경 구성하기&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 대체할 터미널 프로그램 알아보기 또는 기존 것 재 설정&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 설치 스크립트 또는 요약본 만들기&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; pacman 사용법 따로 정리 - 상위 문서로&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; archlinux의 주 용도를 정하고 이에 맞게 구성하고 문서 정리&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; aur 및 yay 설치 및 사용법 정리: &lt;a href=&#34;https://linuxhint.com/aur_arch_linux/&#34;&gt;https://linuxhint.com/aur_arch_linux/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;아치리눅스는 설치환경이 터미널에서 시작한다.&lt;/li&gt;
&lt;li&gt;하나씩 설치하고 설정해 나가는 방식이다.&lt;/li&gt;
&lt;li&gt;다른 배포판과는 다르게 재설치 없이 한 번 설치 후 계속 업데이트 해서 사용한다.&lt;/li&gt;
&lt;li&gt;초반에만 기본을 잘 설치하고 조금씩 가꾸는 재미가 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;설치-이미지-준비&#34;&gt;설치 이미지 준비&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;최신 설치 이미지 다운로드 및 USB 부트 만들기&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; wget http://mirror.anigil.com/archlinux/iso/2022.09.03/archlinux-2022.09.03-x86_64.iso
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; lsusb  &lt;span class=&#34;c1&#34;&gt;# 자신의 USB 장치 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo dd &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;4M &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;archlinux-2022.09.03-x86_64.iso &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/sda
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;설치할 시스템에 USB 부팅 BIOS 설정: 부팅 순서 조정 후 부팅&lt;/li&gt;
&lt;li&gt;자신의 시스템이 BIOS인지 UEFI인지 확인은 다음과 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; ls /sys/firmware/efi     &lt;span class=&#34;c1&#34;&gt;#디렉토리 존재 여부 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;install-arch&#34;&gt;Install Arch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;wifi 설정&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; ip link  &lt;span class=&#34;c1&#34;&gt;# wifi 장치 및 연결 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; iwctl --passphrase &lt;span class=&#34;s1&#34;&gt;&amp;#39;mypassword&amp;#39;&lt;/span&gt; station wlan0 connect mywifi-ssid  &lt;span class=&#34;c1&#34;&gt;# 연결&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; ping google.com   &lt;span class=&#34;c1&#34;&gt;# 인터넷 연결 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; reflector -–verbose -c “Korea” --sort rate &amp;gt; /etc/pacman.d/mirrorlist
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pacman -Syy       &lt;span class=&#34;c1&#34;&gt;# update os base&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;파티션 설정 및 파일 시스템 생성&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; lsblk             &lt;span class=&#34;c1&#34;&gt;# 내 드라이브 장치 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; fdisk -l /dev/sda &lt;span class=&#34;c1&#34;&gt;# 설치 드라이브 파티션 정보 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; fdisk /dev/sda    &lt;span class=&#34;c1&#34;&gt;# 파티션 설정: sda1(83:Linux)은 root(115GB), sda2(82:Swap) swap(4GB)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkfs -t ext4 /dev/sda1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mount /dev/sda1 /mnt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkdir /mnt/boot
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; mkswap /dev/sda2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; swapon /dev/sda2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;기본 OS를 /mnt에 설치하기&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pacstrap -i /mnt base linux linux-firmware sudo vim
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; genfstab -U -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab  &lt;span class=&#34;c1&#34;&gt;# fstab 생성&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; cat /mnt/etc/fstab                     &lt;span class=&#34;c1&#34;&gt;# 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; arch-chroot /mnt                       &lt;span class=&#34;c1&#34;&gt;# root를 /mnt로 변경 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime  &lt;span class=&#34;c1&#34;&gt;# timezone&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; timedatectl set-ntp &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# ntp로 시간 동기화&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; hwclock --systohc         &lt;span class=&#34;c1&#34;&gt;# 하드웨어 시간도 맞춤&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; date                      &lt;span class=&#34;c1&#34;&gt;# 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; vim /etc/locale.gen       &lt;span class=&#34;c1&#34;&gt;# en_US.UTF-8, ko_KR.UTF-8 주석 제거&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; locale-gen                &lt;span class=&#34;c1&#34;&gt;# 로케일 설정 및 파일 생성&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;LANG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;en_US.UTF-8 &amp;gt;  /etc/locale.conf      &lt;span class=&#34;c1&#34;&gt;# 로케일 설정&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;host_name&amp;#34;&lt;/span&gt; &amp;gt; /etc/hostname  &lt;span class=&#34;c1&#34;&gt;# 호스트명 등록&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/hosts            &lt;span class=&#34;c1&#34;&gt;# hosts파일 등록&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;127.0.0.1        localhost
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;::1              localhost
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; passwd                    &lt;span class=&#34;c1&#34;&gt;# root 패스워드 설정&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; useradd -m -G wheel -s /bin/bash borisu  &lt;span class=&#34;c1&#34;&gt;# 사용자 등록&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; passwd borisu                            &lt;span class=&#34;c1&#34;&gt;# 사용자 패스워드 설정&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; vim /etc/sudoers                         &lt;span class=&#34;c1&#34;&gt;# borisu ALL=(ALL) ALL 추가 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pacman -S grub                       &lt;span class=&#34;c1&#34;&gt;# grub 패키지 설치&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; grub-install /dev/sda                &lt;span class=&#34;c1&#34;&gt;# grub 디스크에 설치&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; grub-mkconfig -o /boot/grub/grub.cfg &lt;span class=&#34;c1&#34;&gt;# 설정파일 만들기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; ls /boot                             &lt;span class=&#34;c1&#34;&gt;# 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; pacman -S networkmanager          &lt;span class=&#34;c1&#34;&gt;# 네트웍 매니저 설치&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; NetworkManager   &lt;span class=&#34;c1&#34;&gt;# 부팅시 자동 실행&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;# 나가기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;umount -R /mnt    # 언마운트
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;reboot            # 재부팅
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;재부팅-후-네트웍-재설정&#34;&gt;재부팅 후 네트웍 재설정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;최초로 부팅시 한 번만 등록해 주면 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo nmcli dev wifi connect &amp;lt;wifi-ssid&amp;gt; password &amp;lt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;wifi-passowrd&amp;#39;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;추가-패키지-설치&#34;&gt;추가 패키지 설치&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo pacman -Syu
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo pacman -S base-devel man-db man-pages wget neovim 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;kde-플라즈마-gui-설치&#34;&gt;KDE 플라즈마 GUI 설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;설치 중에 물어보는 것은 모두 디폴트로 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo pacman -S xorg plasma plasma-wayland-session kde-applications firefox
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; sddm   &lt;span class=&#34;c1&#34;&gt;# Enable Display Drivers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo reboot                  &lt;span class=&#34;c1&#34;&gt;# 재부팅&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;한글-환경-구성&#34;&gt;한글 환경 구성&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo pacman -S noto-fonts-cjk ttf-dejavu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고-사항&#34;&gt;참고 사항&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;가급적 패키지는 &lt;code&gt;pacman&lt;/code&gt;으로 설치한다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aur&lt;/code&gt; 패키지는 꼭 필요한 경우만 설치하고 관리자로 &lt;code&gt;yay&lt;/code&gt;를 쓴다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How to Install Arch Linux 2021
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://techofide.com/blogs/how-to-install-arch-linux-2021-installation-guide-techofide/&#34;&gt;https://techofide.com/blogs/how-to-install-arch-linux-2021-installation-guide-techofide/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;아치리눅스 위키 &lt;a href=&#34;https://wiki.archlinux.org&#34;&gt;https://wiki.archlinux.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Linux</title>
      <link>https://neosolaris.github.io/posts/linux/</link>
      <pubDate>Sat, 03 Sep 2022 01:39:14 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/linux/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../ubuntu-install&#34;&gt;ubuntu install&lt;/a&gt; - 우분투 설치&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../ubuntu-firefox&#34;&gt;ubuntu firefox&lt;/a&gt; - 우분투에서 파이어폭스 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Archlinux&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../archlinux-install&#34;&gt;archlinux install&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alpine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../alpine-lua-language-server&#34;&gt;alpine lua language server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>GitHub에 SSH Key로 인증하기</title>
      <link>https://neosolaris.github.io/posts/github-ssh-key-%EC%9D%B8%EC%A6%9D/</link>
      <pubDate>Tue, 23 Aug 2022 18:35:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/github-ssh-key-%EC%9D%B8%EC%A6%9D/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Laste Updated: 2022.08.17&lt;/li&gt;
&lt;li&gt;깃허브에서 정책이 변경되어 비밀번호로 인증을 더이상 지원하지 않는다.&lt;/li&gt;
&lt;li&gt;다른 인증 방법은 github의 보안키 발급과 ssh key를 등록하는 방법이 있다.&lt;/li&gt;
&lt;li&gt;여기에서는 ssh key를 만들어 github에 등록하여 사용하는 방법이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;create-ssh-key-enter-enter-enter&#34;&gt;CREATE SSH KEY: enter, enter, enter&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../rsa&#34;&gt;rsa&lt;/a&gt;로 키를 만들 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ssh-keygen -t rsa -b 4096 -C $email
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ls ~/.ssh/id_rsa      #private key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ls ~/.ssh/id_rsa.pub  #public key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../ed25519&#34;&gt;ed25519&lt;/a&gt;로 키를 만들 경우 (추천: 보다 간결하고 강화된 방식)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ssh-keygen -t ed25519 -C “yourmail@mail.com”
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ls ~/.ssh/id_ed25519      #private key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ls ~/.ssh/id_ed25519.pub  #public key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;생성한-pub-키를-github에-등록하기&#34;&gt;생성한 pub 키를 GitHub에 등록하기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;생성한 키 중 pub키를 복사한다.&lt;/li&gt;
&lt;li&gt;깃허브에 로그인하여 다음 메뉴를 찾아 클릭.
|Github Home &amp;gt; Settings &amp;gt; SSH and GPG Keys &amp;gt; New SSH Key&lt;/li&gt;
&lt;li&gt;Title에 제목을 입력하고 &amp;ldquo;Add SSH Key&amp;quot;를 눌러 등록 완료.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;터미널에서-새로운-프로토콜ssh-인증방식으로-연결&#34;&gt;터미널에서 새로운 프로토콜(SSH 인증방식)으로 연결&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;깃허브에 성공적으로 연결되는 지 확인&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ssh -T git@github.com
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;깃허브에 연결 및 저장소 등록&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;git remote set-url origin git@github.com:user_name/repo_name.git
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;comment&#34;&gt;Comment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;이 방식은 https방식보다 간결한 URL과 편리한 사용법이 좋다.&lt;/li&gt;
&lt;li&gt;또한 깃허브로부터 인증키를 받는 방식은 기간제한이 있다.&lt;/li&gt;
&lt;li&gt;다른 컴퓨터에서 연결할 경우 ssh 키를 만들어 pub키를 깃허브에 추가해주면 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/ntust-aivc/instruction-for-adding-an-ssh-key-to-your-github-account-ubuntu20-04-3-lts-f9f7802ed734&#34;&gt;https://medium.com/ntust-aivc/instruction-for-adding-an-ssh-key-to-your-github-account-ubuntu20-04-3-lts-f9f7802ed734&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>KIME (Korean IME) 한글 입력기</title>
      <link>https://neosolaris.github.io/posts/kime/</link>
      <pubDate>Tue, 23 Aug 2022 18:35:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/kime/</guid>
      <description>&lt;h2 id=&#34;설치-및-설정&#34;&gt;설치 및 설정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;아래한글 한컴오피스는 리눅스용 2020 베타버전이 나와있다.&lt;/li&gt;
&lt;li&gt;그러나 기존 한글입력기로는 한글입력에 많은 문제가 있다.&lt;/li&gt;
&lt;li&gt;kime은 이 뿐만 아니라 wine등에서 한글입력 문제 등을 해결할 수 있는 방법이다.&lt;/li&gt;
&lt;li&gt;kime의 장점은 매우 간결하고 심플하다는 데 있다.&lt;/li&gt;
&lt;li&gt;또 다른 장점은 vim 사용시 입력모드에서 한글 사용 중 &lt;code&gt;esc&lt;/code&gt;로 명령모드로 들어가게 되면 영문으로 자동 변환된다. 한영 전환의 수고가 줄어든다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; install
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sudo dpkg -i kime_debian-buster_v2.5.3_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt; setup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sudo mkdir -p /etc/dpkg/kime
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sudo cp /usr/share/doc/kime/default_config.yaml /etc/xdg/kime/config.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sudo vim /etc/xdg/kime/config.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;golbal_hotkeys:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;#&lt;/span&gt;   Super-Space &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;이하여섯줄 복사해서 바로 위에 붙이고 S-Space로 수정&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;go&#34;&gt;im-config -n kime
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sudo reboot # 재부팅 후 로그인
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; kime-check
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;한컴오피스-2020-베타-리눅스-버전-한글입력을-위한-설정&#34;&gt;한컴오피스 2020 베타 리눅스 버전 한글입력을 위한 설정&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ wget https://github.com/Riey/kime/releases/download/v2.5.2/libkime-qt-5.11.3.so
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo cp libkime-qt-5.11.3.so /opt/hnc/hoffice11/Bin/qt/plugins/platforminputcontexts/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;한글이 안되어 이것저것 만지다보면 문제가 생긴다.&lt;/li&gt;
&lt;li&gt;다음의 순서대로 설정한다. OS 언어환경을 en으로 유지하는 것이 가장 좋다.
&lt;ol&gt;
&lt;li&gt;ubuntu 설치를 한글로 진행하면 필요한 폰트나 입력설정이 된다.&lt;/li&gt;
&lt;li&gt;최초 로그인해서 설정&amp;gt;지역&amp;amp;언어로 들어가면 안내하는 필요패키지를 설치한다.&lt;/li&gt;
&lt;li&gt;kime 패키지를 설치한다. (sudo dpkg -i kime-xxx.deb)&lt;/li&gt;
&lt;li&gt;settings&amp;gt; keybord &amp;gt; input sources에는 English(US)와 Korean만 등록해둔다.&lt;/li&gt;
&lt;li&gt;settings&amp;gt; Region&amp;amp;Language &amp;gt; Manage Installed Languages &amp;gt; kime으로 변경&lt;/li&gt;
&lt;li&gt;reboot후 확인&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;위에서 키보드에서 Korean을 설정해주어야 indicator 아이콘이 보인다.&lt;/li&gt;
&lt;li&gt;kime으로 변경하면 firefox snap에서 동작하지 않으므로 firefox 재설치 작업&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;REFERENCE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../https://github.com/Riey/kime&#34;&gt;Github Kime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../https://shanepark.tistory.com/318&#34;&gt;설치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../https://www.linuxcapable.com/how-to-install-wine-on-debian-11-bullseye&#34;&gt;설치2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../https://dawoum.tistory.com/88&#34;&gt;설치3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../http://no1linux.org/board_WEnl84/39530&#34;&gt;설치4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>MPD Music Player Daemon</title>
      <link>https://neosolaris.github.io/posts/mpd/</link>
      <pubDate>Tue, 23 Aug 2022 18:35:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/mpd/</guid>
      <description>&lt;h2 id=&#34;mpd-clients-cli&#34;&gt;Mpd Clients CLI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../mpc&#34;&gt;mpc&lt;/a&gt; : 가장 간단한 프로그램&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../mmtc&#34;&gt;mmtc&lt;/a&gt; : &lt;a href=&#34;../rust&#34;&gt;rust&lt;/a&gt; 로 작성된 심플한 프로그램&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../ncmpc&#34;&gt;ncmpc&lt;/a&gt; : c++로 작성, ncurse를 이용한 프로그램&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../ncmpcpp&#34;&gt;ncmpcpp&lt;/a&gt; : ncmpc를 더욱 발전시킴, 제일 기능이 많고 편하고 마음에 든다.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>NCMPCPP - NCurses Music Player Client (Plus Plus)</title>
      <link>https://neosolaris.github.io/posts/ncmpcpp/</link>
      <pubDate>Tue, 23 Aug 2022 18:35:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/ncmpcpp/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;2023-08-25: 문서 수정, 사용법 Usage 추가&lt;/li&gt;
&lt;li&gt;설치하고 기본설정으로 사용하여도 무난하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sudo apt install ncmpcpp
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;ncmpcpp --version
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;설정파일 편집&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;vim ~/.config/ncmpcpp/config
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;설정파일 내용&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mpd_host = 192.168.1.100
mpd_port = 6600

# Enabling visualization (mpd 호스트 내에서만 동작가능)
visualizer_data_source = &amp;#34;/tmp/mpd.fifo&amp;#34;
visualizer_output_name = &amp;#34;my_fifo&amp;#34;
visualizer_in_stereo = &amp;#34;yes&amp;#34;
visualizer_type = &amp;#34;spectrum&amp;#34;
visualizer_look = &amp;#34;+|&amp;#34;
visualizer_look = &amp;#34;●▮&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;설정에 관한 보다 자세한 예시&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/share/doc/ncmpcpp/example/config&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;enableing-visualization&#34;&gt;Enableing Visualization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;음악감상시 비주얼한 음변화를 볼 수 있는 기능&lt;/li&gt;
&lt;li&gt;이 기능을 위해 위의 주석을 제거하고 실행한다.&lt;/li&gt;
&lt;li&gt;단, mpd와 동일한 시스템에서 가능하다.&lt;/li&gt;
&lt;li&gt;/etc/mpd.conf 에 다음과 같이 설정하고 mpd를 재실행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;audio_output {
    type                    &amp;#34;fifo&amp;#34;
    name                    &amp;#34;my_fifo&amp;#34;
    path                    &amp;#34;/tmp/mpd.fifo&amp;#34;
    format                  &amp;#34;44100:16:2&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ncmpcpp
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;F1&lt;/code&gt; : show help&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; : show playlist ;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&lt;/code&gt; : show directory browser&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt; : show search&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt; : show library&lt;/li&gt;
&lt;li&gt;&lt;code&gt;5&lt;/code&gt; : playlist editor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;6&lt;/code&gt; : tags editor&lt;/li&gt;
&lt;li&gt;&lt;code&gt;8&lt;/code&gt; : visualizer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt; : toggle play/pause&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; : add selection to playlist&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; : play next track&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; :play previous track&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../https://wiki.archlinux.org/title/Ncmpcpp&#34;&gt;AchiLinux Ncmpcpp Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../https://github.com/ncmpcpp/ncmpcpp&#34;&gt;Ncmpcpp GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Raspberry Pi 라즈베리파이</title>
      <link>https://neosolaris.github.io/posts/raspberry-pi/</link>
      <pubDate>Tue, 23 Aug 2022 18:35:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/raspberry-pi/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../raspbian-update&#34;&gt;raspbian update&lt;/a&gt; - Update Raspbian from an Older Version to Buster&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Tree Command</title>
      <link>https://neosolaris.github.io/posts/tree/</link>
      <pubDate>Tue, 23 Aug 2022 18:35:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/tree/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;우분투에서는 기본설치가 아니므로 설치.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sudo apt install tree
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tree&lt;/code&gt; &amp;ndash; show folder and file tree current directory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tree dir-name&lt;/code&gt; &amp;ndash; show folder and file tree dir-name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tree -a&lt;/code&gt; &amp;ndash; show all dir and files (hidden dir also)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tree -d&lt;/code&gt; &amp;ndash; show directory only&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tree -f&lt;/code&gt; &amp;ndash; show path prefix&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tree -o output.txt&lt;/code&gt; &amp;ndash; save result to output.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;내용이 더 있는데 아래 참고해서 정리&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../https://linuxhint.com/tree-command-in-ubuntu/&#34;&gt;Waht is Tree Command in Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Ubuntu</title>
      <link>https://neosolaris.github.io/posts/ubuntu/</link>
      <pubDate>Tue, 23 Aug 2022 18:35:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/ubuntu/</guid>
      <description></description>
    </item>
    <item>
      <title>Ubuntu install</title>
      <link>https://neosolaris.github.io/posts/ubuntu-install/</link>
      <pubDate>Tue, 23 Aug 2022 18:35:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/ubuntu-install/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;설치 버전: 22.04 LTS&lt;/li&gt;
&lt;li&gt;설치일: 2022.07.25&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;설치-준비&#34;&gt;설치 준비&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기존 &lt;a href=&#34;../windows11&#34;&gt;윈도우11&lt;/a&gt; 에서 우분투를 위한 파티션 나누기&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../%EC%9A%B0%EB%B6%84%ED%88%AC&#34;&gt;우분투&lt;/a&gt; 설치 USB 만들기&lt;/li&gt;
&lt;li&gt;윈도우11의 디스크 보안 키값을 복사: &lt;a href=&#34;../linux&#34;&gt;리눅스&lt;/a&gt; 설치 후 윈도우11 부팅&amp;gt;    시에 문제가 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;설치하기&#34;&gt;설치하기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;준비해 둔 USB로 부팅&lt;/li&gt;
&lt;li&gt;설치 (미리 나누어 둔 파티션에 설치)&lt;/li&gt;
&lt;li&gt;설치 완료&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;설치-후-설정&#34;&gt;설치 후 설정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;한글환경 설정: 한글폰트, 시스템언어설정, 한글입력기&lt;/li&gt;
&lt;li&gt;우분투 윈도우 환경 설정&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;패키지-설치&#34;&gt;패키지 설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;devel tools: build essential, &lt;a href=&#34;../rust&#34;&gt;rust&lt;/a&gt;, python3(기본설치)&lt;/li&gt;
&lt;li&gt;utils: rsync, curl, wget, &lt;a href=&#34;../vim&#34;&gt;vim&lt;/a&gt;, &lt;a href=&#34;../nvim&#34;&gt;nvim&lt;/a&gt;, fd-find, batcat &amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blender&#34;&gt;blender&lt;/a&gt;: 최신패키지로 설치(PPA)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../firefox&#34;&gt;firefox&lt;/a&gt;: 최신패키지로 재설치(PPA) + plugins&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../freecad&#34;&gt;freecad&lt;/a&gt;: 최신패키지로 설치(default apt)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../sketchup&#34;&gt;sketchup&lt;/a&gt;: winehq(PPA) + sketchup2017make + plugins&lt;/li&gt;
&lt;li&gt;vim, nvim plugins 설치 및 설정&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Zsh</title>
      <link>https://neosolaris.github.io/posts/zsh/</link>
      <pubDate>Tue, 23 Aug 2022 18:35:04 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/zsh/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../zsh-install&#34;&gt;zsh install&lt;/a&gt; - zsh 설치 및 설정&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
