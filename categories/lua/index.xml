<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Lua on Borisu Wiki Home</title>
    <link>https://neosolaris.github.io/categories/lua/</link>
    <description>Recent content in Lua on Borisu Wiki Home</description>
    <image>
      <title>Borisu Wiki Home</title>
      <url>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.2</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Jun 2025 16:49:56 +0900</lastBuildDate>
    <atom:link href="https://neosolaris.github.io/categories/lua/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lua Emoji - 루아 이모지</title>
      <link>https://neosolaris.github.io/posts/lua_emoji/</link>
      <pubDate>Thu, 26 Jun 2025 16:49:56 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/lua_emoji/</guid>
      <description>&lt;h2 id=&#34;소개-tea&#34;&gt;소개 &amp;#x1f375;&lt;/h2&gt;
&lt;p&gt;GPT-4o mini의 설명을 인용한다.&lt;/p&gt;
&lt;p&gt;이모지는 감정, 사물, 동물, 음식, 확동 등을 표현하는 작은 그림 문자이다. 주로 디지털 커뮤니케이션에서 사용되면, 텍스트 메시지, 소셜 미디어, 이메일 등에서 감정을 전달하거나 내용을 강조하는 데 도움을 준다.&lt;/p&gt;
&lt;h3 id=&#34;1-역사&#34;&gt;1. 역사&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이모지는 1990년대 일본에서 처음 사용되었으며, &amp;ldquo;이모지&amp;quot;라는 용어는 일본어로 &amp;ldquo;그림 문자&amp;quot;를 의미한다.&lt;/li&gt;
&lt;li&gt;2010년, 이모지는 Unicode 표준에 포함되어 전 세계적으로 사용될 수 있게 되었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-종류&#34;&gt;2. 종류&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;감정 이모지&lt;/strong&gt;: 😊, 😂, 😢 등 감정을 표현하는 이모지.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;사물 이모지&lt;/strong&gt;: 📱 (휴대폰), 🍎 (사과) 등 물체를 나타내는 이모지.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;동물 이모지&lt;/strong&gt;: 🐶 (강아지), 🐱 (고양이) 등 동물을 나타내는 이모지.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;음식 이모지&lt;/strong&gt;: 🍕 (피자), 🍣 (초밥) 등 음식을 나타내는 이모지.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;활동 이모지&lt;/strong&gt;: ⚽ (축구공), 🎉 (축하) 등 활동이나 이벤트를 나타내는 이모지.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-사용&#34;&gt;3. 사용&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이모지는 감정을 시각적으로 표현하여 텍스트의 의미를 강화한다.&lt;/li&gt;
&lt;li&gt;대화의 분위기를 부드럽게 하거나, 유머를 추가하는 데 사용된다.&lt;/li&gt;
&lt;li&gt;이모지는 다양한 플랫폼과 기기에서 동일한 방식으로 표시되도록 설계되었지만, 각 플랫폼에 따라 디자인이 다를 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-문화적-차이&#34;&gt;4. 문화적 차이&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이모지는 문화에 따라 다르게 해석될 수 있다. 예를 들어, 특정 이모지가 한 문화에서는 긍정적인 의미를 가질 수 있지만, 다른 문화에서는 부정적인 의미를 가질 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-최신-동향&#34;&gt;5. 최신 동향&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이모지는 지속적으로 업데이트되고 있으며, 새로운 이모지가 매년 추가된다. Unicode Consortium은 새로운 이모지를 제안하고 승인하는 역할을 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이모지는 현대 커뮤니케이션에서 중요한 역할을 하며, 사람들 간의 감정과 생각을 효과적으로 전달하는 도구로 자리 잡고 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lua - Interactive Mode</title>
      <link>https://neosolaris.github.io/posts/lua-interactive/</link>
      <pubDate>Thu, 22 Sep 2022 15:08:09 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/lua-interactive/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 2023-08-11: rlwarp + readline을 활용한 키워드 완성 기능 추가&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;코딩을 하기 전 또는 빠른 확인을 위해 인터엑티브 모드를 사용&lt;/li&gt;
&lt;li&gt;간단한 테스트나 몇가지 실험을 해보는 용도로서 좋다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ilua&lt;/code&gt;를 사용하면 jupyter console, notebook 등으로 확장할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;execute-string&#34;&gt;Execute String&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; lua -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;print(&amp;#34;hello world&amp;#34;)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;hello world
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;interactive-mode&#34;&gt;Interactive Mode&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lua -i&lt;/code&gt; 또는 &lt;code&gt;luajit -i&lt;/code&gt; 로 interactive mode로 진입&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; 옵션이 없어도 진입 가능&lt;/li&gt;
&lt;li&gt;local 변수가 다음 라인에서 인식되지 않는다. 사용할 때 주의&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-cosole&#34; data-lang=&#34;cosole&#34;&gt;$ lua -i                   -- 또는 luajit -i
&amp;gt; local a = &amp;#39;hello world&amp;#39;  -- local 변수 설정
&amp;gt; print(a)                 -- print
nil                        -- 결과: nil

&amp;gt; a = &amp;#39;hello world&amp;#39;        -- Global 변수 설정
&amp;gt; print(a)                 -- print
hello world                -- 결과: hello world

&amp;gt; os.exit()                -- 종료: 또는 Ctrl+d, Ctrl+c
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Opening Lua File&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; assert&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;loadfile&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;foo.lua&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  -- lua파일 로드
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; f&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;                             -- 실행
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; dofile&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;foo.lua&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;               -- 로드 및 실행
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; require&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mymodule&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;         -- mymodule.lua 모듈 로드
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; m.parse&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;                       -- 모듈내 함수 실행
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Load Libary Example&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- file &amp;#39;lib1.lua&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;norm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;math.sqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;twice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; dofile&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;lib1.lua&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;     -- load your library
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; norm&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3.4, 1.0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;     -- using lib1.lua functions
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; print&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;twice&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;        -- using twice functions
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Command Line Arguments (&lt;code&gt;-- /dev/null&lt;/code&gt; 옵션 주목)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; lua -i -- /dev/null one two three
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; print&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;arg&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; -- one
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; print&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;arg&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;2&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; -- two
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; print&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;arg&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; -- three
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; print&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;arg&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; -- /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;lua-luajit-line-completion-like-in-bash&#34;&gt;Lua, LuaJit line completion like in bash&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;bash에서 line completion과 유사한 기능을 구현&lt;/li&gt;
&lt;li&gt;rlwrap 활용 - &lt;code&gt;-a:always-readline&lt;/code&gt;,&lt;code&gt;-c:complete-filenames&lt;/code&gt;,&lt;code&gt;-e:extra-char-after-completion&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt install rlwrap
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;luajit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;rlwrap -ac -e &amp;#34;&amp;#34; -pRed luajit&amp;#39;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# add this line to ~/.bashrc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; luajit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; + &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; + &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;  --&amp;gt; 화살키를 이용하여 상위 명령라인을 불러 올 수 있다.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;rlwarp의 readline을 활용한 명령어 완성: Dictionary 파일을 만들고 사용.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;print local assert string ...&amp;#34;&lt;/span&gt; &amp;gt; ~/.luadict
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;luajit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;rlwrap -b &amp;#34;&amp;#34; -f $HOME/.luadic -pRed -ca -e &amp;#34;&amp;#34; luajit&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; luajit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; ass&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-&amp;gt; Press Tab Key anc Check&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ilua--with-jupyter&#34;&gt;iLua : with Jupyter&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Jupyter의 막강한 지원아래 콘솔형 인터엑티브를 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;코드완성 및 vi edit mode 그리고 변수를 직접 출력가능하다.&lt;/li&gt;
&lt;li&gt;물론 특성상 local 변수는 역시 지원되지 않는다. 현재로서는 그렇다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.local&lt;/code&gt; 이하에 jupyter 및 ilua가 설치된다.&lt;/li&gt;
&lt;li&gt;아래처럼 &lt;code&gt;vi edit mode&lt;/code&gt;를 사용하면 더욱 편리하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; pip install ilua
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;c.ZMQTerminalInteractiveShell.editing_mode=&amp;#39;vi&amp;#39;&amp;#34;&lt;/span&gt; &amp;gt; ~/.jupyter/jupyter_console_config.py
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; jupyter console -h             &lt;span class=&#34;c1&#34;&gt;# help&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; jupyter kernelspec list        &lt;span class=&#34;c1&#34;&gt;# 내장 커널 스펙 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ~/.local/bin/ilua -i lua&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;jit&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 실행&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;alias ilua=&amp;#39;ilua -i luajit&amp;#39;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc  &lt;span class=&#34;c1&#34;&gt;# luajit 전용 alias&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ilua
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lua.org/pil/1.1.html&#34;&gt;https://www.lua.org/pil/1.1.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tutorialspoint.com/command-line-arguments-in-lua&#34;&gt;https://www.tutorialspoint.com/command-line-arguments-in-lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lua-users.org/wiki/InteractiveLua&#34;&gt;https://lua-users.org/wiki/InteractiveLua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/guysv/ilua&#34;&gt;https://github.com/guysv/ilua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jupyter-console.readthedocs.io/en/latest/config_options.html&#34;&gt;https://jupyter-console.readthedocs.io/en/latest/config_options.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
