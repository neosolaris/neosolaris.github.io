<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Iot on Borisu Wiki Home</title>
    <link>https://neosolaris.github.io/tags/iot/</link>
    <description>Recent content in Iot on Borisu Wiki Home</description>
    <image>
      <title>Borisu Wiki Home</title>
      <url>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.2</generator>
    <language>en</language>
    <lastBuildDate>Tue, 19 Dec 2023 06:08:04 +0900</lastBuildDate>
    <atom:link href="https://neosolaris.github.io/tags/iot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ESP8266 vs ESP32</title>
      <link>https://neosolaris.github.io/posts/esp8266-vs-esp32/</link>
      <pubDate>Sun, 17 Dec 2023 06:50:32 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/esp8266-vs-esp32/</guid>
      <description>&lt;h2 id=&#34;비교표&#34;&gt;비교표&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;아래 링크를 참조한다. 보다 자세하고 충분한 설명이 있다.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://makeradvisor.com/esp32-vs-esp8266/&#34;&gt;https://makeradvisor.com/esp32-vs-esp8266/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;내용&lt;/th&gt;
          &lt;th&gt;ESP8266&lt;/th&gt;
          &lt;th&gt;ESP32&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;MCU&lt;/td&gt;
          &lt;td&gt;Xtensa Single-core 32-bit L106&lt;/td&gt;
          &lt;td&gt;Xtensa Dual-Core 32-bit LX6 with 600 DMIPS&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;802.11 b/g/n Wi-Fi&lt;/td&gt;
          &lt;td&gt;HT20&lt;/td&gt;
          &lt;td&gt;HT40&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Bluetooth&lt;/td&gt;
          &lt;td&gt;X&lt;/td&gt;
          &lt;td&gt;Bluetooth 4.2 and BLE&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Typical Frequency&lt;/td&gt;
          &lt;td&gt;80 MHz&lt;/td&gt;
          &lt;td&gt;160 MHz&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SRAM&lt;/td&gt;
          &lt;td&gt;X&lt;/td&gt;
          &lt;td&gt;✓&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Flash&lt;/td&gt;
          &lt;td&gt;X&lt;/td&gt;
          &lt;td&gt;✓&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GPIO&lt;/td&gt;
          &lt;td&gt;17&lt;/td&gt;
          &lt;td&gt;36&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Hardware /Software PWM&lt;/td&gt;
          &lt;td&gt;None / 8 channels&lt;/td&gt;
          &lt;td&gt;None / 16 channels&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SPI/I2C/I2S/UART&lt;/td&gt;
          &lt;td&gt;2/1/2/2&lt;/td&gt;
          &lt;td&gt;4/2/2/2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ADC&lt;/td&gt;
          &lt;td&gt;10-bit&lt;/td&gt;
          &lt;td&gt;12-bit&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;CAN&lt;/td&gt;
          &lt;td&gt;X&lt;/td&gt;
          &lt;td&gt;✓&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Ethernet MAC Interface&lt;/td&gt;
          &lt;td&gt;X&lt;/td&gt;
          &lt;td&gt;✓&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Touch Sensor&lt;/td&gt;
          &lt;td&gt;X&lt;/td&gt;
          &lt;td&gt;✓&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Temperature Sensor&lt;/td&gt;
          &lt;td&gt;X&lt;/td&gt;
          &lt;td&gt;✓(old versions)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Working Temperature&lt;/td&gt;
          &lt;td&gt;-40ºC to 125ºC&lt;/td&gt;
          &lt;td&gt;-40ºC to 125ºC&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Hall effect sensor&lt;/td&gt;
          &lt;td&gt;X&lt;/td&gt;
          &lt;td&gt;✓&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Price	$&lt;/td&gt;
          &lt;td&gt;(3$ – $6)&lt;/td&gt;
          &lt;td&gt;($6 – $12)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;개발보드&#34;&gt;개발보드&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ESP32
&lt;img alt=&#34;ESP32&#34; loading=&#34;lazy&#34; src=&#34;../https://makeradvisor.com/wp-content/uploads/2018/04/ESP32-DOIT-DEVKIT-V1-Board-Pinout-36-GPIOs-Copy.jpg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fritzing</title>
      <link>https://neosolaris.github.io/posts/fritzing/</link>
      <pubDate>Wed, 13 Dec 2023 11:49:32 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/fritzing/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;nodemcu나 arduino를 이용한 회로 설계에 활용&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;깃허브 개발용을 설치
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fritzing/fritzing-app/releases&#34;&gt;https://github.com/fritzing/fritzing-app/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;자신의 OS에 맞는 것을 선택 (ex. Windows: fritzing-xxx-develop-548.windows.64.zip)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;압축을 풀고 적당한 곳에 옮긴 후 실행파일을 바탕화면에 링크복사&lt;/li&gt;
&lt;li&gt;실행
&lt;ul&gt;
&lt;li&gt;parts관련 업데이트 창: clean parts선택 후 업데이트&lt;/li&gt;
&lt;li&gt;windows User Files Folder: &lt;code&gt;C:\Users\사용자명\OneDrive\문서\Fritzing&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nodemcu-parts-등록하기&#34;&gt;Nodemcu parts 등록하기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기본 설치시 esp32, esp8266이 없으므로 사용자 등록을 해준다.&lt;/li&gt;
&lt;li&gt;[esp32-parts]
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forum.fritzing.org/uploads/default/original/2X/8/8d99adbb2e8f966178bdb46f5cffa7bd72ce2c2a.fzpz&#34;&gt;https://forum.fritzing.org/uploads/default/original/2X/8/8d99adbb2e8f966178bdb46f5cffa7bd72ce2c2a.fzpz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[esp8266-parts]
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog-cms.tasnimzotder.com/content/files/2022/01/NodeMCU-V1.0-1.fzpz&#34;&gt;https://blog-cms.tasnimzotder.com/content/files/2022/01/NodeMCU-V1.0-1.fzpz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;다운받은 파일을 우측상단 Parts 패널의 &lt;code&gt;부메뉴&amp;gt;import&lt;/code&gt;를 클릭하여 로드한다.&lt;/li&gt;
&lt;li&gt;Parts 패널에 &lt;code&gt;Mine&amp;gt;My parts&lt;/code&gt;에 등록된 것을 확인한다.&lt;/li&gt;
&lt;li&gt;import하여 등록한 parts는 &lt;code&gt;C:\Users\사용자명\OneDrive\문서\Fritzing&lt;/code&gt; 이하에 저장된다.&lt;/li&gt;
&lt;li&gt;따라서 이를 백업해두면 나중에 쉽게 자신의 환경을 복원할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;REFERENCE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fritzing Home: &lt;a href=&#34;https://fritzing.org/&#34;&gt;https://fritzing.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fritzing Github: &lt;a href=&#34;https://github.com/fritzing/fritzing-app&#34;&gt;https://github.com/fritzing/fritzing-app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;learning Fritzing: &lt;a href=&#34;https://fritzing.org/learning/&#34;&gt;https://fritzing.org/learning/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>esp32</title>
      <link>https://neosolaris.github.io/posts/esp32/</link>
      <pubDate>Wed, 13 Dec 2023 11:16:22 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/esp32/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;기본 정보&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Espressif Systems 제조, 2016년 출시&lt;/li&gt;
&lt;li&gt;Wi-Fi와 블루투스 무선 통신 기능을 탑재한 저전력 마이크로컨트롤러&lt;/li&gt;
&lt;li&gt;강력한 퍼포먼스, 고성능 어플리케이션 처리&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../esp8266&#34;&gt;esp8266&lt;/a&gt;의 업그레이드 버전&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;스펙&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU - Xtensa® single-/dual-core 32-bit LX6 microprocessor(s)&lt;/li&gt;
&lt;li&gt;동작전압 - 2.7V~3.6V&lt;/li&gt;
&lt;li&gt;WIFI - 802.11b/g/n (2.4 GHz)&lt;/li&gt;
&lt;li&gt;블루투스 - v4.2 BR/EDR 및 Bluetooth LE&lt;/li&gt;
&lt;li&gt;IO(pinout) - 34&lt;/li&gt;
&lt;li&gt;RAM - 448KB&lt;/li&gt;
&lt;li&gt;SRAM - 520KB&lt;/li&gt;
&lt;li&gt;외장플래쉬 - 512KB(최소사양),OTA(on the air)최소사양(1MB)~16MB까지 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;개발을 위한 준비물&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;esp32 개발 컨트롤러 (인터넷에서 구매)&lt;/li&gt;
&lt;li&gt;nodemcu firmware - 직접 build하거나 배포된 이미지를 다운 받는다.&lt;/li&gt;
&lt;li&gt;firmware upload tool - esptool, NodeMCU-PyFlasher&lt;/li&gt;
&lt;li&gt;Esplorer - Java로 만든 GUI 개발 툴 (오픈소스, 여러 OS에 독립 실행)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;개발방법은 아두이노IDE를 통한 개발(C언어)과 nodemcu + Esplorer를 통한 개발(Lua언어)이 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>esp8266</title>
      <link>https://neosolaris.github.io/posts/esp8266/</link>
      <pubDate>Wed, 13 Dec 2023 11:16:22 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/esp8266/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;기본 정보
&lt;ul&gt;
&lt;li&gt;Espressif Systems 제조, 2014 출시&lt;/li&gt;
&lt;li&gt;Wi-Fi 무선 통신 기능을 탑재한 저전력 마이크로컨트롤러&lt;/li&gt;
&lt;li&gt;저렴한 가격, IoT구현을 위한 최적의 컨트롤러&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;스펙
&lt;ul&gt;
&lt;li&gt;CPU - Tensilica Xtensa® L106(Diamond Standard 106Micro) @80/160MHz (32-bit RISC)&lt;/li&gt;
&lt;li&gt;동작전압 - 2.7V~3.6V&lt;/li&gt;
&lt;li&gt;WIFI - 802.11 b/g/n(HT20) 프로토콜&lt;/li&gt;
&lt;li&gt;IO(pinout) - 17&lt;/li&gt;
&lt;li&gt;RAM - 160KB(iRAM64KB,dRAM96KB)&lt;/li&gt;
&lt;li&gt;SRAM - 1KB&lt;/li&gt;
&lt;li&gt;외장플래쉬 - 512KB(최소사양),OTA(on the air)최소사양(1MB)~16MB까지 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;개발을 위한 준비물
&lt;ul&gt;
&lt;li&gt;esp8266 개발 컨트롤러 (인터넷에서 구매)&lt;/li&gt;
&lt;li&gt;nodemcu firmware - 직접 build하거나 만들어진 이미지를 다운 받는다.&lt;/li&gt;
&lt;li&gt;firmware upload tool - esptool, NodeMCU-PyFlasher&lt;/li&gt;
&lt;li&gt;Esplorer - Java로 만든 GUI 개발 툴 (오픈소스, 여러 OS에 독립 실행)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;esp8266 개발보드 비교 - &lt;a href=&#34;https://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/&#34;&gt;https://frightanic.com/iot/comparison-of-esp8266-nodemcu-development-boards/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;개발방법은 아두이노IDE를 통한 개발(C언어)과 nodemcu + Esplorer를 통한 개발(Lua언어)이 있다.&lt;/li&gt;
&lt;li&gt;전자는 인터넷에 많은 자료와 예제가 있으므로 이를 참조한다.&lt;/li&gt;
&lt;li&gt;여기에서는 nodemcu(Lua base Firmware) + Esplorer(GUI Dev Tool)에 집중한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step01-하드웨어-준비-nodemcu-esp8266-dev-kit&#34;&gt;STEP01. 하드웨어 준비: nodemcu esp8266 dev kit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;usb serial driver install - CP210x_Universal_Windows_Driver
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers&#34;&gt;https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;장치 연결 확인
&lt;ul&gt;
&lt;li&gt;Windows - 장치관리자 &amp;gt; usb com serial port 확인&lt;/li&gt;
&lt;li&gt;Linux - &lt;code&gt;lsusb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;ESP8266&#34; loading=&#34;lazy&#34; src=&#34;../https://makeradvisor.com/wp-content/uploads/2020/05/ESP8266-NodeMCU-kit-12-E-pinout-gpio-pin.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>NodeMCU</title>
      <link>https://neosolaris.github.io/posts/nodemcu/</link>
      <pubDate>Wed, 13 Dec 2023 11:02:31 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/nodemcu/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;a low-cost open source IoT platform&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../arduino&#34;&gt;arduino&lt;/a&gt;와 달리 와이파이 및 블루투스 모듈 탑재&lt;/li&gt;
&lt;li&gt;사물인터넷(IoT)용 MCU 장치를 개발하는데 적합&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;종류&#34;&gt;종류&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../esp8266&#34;&gt;esp8266&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../esp32&#34;&gt;esp32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../esp8266-vs-esp32&#34;&gt;esp8266-vs-esp32&lt;/a&gt; - 비교&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;개발환경&#34;&gt;개발환경&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;아두이노 IDE (Linux, Windows, Mac)&lt;/li&gt;
&lt;li&gt;Esplorer (Linux, Windows, Mac - Java)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tools&#34;&gt;TOOLS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../esptool&#34;&gt;esptool&lt;/a&gt; - esp firmware upload, read tool&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;etc&#34;&gt;ETC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../fritzing&#34;&gt;fritzing&lt;/a&gt;을 이용하여 프로젝트를 설계하고 회로도를 그릴 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;REFERENCE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;주의 - &lt;a href=&#34;https://www.nodemcu.com&#34;&gt;www.nodemcu.com&lt;/a&gt;의 example은 오래되었으므로 아래 docs를 참고한다.&lt;/li&gt;
&lt;li&gt;esp칩 제조사 - &lt;a href=&#34;https://www.espressif.com/&#34;&gt;https://www.espressif.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;nodemcu home - &lt;a href=&#34;http://www.nodemcu.com&#34;&gt;http://www.nodemcu.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;docs esp8266 - &lt;a href=&#34;https://nodemcu.readthedocs.io/en&#34;&gt;https://nodemcu.readthedocs.io/en&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;docs esp32 - &lt;a href=&#34;https://nodemcu.readthedocs.io/en/dev-esp32/&#34;&gt;https://nodemcu.readthedocs.io/en/dev-esp32/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;faqs - &lt;a href=&#34;https://nodemcu.readthedocs.io/en/dev-esp32/lua-developer-faq/&#34;&gt;https://nodemcu.readthedocs.io/en/dev-esp32/lua-developer-faq/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
