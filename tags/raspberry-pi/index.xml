<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Raspberry-Pi on Borisu Wiki Home</title>
    <link>https://neosolaris.github.io/tags/raspberry-pi/</link>
    <description>Recent content in Raspberry-Pi on Borisu Wiki Home</description>
    <image>
      <title>Borisu Wiki Home</title>
      <url>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.2</generator>
    <language>en</language>
    <lastBuildDate>Fri, 13 Jun 2025 18:26:21 +0900</lastBuildDate>
    <atom:link href="https://neosolaris.github.io/tags/raspberry-pi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Update Raspbian from an Older Version to Buster - 라즈비안 업그레이드</title>
      <link>https://neosolaris.github.io/posts/raspbian-update/</link>
      <pubDate>Sat, 26 Aug 2023 16:56:05 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/raspbian-update/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;오랫동안 사용했던 음악플레이(mpd) 전용 raspbian을 재설치하지 않고 업그레이드 하는 방법이다.&lt;/li&gt;
&lt;li&gt;물론 잘 동작하지 않을 수도 있다. 중요 설정파일을 먼저 백업해두고 시작하는 것이 좋겠다.&lt;/li&gt;
&lt;li&gt;그간의 설정과 환경 구성을 변경하지 않고, 재설치 하지 않고 이를 해결할 수 있다.&lt;/li&gt;
&lt;li&gt;mpc나 기타 클라이언트 프로그램이 최신 mpd (최소 0.21 Version)를 요구하는 것을 계기로 이 문서를 정리하게 되었다.&lt;/li&gt;
&lt;li&gt;현재의 stretch를 buster로 변경한다.&lt;/li&gt;
&lt;li&gt;중간 중간에 물어보는 것이 많으니 지켜보고 확인해주어야한다. 시간은 30여분 정도 소요된다.&lt;/li&gt;
&lt;li&gt;언젠가 새로 설치할 때는 최신 raspios를 설치하고 설정한 후에 문서로 정리할 예정이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;howto&#34;&gt;Howto&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;아래 두 파일을 stretch -&amp;gt; buster로 변경&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo vi /etc/apt/sources.list
$ sudo vi /etc/apt/sources.list.d/raspi.list
$ sudo apt update
$ sudo apt dist-upgrade
$ sudo reboot
...
$ cat /etc/os-release
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Update Raspberry Pi - &lt;a href=&#34;https://phoenixnap.com/kb/update-raspberry-pi&#34;&gt;https://phoenixnap.com/kb/update-raspberry-pi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Raspberry-Pi에서 lua 개발 환경 설치</title>
      <link>https://neosolaris.github.io/posts/lua-pi/</link>
      <pubDate>Tue, 13 Sep 2022 17:19:34 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/lua-pi/</guid>
      <description>&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../luarocks&#34;&gt;luarocks&lt;/a&gt; 를 이용하지 않고 필요한 모듈만 설치해서 사용하고자 할 때&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; sudo apt update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt upgrade
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; apt install git build-essensial       &lt;span class=&#34;c1&#34;&gt;#git, gcc, make 환경 필요&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; apt install lua5.1.0 liblua5.1.0      &lt;span class=&#34;c1&#34;&gt;#lua module 컴파일시 liblua 필요&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git clone https://github.com/lunarmodules/luafilesystem.git &lt;span class=&#34;c1&#34;&gt;#luafilesystem 소스 복사&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; luafilesystem
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; make      &lt;span class=&#34;c1&#34;&gt;# gcc, make, liblua5.1.x 필요 조건&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; cp src/lfs.so  your_devel_directory/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; your_devel_directory/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; vim myprogram.lua
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;require&amp;#39;lfs&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;luastatic-설치&#34;&gt;LuaStatic 설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;방법1: &lt;code&gt;luastatic.lua&lt;/code&gt; 자신을 컴파일해서 바이너리로 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git clone https://github.com/ers35/luastatic.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; luastatic/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; uastatic.lua luastatic.lua /usr/lib/arm-linux-gnueabihf/liblua5.1.a -I/usr/include/lua5.1/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./luastatic  &lt;span class=&#34;c1&#34;&gt;# 바이너리 실행 및 버전 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;방법2: &lt;code&gt;luastatic.lua&lt;/code&gt;를 그대로 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; git clone https://github.com/ers35/luastatic.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; luastatic/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; ./luastatic.lua  &lt;span class=&#34;c1&#34;&gt;# 스크립트 실행 및 버전 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;모듈과-합쳐서-바이너리로-컴파일-하기&#34;&gt;모듈과 합쳐서 바이너리로 컴파일 하기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;luastatic.lua&lt;/code&gt; 자신은 의존성이 없으므로 ~/bin 등에 옮긴 후 사용해도 된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;myprogram.lua&lt;/code&gt;가 같은 폴더에 있는 모듈을 사용한다면 자동으로 포함해서 컴파일된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; cp luastatic.lua ~/bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;$&lt;/span&gt; luastatic.lua myprogram.lua /usr/lib/arm-linux-gnueabihf/liblua5.1.a -I/usr/include/lua5.1/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;고려-사항&#34;&gt;고려 사항&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;위의 예제처럼 컴파일 환경을 만들고 모듈을 만들어 &lt;code&gt;require&lt;/code&gt;해서 사용.&lt;/li&gt;
&lt;li&gt;여러 모듈과 &lt;code&gt;main.lua&lt;/code&gt;가 있을 경우 이를 하나로 합쳐 바이너리로 만든다.&lt;/li&gt;
&lt;li&gt;또는 파일을 설치하고 실행환경을 만들어 준다. 이에 대해서는 나중에 추가할 예정.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
