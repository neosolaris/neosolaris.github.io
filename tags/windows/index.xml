<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Windows on Borisu Wiki Home</title>
    <link>https://neosolaris.github.io/tags/windows/</link>
    <description>Recent content in Windows on Borisu Wiki Home</description>
    <image>
      <title>Borisu Wiki Home</title>
      <url>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://neosolaris.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 14 Jul 2025 08:23:45 +0900</lastBuildDate>
    <atom:link href="https://neosolaris.github.io/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WSL에서 Windows 폴더 마운트 시 파일 권한 문제 해결</title>
      <link>https://neosolaris.github.io/posts/wsl_automount/</link>
      <pubDate>Mon, 14 Jul 2025 08:23:45 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/wsl_automount/</guid>
      <description>&lt;h2 id=&#34;문제-설명&#34;&gt;문제 설명:&lt;/h2&gt;
&lt;p&gt;WSL에서 Windows의 폴더를 마운트할 때, 파일 권한이 기본적으로 755로 설정되는 문제 발생.
Windows에서 파일을 복사하면 755 권한으로 설정되고, WSL에서는 644로 설정됨.&lt;/p&gt;
&lt;h2 id=&#34;해결-방법&#34;&gt;해결 방법:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WSL의 설정 파일인 /etc/wsl.conf를 수정하여 마운트 시 기본 권한을 설정.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;etcwslconf-파일-수정&#34;&gt;/etc/wsl.conf 파일 수정:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[automount]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#options = &amp;#34;metadata,umask=000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;options&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;metadata,uid=1000,gid=1000,umask=022&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;설정 후 WSL을 재시작&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; wsl --shutdown
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;git-설정-변경&#34;&gt;Git 설정 변경:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;특정 리포지토리에서만 core.fileMode를 false로 설정하여 파일 권한 변경을 무시하도록 설정.&lt;/li&gt;
&lt;li&gt;리포지토리 디렉토리에서 다음 명령어 실행:
bash&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config core.fileMode &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 설정&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --get core.fileMode  &lt;span class=&#34;c1&#34;&gt;# 확인&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;또는 .git/config 파일을 직접 수정하여 [core] 섹션에 fileMode = false 추가.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;파일-권한-일괄-변경-스크립트&#34;&gt;파일 권한 일괄 변경 스크립트:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;파일을 복사한 후 권한을 일괄적으로 변경하는 스크립트를 작성하여 사용.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;find /mnt/c/path/to/your/folder -type f -exec chmod &lt;span class=&#34;m&#34;&gt;644&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Windows WSL2 Alpine Install</title>
      <link>https://neosolaris.github.io/posts/alpine_wsl2/</link>
      <pubDate>Sat, 30 Dec 2023 06:15:32 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/alpine_wsl2/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;minimum 수동 설치 방법이 있으나 데몬 서비스, docker 설치 등에 어려움이 있다.&lt;/li&gt;
&lt;li&gt;여기에서는 다음 두 가지 설치 방법을 정리한다.&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Microsoft Store - Alpine WSL Install, 2. Github - AlpineWSL Install&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;특이사항:
&lt;ul&gt;
&lt;li&gt;default shell: ash (필요하면 bash를 추가 설치: apk add bash bash-completion)&lt;/li&gt;
&lt;li&gt;grep: busybox grep (고성능의 grep이 필요하다면 추가 설치: apk add grep)&lt;/li&gt;
&lt;li&gt;sudo: doas (필요하면 추가 설치: apk add doas)&lt;/li&gt;
&lt;li&gt;openssh: openssh (필요하면 설치: apk add openssh)&lt;/li&gt;
&lt;li&gt;curl: wget은 기본 설치 (필요하면 추가설치: apk add curl)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;microsoft-store----alpine-wsl-install&#34;&gt;Microsoft Store  - Alpine WSL Install&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;참고 사항&lt;/p&gt;</description>
    </item>
    <item>
      <title>Edge - 윈도우즈 브라우저</title>
      <link>https://neosolaris.github.io/posts/edge/</link>
      <pubDate>Fri, 08 Sep 2023 15:13:16 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/edge/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;이것을 사용하는 이유는 어쩔 수 없이 관공서나 금융권 때문이다.&lt;/li&gt;
&lt;li&gt;한국의 후진적인 공인인증서제도와 윈도우즈 중심 사용으로 인한 폐해가 아닐까 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;다크모드-dark-mode-변경&#34;&gt;다크모드 Dark mode 변경&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;모양변경: 설정 &amp;gt; 브라우저 디스플레이&amp;gt; 모양 사용자 지정 &amp;gt; 어둡게&lt;/li&gt;
&lt;li&gt;웹페이지변경: 브라우저 창에 다음과 같이 입력 후 재실행&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;edge://flags/#enable-force-dark
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Docker on Windows - 윈도우즈에서 도커 설치 및 사용</title>
      <link>https://neosolaris.github.io/posts/docker-windows/</link>
      <pubDate>Thu, 03 Aug 2023 17:04:47 +0900</pubDate>
      <guid>https://neosolaris.github.io/posts/docker-windows/</guid>
      <description>&lt;h2 id=&#34;개요&#34;&gt;개요&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;윈도우즈에서 도커를 사용하는 방법을 설명한다.&lt;/li&gt;
&lt;li&gt;이것으로써 윈도우, 리눅스의 모든 환경에서 도커의 범용성과 안정성이 확보된다.&lt;/li&gt;
&lt;li&gt;즉, 개발환경, 테스트환경, 실행환경의 일관성을 갖게 된다.&lt;/li&gt;
&lt;li&gt;첫째는 &lt;code&gt;WSL2 + Git Bash + Docker Desktop&lt;/code&gt;를 결합하여 사용하는 방법이다.&lt;/li&gt;
&lt;li&gt;둘째는 &lt;code&gt;WSL2 + Alpine&lt;/code&gt;를 설치하고 알파인 리눅스에서 &lt;code&gt;git + docker&lt;/code&gt;의 형태로 사용하는 방법이다.&lt;/li&gt;
&lt;li&gt;두번째 방법이 조금 복잡해 보이긴 하나 훨씬 처리가 간결하고 적은 리소스와 빠른 실행 속도가 돋보인다.&lt;/li&gt;
&lt;li&gt;또한 리눅스 기반이므로 파일시스템 문제, 퍼미션 문제, 경로 처리 문제 등에서 훨씬 쉽고 편한 환경이므로 두번째 방법에 대해서 상술한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;windows-wsl2-공통-기반-설정&#34;&gt;Windows WSL2 공통 기반 설정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;설치환경: Windows 11&lt;/li&gt;
&lt;li&gt;Bios 설정: 바이오스에서 가상머신 지원(Virtual Machine Support) 여부를 선택한다.&lt;/li&gt;
&lt;li&gt;WSL2를 확인하고 필요하면 업데이트한다. (PowerShell:관리자권한으로)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; wsl -l -v    &lt;span class=&#34;c1&#34;&gt;# Version Check&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gp&#34;&gt;&amp;gt;&lt;/span&gt; wsl --update &lt;span class=&#34;c1&#34;&gt;# wsl2 upgrade or update&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;nerd-font-설치&#34;&gt;Nerd Font 설치&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;터미널에서 아이콘 등 nerd font가 표시되고 코딩시 가독성을 높이기 위해서 설치&lt;/li&gt;
&lt;li&gt;MeslsLGS NF Install
&lt;a href=&#34;https://github.com/fontmgr/MesloLGSNF&#34;&gt;https://github.com/fontmgr/MesloLGSNF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;D2Coding (코딩용 영문 한글 지원: 하지만 이것은 Nerd Font가 아니다.)
&lt;a href=&#34;https://github.com/naver/d2codingfon&#34;&gt;https://github.com/naver/d2codingfon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;wsl2--git-bash--docker-desktop&#34;&gt;WSL2 + Git Bash + Docker Desktop&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Docker Desktop&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
